webpackJsonp([0x81b8806e4260],{494:function(e,t){e.exports={data:{site:{siteMetadata:{title:"Merlin Tec Blog"}},allMarkdownRemark:{edges:[{node:{excerpt:"Rollup Setting & babel Setting 간단한 스크립트 개발 셋팅을 위한 rollup 과 babel 셋팅을 정리해둡니다. Rollup production setting rollup 셋팅시 다음과 같은 plugin…",fields:{slug:"/hello-rollup/"},frontmatter:{date:"25 November, 2019",title:"Hello Rollup"}}},{node:{excerpt:"React 정리 리액트가 동작하는 방법 (요약) react는 모든 요소를 생성해서 해당 되는 dom에 밀어 넣는다. react는 소스코드에 처음부터 HTML을 넣지 않고, HTML에서 HTML을 추가하거나 제거하는 법을 알고있다. 빈 HTML…",fields:{slug:"/hello-react/react/"},frontmatter:{date:"20 November, 2019",title:"React 정리"}}},{node:{excerpt:"Enzyme 이 글은 아래 링크에 있는 글을 의역 했습니다.\n 참조 엔자임은 리엑트를 위한 Javascript Testing…",fields:{slug:"/hello-enzyme/"},frontmatter:{date:"18 November, 2019",title:"Hello Enzyme"}}},{node:{excerpt:"이 글은 아래 링크에 있는 글을 의역 했습니다.\n 참조 Test Types 일반적으로 웹사이트를 위한 아주 중요한 테스트 타입들은 다음과 같다. Unit Tests  - 입력을 제공하고 출력이 예상한것과 같은지 확인하여 function…",fields:{slug:"/hello-testing/"},frontmatter:{date:"14 November, 2019",title:"Hello Testing (작성중..)"}}},{node:{excerpt:"이글 을 번역(의역)한 것입니다.  Webpack Tutorial: Understanding How it Works Introduction to Webpack Tutorial Webpack…",fields:{slug:"/hello-webpack/webpack-understanding/"},frontmatter:{date:"Invalid date",title:"webpack-understanding"}}},{node:{excerpt:"지리 공간 정보 시각화 지리 공간 데이터는 흔히 접할 수 있는 데이터 범주로서, 도나 군 등 행정구역 형태나, 도시 혹은 사람이 트윗한 장소, 지표면 위성 사진 등의 형태로 제공할 수 있다. 구글 API…",fields:{slug:"/hello-d3/geo/"},frontmatter:{date:"16 October, 2019",title:"hello-geo"}}},{node:{excerpt:"이글 은 다음글을 보고 번역한 것입니다. 만약 지난 몇년 동안 자바스크립트 프레임워크를 사용했다면 아마 ‘virtual DOM은 빠르다’는 말을 들었을 것입니다. 또한 종종  real DOM…",fields:{slug:"/virualDom-overhead/"},frontmatter:{date:"12 October, 2019",title:"Virtual DOM is pure overhead"}}},{node:{excerpt:"Intro D3는 데이터 주도 문서 (data-driven docuement)의 약자이다.\nD3.js…",fields:{slug:"/hello-d3/"},frontmatter:{date:"01 October, 2019",title:"hello-d3"}}},{node:{excerpt:"이글 을 번역 및 분석 한 글입니다. 잘못된 번역이 있을 수 있습니다. 또한 예전 코드들이 많으므로 참고만 해야 합니다. 현재 코드랑 다른점이 많이 있습니다. Under the hood of React’s hooks system…",fields:{slug:"/react-hook/hood-hook/"},frontmatter:{date:"30 July, 2019",title:"Under the hood of React Hooks"}}},{node:{excerpt:"이글 을 번역 및 분석 한 글입니다. 잘못된 번역 및 생략된 번역이 있을 수 있습니다. In-depth explanation of state and props update in React 이전 기사 인  Inside Fiber: in-depth…",fields:{slug:"/react-fiber/react-fiber03/"},frontmatter:{date:"22 July, 2019",title:"React Fiber part3"}}},{node:{excerpt:"이글 을 번역 및 분석 한 글입니다. 잘못된 번역 및 생략된 번역이 있을 수 있습니다. Inside Fiber: in-depth overview of the new reconciliation algorithm in React React…",fields:{slug:"/react-fiber/react-fiber02/"},frontmatter:{date:"19 July, 2019",title:"React Fiber part2"}}},{node:{excerpt:"이글 을 번역 및 분석 한 글입니다. 잘못된 번역이 있을 수 있습니다. Deep dive: How do React hooks really work? What are Closures? 클로져들은 JS…",fields:{slug:"/react-hook/"},frontmatter:{date:"18 July, 2019",title:"React Hooks"}}},{node:{excerpt:"이글 을 번역 및 분석 한 글입니다. 잘못된 번역 및 생략된 번역이 있을 수 있습니다. The how and why on React’s usage of linked list in Fiber to walk the component’s tree Fiber…",fields:{slug:"/react-fiber/react-fiber01/"},frontmatter:{date:"18 July, 2019",title:"React Fiber part1"}}},{node:{excerpt:"Prototype in JavaScript: it’s quirky, but here’s how it works 번역 :  https://www.freecodecamp.org/news/prototype-in-js-busted-5547ec6887…",fields:{slug:"/javascript-prototype/"},frontmatter:{date:"15 July, 2019",title:"Prototype in JavaScript"}}},{node:{excerpt:"이 글은  https://www.impressivewebs.com/javascript-try-catch/  의 번역 본입니다. 내가 javascript app 들을 개발할때 꽤 도움이 되는 한가지 기술은 Javascript  try-catch…",fields:{slug:"/try-catch/"},frontmatter:{date:"07 June, 2019",title:"Using JavaScript’s Try-Catch Statement"}}},{node:{excerpt:"이 글은 아래 링크에 있는 글을 참조 했습니다.\n 참조 Rendering DOM element 우리가 render 할 때 필요한게 뭔지 설명하기 위해 plain JS object 를 하나 만들 것입니다.\n이것을 우리는 element…",fields:{slug:"/build-react/"},frontmatter:{date:"03 June, 2019",title:"build-react"}}},{node:{excerpt:"자바스크립트는 재귀 깊이가 너무 깊어지면 오류가 발생한다. 호출 스택을 펼쳐서 재귀 호출을 루프처럼 펼쳐주는 기법을 사용하면 이런 오류를 막을 수 있다. 컴파일러는  꼬리 재귀(tail recursion…",fields:{slug:"/tail-recursion/"},frontmatter:{date:"16 May, 2019",title:"꼬리 재귀"}}},{node:{excerpt:"…",fields:{slug:"/refactoring/"},frontmatter:{date:"10 May, 2019",title:"(리팩토링) 리팩토링 요점 정리"}}},{node:{excerpt:"고전적인 방법 나쁜 예 위 예제는 이벤트 객체에서 clientX, clientY 프로퍼티만 사용한다. 이 코드만 으로는 간단하고 문제 없어 보이지만, 실제 활용하기에는 제한 사항이 많아서 사용하기 어려운 나쁜 패턴이다. 규칙…",fields:{slug:"/maintainable-javascript/event-handling/"},frontmatter:{date:"02 May, 2019",title:"(읽기 쉬운 자바스크립트) 이벤트 처리"}}},{node:{excerpt:"변수에 필요한 값이 할당되었는지 확인할 때  null 과 비교하는 방법은 흔히 잘못 사용하는 패턴이다. 위 코드는 items 변수에 sort() 와 forEach() 를 사용하는 것을 보아 items…",fields:{slug:"/maintainable-javascript/no-null-comparison/"},frontmatter:{date:"02 May, 2019",title:"(읽기 쉬운 자바스크립트) null 비교 금지"}}},{node:{excerpt:"…",fields:{slug:"/maintainable-javascript/user-error-throwing/"},frontmatter:{date:"02 May, 2019",title:"(읽기 쉬운 자바스크립트) 사용자 에러 던지기"}}},{node:{excerpt:"해당 글은  리팩토링 (코드 품질을 개선하는 객체지향 사고법)  에서 발췌 했습니다. 코드 예제는 javascript…",fields:{slug:"/refactoring/complex-refactoring/"},frontmatter:{date:"28 April, 2019",title:"(리팩토링) 복합 리팩토링"}}},{node:{excerpt:"해당 글은  리팩토링 (코드 품질을 개선하는 객체지향 사고법)  에서 발췌 했습니다. 코드 예제는 javascript…",fields:{slug:"/refactoring/generalization-processing/"},frontmatter:{date:"22 April, 2019",title:"(리팩토링) 일반화 처리"}}},{node:{excerpt:"해당 글은  리팩토링 (코드 품질을 개선하는 객체지향 사고법)  에서 발췌 했습니다. 코드 예제는 javascript…",fields:{slug:"/refactoring/simplifying-method-calls/"},frontmatter:{date:"15 April, 2019",title:"(리팩토링) 메서드 호출 단순화"}}},{node:{excerpt:"자바스크립트는 메모리에 있는 데이터 구조의 전체 접근 권한을 주지 않는다.\n하지만 언어차원에서 reference types 는 존재한다.\nvalue 와 reference types…",fields:{slug:"/value-and-reference/"},frontmatter:{date:"07 April, 2019",title:"Javascript의 Value와 Reference Types 이해"}}},{node:{excerpt:"해당 글은  리팩토링 (코드 품질을 개선하는 객체지향 사고법)  에서 발췌 했습니다. 코드 예제는 javascript 로 전환하였습니다. 조건문 쪼개기 (Decompose Conditional) 복잡한 조건문(if-then-else)이 있을땐 if…",fields:{slug:"/refactoring/concise-conditionals/"},frontmatter:{date:"03 April, 2019",title:"(리팩토링) 조건문 간결화"}}},{node:{excerpt:"번역 :  http://blog.brew.com.hk/not-everything-in-javascript-is-an-object/ 자바스크립트가 OOP(객체 지향 언어인지 함수형 언어인지 많은 혼란들이 있다. 실제로 Javascript…",fields:{slug:"/javascript-object/"},frontmatter:{date:"01 April, 2019",title:"Javascript 의 모든것은 Object 이다? 아니다?"}}},{node:{excerpt:"해당 글은  리팩토링 (코드 품질을 개선하는 객체지향 사고법)  에서 발췌 했습니다. 코드 예제는 javascript 로 전환하였습니다. 클래스의 단방향 연결을 양방향으로 전환 (Change Unidirectional Association to…",fields:{slug:"/refactoring/organization-data2/"},frontmatter:{date:"01 April, 2019",title:"(리팩토링) 데이터 체계화2"}}},{node:{excerpt:"자바스크립트 콜스택의 이해 번역 :  hocheol 원문 출처 :  https://medium.freecodecamp.org/understanding-the-javascript-call-stack-861e41ae61d…",fields:{slug:"/call-stack/"},frontmatter:{date:"27 March, 2019",title:"call stack"}}},{node:{excerpt:"해당 글은  리팩토링 (코드 품질을 개선하는 객체지향 사고법)  에서 발췌 했습니다. 코드 예제는 javascript…",fields:{slug:"/refactoring/organization-data1/"},frontmatter:{date:"27 March, 2019",title:"(리팩토링) 데이터 체계화1"}}},{node:{excerpt:"해당 글은  리팩토링 (코드 품질을 개선하는 객체지향 사고법)  에서 발췌 했습니다. 코드 예제는 javascript…",fields:{slug:"/refactoring/moving-between-object/"},frontmatter:{date:"25 March, 2019",title:"(리팩토링) 객체 간의 기능 이동"}}},{node:{excerpt:"해당 글은  리팩토링 (코드 품질을 개선하는 객체지향 사고법)  에서 발췌 했습니다. 코드 예제는 javascript 로 전환하였습니다. 메서드 추출 (Extract Method…",fields:{slug:"/refactoring/method-cleanup/"},frontmatter:{date:"20 March, 2019",title:"(리팩토링) 메서드 정리"}}},{node:{excerpt:"cookie 서버에서  Set-Cookie  라고 헤더에 셋팅을 하게 되면 브라우저는 해당 쿠키를  key=value 로 저장하게 된다.  쿠키 중에는 2가지 쿠키가 존재한다. 웹브라우저를 끄면 사라지는 휘발성 쿠키를 Session cookie…",fields:{slug:"/sop-and-cors-dnsRebinding/"},frontmatter:{date:"27 February, 2019",title:"sop와 cors 그리고 DNS Rebinding"}}},{node:{excerpt:"Intro RxJS 의 특징을 알아보고 공부하자. RxJS 의 공홈을 독파해보자. definition RxJS 는 Observables…",fields:{slug:"/hello-rxjs/"},frontmatter:{date:"28 January, 2019",title:"hello-RxJS"}}},{node:{excerpt:"Intro MobX 의 특징을 알아보고 공부하자. MobX 의 공홈을 독파해보자. Concepts State state 란 어플리케이션을 이끄는 데이터 입니다. 흔히 todo items의 list 같은  domain specific state…",fields:{slug:"/hello-mobx/"},frontmatter:{date:"31 December, 2018",title:"hello-MobX"}}},{node:{excerpt:"intro Node.js 에서 사용되는 use 함수와 redux에서 사용되는 middleware…",fields:{slug:"/hello-middleware/"},frontmatter:{date:"15 November, 2018",title:"hello middleware"}}},{node:{excerpt:"High Order Function에 대해서 생각을 적는다. 서론 기본적인 high order function (고차함수) 특성을 이해한다. high order function…",fields:{slug:"/think-highOrderFunction/"},frontmatter:{date:"05 November, 2018",title:"thinking high order function"}}},{node:{excerpt:"Goal 다양한 자바스크립트 패턴을 익히고 어느 상황에서 사용되는지 파악한다. Contents callback pattern promise pattern partial pattern memoization pattern singleton pattern…",fields:{slug:"/javascript-pattern/"},frontmatter:{date:"05 August, 2018",title:"javascript pattern"}}},{node:{excerpt:"Intro 비지니스 코드가 아닌 ui의 이벤트를 활용한 코드를 자스민으로 testing을 진행해보자. jasmine 이란? 행위 주도 개발 (Behavior-Driven Development, BDD…",fields:{slug:"/ui-unit-testing/"},frontmatter:{date:"04 August, 2018",title:"UI unit testing"}}},{node:{excerpt:"javascript promise 를 만들어보자. 동기 javascript 비동기를 다루는데 쓰이는 Promise 라는 객체가 있다. Promise 를 다루는 방법은 많지만 실제로이 객체가 어떤 방식으로 움직이는지 그 구조를 파악하면서 Promise…",fields:{slug:"/make-promise/"},frontmatter:{date:"27 July, 2018",title:"make promise"}}},{node:{excerpt:"intro 공통모듈을 한 repo 에서 관리 하는 시도를 해보자. 여러 npm 패키지를 하나의 github repo 에서 관리하자. 즉, monorepo 를 구축해서 공통모듈을 관리하는 환경을 만들자. monorepo 의 이점 lint 나 build…",fields:{slug:"/experience-monorepo/"},frontmatter:{date:"13 July, 2018",title:"experience monorepo"}}},{node:{excerpt:"…",fields:{slug:"/hello-oop/"},frontmatter:{date:"25 April, 2018",title:"hello OOP"}}},{node:{excerpt:"게으른 평가 call-by-need 라고도 불리는 이 전략 방법은 ( 반대는 call-by-name ) 값이 실제로 필요할때 평가를 하는것이다. 또한 반복적인 평가를 피하기 위해서 한번 평가해둔 자료는 기억해 둔다.(memoization…",fields:{slug:"/lazy-evaluation/"},frontmatter:{date:"05 April, 2018",title:"lazy evaluation"}}},{node:{excerpt:"패턴 연습을 위한 기본 다지기 일급 객체인 함수를 잘 다루자 함수를 인자로 받거나 함수를 리턴한다. 이것은 즉, 함수가 high order function 임을 인지한다. 위의 getX 와 getY 를 그냥 getX() / getY…",fields:{slug:"/javascript-basic1/"},frontmatter:{date:"05 April, 2018",title:"Javascript-Basic1"}}},{node:{excerpt:"Intro flow 는 자바스크립트의 스태틱한 타입들을 체크해주는 도구이다. flow 는 코드가 변경되는 동안 빠른 피드백을 줍니다. flow 는 타입을 추론할 수 있습니다.  install 바벨을 이용해서 flow…",fields:{slug:"/hello-flow/"},frontmatter:{date:"29 March, 2018",title:"hello-flow"}}},{node:{excerpt:"web Server web server 는 요청 과 응답의 연속이다. web browser에 web page주소를 입력(요청) 하면 입력한 주소에 맞는 웹 페이지(응답) 을 제공한다.  요청은 요청하는 url , 요청하는 방식 (ex. get,post…",fields:{slug:"/hello-webServer/"},frontmatter:{date:"15 March, 2018",title:"hello-webServer"}}},{node:{excerpt:"Intro 기존에 돌아가는 서버를 바라보는 dev proxy server를 띄워 부분적으로 react component를 개발하는 환경을 만들어보자. 그러기 위해서 사용하는 개발서버 webpack dev config…",fields:{slug:"/webpack-config/"},frontmatter:{date:"14 March, 2018",title:"webpack config"}}},{node:{excerpt:"Intro…",fields:{slug:"/hello-monad/"},frontmatter:{date:"13 February, 2018",title:"hello monad"}}},{node:{excerpt:"intro 웹팩을 알아보고 웹팩 번들링엔 어떤 특징이 있는지 알아보자. webpack config ( webpack version 3) webpack config ( webpack version 4) 기존과 달라졌다고 하는점은 기존에 config…",fields:{slug:"/hello-webpack/"},frontmatter:{date:"01 February, 2018",title:"Hello webpack"}}},{node:{excerpt:"intro React 리엑트를 처음 마주해보자.\n해당 정리 내용의 출처는 \n https://www.youtube.com/watch?v=GEoNiUcVwjE&list=PL9FpF z-xR GMujql3S_XGV2SpdfDBkeC…",fields:{slug:"/hello-react/"},frontmatter:{date:"31 January, 2018",title:"Hello React"}}},{node:{excerpt:"Docker Depolyment blue-green 배포 개념 로드발란서를 앞단에 하나를 두고 v1 버젼인 블루(가칭) 라는 앱을 띄운다. 그러다가 나는 v…",fields:{slug:"/docker-depolyment/"},frontmatter:{date:"20 January, 2018",title:"Docker Depolyment"}}},{node:{excerpt:"Docker term What is Docker? 소프트웨어를 containerization(컨테이너화) 한 플랫폼. ( 웹서비스 컨테이너 , 디비 컨테이너 따로 담는다고 하면 서로 isolation…",fields:{slug:"/hello-docker/"},frontmatter:{date:"09 January, 2018",title:"Hello Docker"}}}]}},pathContext:{}}}});
//# sourceMappingURL=path---index-4085bb7c9fc972d56c9d.js.map