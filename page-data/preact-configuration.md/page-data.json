{"componentChunkName":"component---src-templates-post-tsx","path":"/preact-configuration.md/","result":{"data":{"markdownRemark":{"html":"<h1 id=\"preact-rollup-babel-구성기\" style=\"position:relative;\"><a href=\"#preact-rollup-babel-%EA%B5%AC%EC%84%B1%EA%B8%B0\" aria-label=\"preact rollup babel 구성기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>preact, rollup, babel 구성기</h1>\n<p>react의 경량화 버젼인 preact를 rollup과 babel로 환경 셋팅한 경험기 입니다.\n<code class=\"language-text\">preact-cli</code> 가 존재하지만 각 설정들이 숨겨져 있고 <code class=\"language-text\">eject</code> 시키기가 어려워서 새롭게 구성했습니다.</p>\n<h2 id=\"preact\" style=\"position:relative;\"><a href=\"#preact\" aria-label=\"preact permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>preact</h2>\n<ul>\n<li>3kb 용량의 경량화 된 react 입니다.</li>\n<li>약간의 설정으로 react 문법과 동일하게 사용할 수 있습니다.</li>\n<li><code class=\"language-text\">preact</code>는 별도의 빌드 툴이 없어도 브라우저에서 사용할 수 있도록 제작이 되어있습니다. </li>\n<li>Hooks 도 지원을 하고 있습니다.</li>\n<li>기존 react의 이벤트 시스템을 가지고 있지 않아서 가볍습니다.</li>\n<li><code class=\"language-text\">className</code> 대신 <code class=\"language-text\">class</code>를 사용하기 때문에 기존 마크업 된 결과물을 쉽게 가져다 넣을 수 있습니다. </li>\n<li><code class=\"language-text\">Component.render()</code> 메서드에 인자로 <code class=\"language-text\">this.props</code> 와 <code class=\"language-text\">this.state</code> 값을 순차적으로 받아 올 수 있습니다.</li>\n<li><code class=\"language-text\">preact</code>의 <code class=\"language-text\">h()</code> 함수는 <code class=\"language-text\">react</code>에 <code class=\"language-text\">createElement</code>와 매칭이 됩니다.</li>\n<li><code class=\"language-text\">preact</code>에선 <code class=\"language-text\">onChange</code> 대신에 <code class=\"language-text\">onInput</code>을 사용합니다.</li>\n</ul>\n<h2 id=\"preact--babel\" style=\"position:relative;\"><a href=\"#preact--babel\" aria-label=\"preact  babel permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>preact &#x26; babel</h2>\n<ul>\n<li><code class=\"language-text\">preact</code> 에서 JSX를 사용하기 위해선 별도의 babel 셋팅이 필요합니다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token punctuation\">{</span>\n  <span class=\"token string\">\"plugins\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">[</span><span class=\"token string\">\"@babel/plugin-transform-react-jsx\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token string\">\"pragma\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"h\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"pragmaFrag\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Fragment\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>폭 넓은 브라우저 대응을 위한 babel 을 셋팅합니다.</li>\n<li>polyfill을 대신할 <code class=\"language-text\">core-js</code> 와 <code class=\"language-text\">regenerator-runtime</code> 을 설치 해줍니다. </li>\n<li><code class=\"language-text\">&quot;useBuiltIns&quot;: &quot;usage&quot;</code> 설정은 각 파일에서 사용될 폴리 필에 대한 것만 가져옵니다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token string\">\"presets\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span>\n    <span class=\"token string\">\"@babel/preset-env\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token string\">\"targets\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"useBuiltIns\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"usage\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"corejs\"</span><span class=\"token operator\">:</span> <span class=\"token number\">3</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span></code></pre></div>\n<h2 id=\"preact--rollup\" style=\"position:relative;\"><a href=\"#preact--rollup\" aria-label=\"preact  rollup permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>preact &#x26; rollup</h2>\n<ul>\n<li>axios를 번들에 넣고 싶을 때 <code class=\"language-text\">resolve({ browser: true,})</code> 를 넣어주어야 합니다. 왜냐하면 axios 모듈은 유니버셜 코드 (서버 와 브라우저 환경에서 모두 작동) 이기 때문에 브라우저에서만 작동되는 스크립트를 번들 하기 위해선 브라우저 에서 작동할 번들이라고 알려주어야 합니다. (모듈의 package.json 의 browser 키 값을 보고 필요한 것만 번들해 옵니다.)</li>\n<li>plugin 순서는 <code class=\"language-text\">babel</code>, <code class=\"language-text\">resolve</code>, <code class=\"language-text\">commonjs</code> 를 지켜주도록 합니다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// rollup.config.js</span>\n<span class=\"token keyword\">import</span> resolve <span class=\"token keyword\">from</span> <span class=\"token string\">'rollup-plugin-node-resolve'</span>\n<span class=\"token keyword\">import</span> commonjs <span class=\"token keyword\">from</span> <span class=\"token string\">'rollup-plugin-commonjs'</span>\n<span class=\"token keyword\">import</span> babel <span class=\"token keyword\">from</span> <span class=\"token string\">'rollup-plugin-babel'</span>\n<span class=\"token keyword\">import</span> postcss <span class=\"token keyword\">from</span> <span class=\"token string\">'rollup-plugin-postcss'</span>\n<span class=\"token keyword\">import</span> staticSite <span class=\"token keyword\">from</span> <span class=\"token string\">'rollup-plugin-static-site'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> uglify <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'rollup-plugin-uglify'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> context <span class=\"token operator\">=</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span>npm_config_context\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>context<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">please insert npm command line '--context={pageName}'</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n  input<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">src/page/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>context<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">.js</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n  output<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    file<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">dist/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>context<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">/bundle_</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>context<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">.js</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n    format<span class=\"token operator\">:</span> <span class=\"token string\">'iife'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  plugins<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token function\">babel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      exclude<span class=\"token operator\">:</span> <span class=\"token string\">'node_modules/**'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// only transpile our source code</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      browser<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">commonjs</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">postcss</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">uglify</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">staticSite</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      dir<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">dist/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>context<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n      filename<span class=\"token operator\">:</span> <span class=\"token string\">'index.html'</span><span class=\"token punctuation\">,</span>\n      template<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> path<span class=\"token operator\">:</span> `src<span class=\"token operator\">/</span><span class=\"token keyword\">public</span><span class=\"token operator\">/</span>index<span class=\"token punctuation\">.</span>html` <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"github\" style=\"position:relative;\"><a href=\"#github\" aria-label=\"github permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>github</h2>\n<p><a href=\"https://github.com/chchoing88/preact-practice\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">github</a></p>\n<blockquote>\n<p>예외사항으로 페이지 마다 번들된 JS를 만들기 위해서 <code class=\"language-text\">rollup</code> 셋팅을 조금 바꿔두었습니다. 필요시 적절하게 수정해야 합니다.</p>\n</blockquote>","excerpt":"preact, rollup, babel 구성기 react의 경량화 버젼인 preact를 rollup과 babel로 환경 셋팅한 경험기 입니다.\n 가 존재하지만 각 설정들이 숨겨져 있고  시키기가 어려워서 새롭게 구성했습니다. preact 3kb…","tableOfContents":"<ul>\n<li>\n<p><a href=\"/preact-configuration.md/#preact-rollup-babel-%EA%B5%AC%EC%84%B1%EA%B8%B0\">preact, rollup, babel 구성기</a></p>\n<ul>\n<li><a href=\"/preact-configuration.md/#preact\">preact</a></li>\n<li><a href=\"/preact-configuration.md/#preact--babel\">preact &#x26; babel</a></li>\n<li><a href=\"/preact-configuration.md/#preact--rollup\">preact &#x26; rollup</a></li>\n<li><a href=\"/preact-configuration.md/#github\">github</a></li>\n</ul>\n</li>\n</ul>","fields":{"slug":"/preact-configuration.md/"},"frontmatter":{"title":"preact 구성기","date":"Dec 19, 2019","tags":["undefined"],"keywords":["Merlin Tech Blog","Merlin.ho"],"update":"Jan 01, 0001"}}},"pageContext":{"slug":"/preact-configuration.md/","series":[],"lastmod":"0001-01-01"}}}