{"componentChunkName":"component---src-templates-post-tsx","path":"/typescript-embient/","result":{"data":{"markdownRemark":{"html":"<h2 id=\"동기\" style=\"position:relative;\"><a href=\"#%EB%8F%99%EA%B8%B0\" aria-label=\"동기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>동기</h2>\n<ul>\n<li>타입스크립트를 학습하다가 타입 정의 파일에서의 <code class=\"language-text\">declear</code> 의 용도가 궁금해져서 몇가지 테스트 후 정리 해봅니다.</li>\n</ul>\n<h2 id=\"배경\" style=\"position:relative;\"><a href=\"#%EB%B0%B0%EA%B2%BD\" aria-label=\"배경 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>배경</h2>\n<h3 id=\"namespace\" style=\"position:relative;\"><a href=\"#namespace\" aria-label=\"namespace permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>namespace</h3>\n<ul>\n<li>일명 내부 모듈로 전역 이름 공간과 분리된 네임스페이스 단위의 이름 공간입니다.</li>\n<li>네임스페이스는 여러 파일에 걸쳐 하나의 이름 공간을 공유합니다.</li>\n<li>컴파일이 진행이 되면 지정된 네임스페이스 이름으로 전역 변수가 하나 생깁니다. 이 전역 변수에는 객체가 할당 됩니다. 이는 곧 전역 스코프에 속하지만 전역 스코프와 독립된 이름 공간을 지닌 다는 이야기가 됩니다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">namespace</span> Hello <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">pring</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token string\">\"use strict\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> Hello<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">Hello</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">pring</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>Hello <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span>Hello <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>네임스페이스는 export 를 이용해서 외부 모듈로도 선언이 가능합니다. 이렇게 모듈로 선언된 네임스페이스는 import 문을 이용해 JS로 컴파일 뒤에도 명시적으로 모듈 호출을 할 수 있습니다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">namespace</span> Hello <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">pring</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token string\">\"use strict\"</span><span class=\"token punctuation\">;</span>\nObject<span class=\"token punctuation\">.</span><span class=\"token function\">defineProperty</span><span class=\"token punctuation\">(</span>exports<span class=\"token punctuation\">,</span> <span class=\"token string\">\"__esModule\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> value<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nexports<span class=\"token punctuation\">.</span>Hello <span class=\"token operator\">=</span> <span class=\"token keyword\">void</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> Hello<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">Hello</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">pring</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>Hello <span class=\"token operator\">=</span> exports<span class=\"token punctuation\">.</span>Hello <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span>exports<span class=\"token punctuation\">.</span>Hello <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"export\" style=\"position:relative;\"><a href=\"#export\" aria-label=\"export permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>export</h3>\n<ul>\n<li>일명 외부 모듈로 모듈 파일마다 이름 공간이 정해집니다.</li>\n<li>외부 모듈의 이름 공간은 파일 내부로 제한됩니다.</li>\n</ul>\n<h2 id=\"타입-정의-파일\" style=\"position:relative;\"><a href=\"#%ED%83%80%EC%9E%85-%EC%A0%95%EC%9D%98-%ED%8C%8C%EC%9D%BC\" aria-label=\"타입 정의 파일 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>타입 정의 파일</h2>\n<ul>\n<li>일반 자바스크립트 라이브러리에는 타입 정보나 구조 정보가 없기 때문에 타입스크립트 컴파일러가 자바스크립트 라이브러리의 API를 인식할 수 있게 하려면 타입 정의 파일을 정의해야 합니다.</li>\n<li>자바스크립트는 타입 정보를 포함하지 못하므로 타입 정의 파일을 별도로 정의해야 합니다.</li>\n<li>코드 어시스트 역할을 수행합니다. 개발 에디터에서 코드 어시스트를 통해 타입 정보를 표시합니다.</li>\n<li>컴파일 에러 표시 역할을 수행합니다. 컴파일 에러가 발생할 때보다 자세한 에러 로그를 출력합니다.</li>\n</ul>\n<h2 id=\"앰비언트-선언\" style=\"position:relative;\"><a href=\"#%EC%95%B0%EB%B9%84%EC%96%B8%ED%8A%B8-%EC%84%A0%EC%96%B8\" aria-label=\"앰비언트 선언 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>앰비언트 선언</h2>\n<ul>\n<li>자바스크립트 라이브러리는 API 형태로 외부로 공개된 모듈을 포함합니다.</li>\n<li>외부로 공개된 모듈은 보통 export 로 선언되어 있습니다.</li>\n<li>이런 export 로 공개된 모듈은 declare 키워드를 통해 타입 정의 파일에서 선언 됩니다.</li>\n<li>declare 선언은 실제 구현 내용은 포함하지 않고 단지 정의만 포함합니다.</li>\n<li>타입스크립트 컴파일러에게 JS에 대한 구현'환경' 에 대한 정보를 준다라는 정도로 이해할 수 있습니다.</li>\n</ul>\n<h2 id=\"앰비언트-선언시-코드-어시스트는-어떻게-동작할까\" style=\"position:relative;\"><a href=\"#%EC%95%B0%EB%B9%84%EC%96%B8%ED%8A%B8-%EC%84%A0%EC%96%B8%EC%8B%9C-%EC%BD%94%EB%93%9C-%EC%96%B4%EC%8B%9C%EC%8A%A4%ED%8A%B8%EB%8A%94-%EC%96%B4%EB%96%BB%EA%B2%8C-%EB%8F%99%EC%9E%91%ED%95%A0%EA%B9%8C\" aria-label=\"앰비언트 선언시 코드 어시스트는 어떻게 동작할까 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>앰비언트 선언시 코드 어시스트는 어떻게 동작할까</h2>\n<ol>\n<li>export 문 없이 그냥 declare</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token comment\">// typeTest.d.ts</span>\n<span class=\"token keyword\">declare</span> <span class=\"token keyword\">module</span> test <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> name <span class=\"token operator\">=</span> <span class=\"token string\">\"merlin\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>위와 같이 작성된 타입 정의 파일이 있다면 타입스크립트 컴파일러는 다음과 같이 적으면 코드 어시스트를 실행시켜 줍니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\">test<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">;</span> <span class=\"token comment\">// const name = \"merlin\"</span></code></pre></div>\n<ol start=\"2\">\n<li>export 문과 함께 작성된 declare</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token comment\">// typeTest.d.ts</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">declare</span> <span class=\"token keyword\">module</span> test <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> name <span class=\"token operator\">=</span> <span class=\"token string\">\"merlin\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>위와 같이 작성된 타입 정의 파일이 있다면 다른 파일에서 import 시 코드 어시스트를 실행시켜 줍니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> test <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"./typeTest\"</span><span class=\"token punctuation\">;</span>\ntest<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">;</span></code></pre></div>\n<ol start=\"3\">\n<li>모듈 이름을 \"\" 로 감싸서 표현 했을 때</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token comment\">// typeTest.d.ts</span>\n<span class=\"token keyword\">declare</span> <span class=\"token keyword\">module</span> <span class=\"token string\">\"ho\"</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> name <span class=\"token operator\">=</span> <span class=\"token string\">\"merlin\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>위와 같이 \"ho\" 로 모듈 이름을 작성하면 다른 파일에서 import 모듈시 \"ho\" 모듈이 있는 것으로 간주하고 코드 어시스트를 실행 해줍니다.\n실제로 ho.js 파일엔 아무것도 없어도 일단 어시스트는 돌아 갑니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> name <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"ho\"</span><span class=\"token punctuation\">;</span>\ntest<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"타입스크립트-컴파일시-타입-정의-파일도-만든다면\" style=\"position:relative;\"><a href=\"#%ED%83%80%EC%9E%85%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%EC%BB%B4%ED%8C%8C%EC%9D%BC%EC%8B%9C-%ED%83%80%EC%9E%85-%EC%A0%95%EC%9D%98-%ED%8C%8C%EC%9D%BC%EB%8F%84-%EB%A7%8C%EB%93%A0%EB%8B%A4%EB%A9%B4\" aria-label=\"타입스크립트 컴파일시 타입 정의 파일도 만든다면 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>타입스크립트 컴파일시 타입 정의 파일도 만든다면</h2>\n<ol>\n<li>export default 시</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token comment\">// test.ts</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">merlin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token comment\">// test.d.ts</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">merlin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ol start=\"2\">\n<li>export 시</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token comment\">// test.ts</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">merlin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token comment\">// test.d.ts</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">declare</span> <span class=\"token keyword\">function</span> <span class=\"token function\">merlin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ol start=\"3\">\n<li>아무것도 없을 시</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token comment\">// test.ts</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">merlin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token comment\">// test.d.ts</span>\n<span class=\"token keyword\">declare</span> <span class=\"token keyword\">function</span> <span class=\"token function\">merlin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ol start=\"4\">\n<li>혼용시</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token comment\">// test.ts</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">merlin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">namespace</span> merlin2 <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">const</span> merlin3 <span class=\"token operator\">=</span> <span class=\"token string\">\"merlin3\"</span><span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token comment\">// test.d.ts</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">declare</span> <span class=\"token keyword\">function</span> <span class=\"token function\">merlin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"정리\" style=\"position:relative;\"><a href=\"#%EC%A0%95%EB%A6%AC\" aria-label=\"정리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>정리</h2>\n<ul>\n<li>자바스크립트 파일에서 export 로 외부 모듈로 사용될 시 API로 사용자에게 노출이 되는 부분들은 declare 라는 키워드를 사용해서 타입 정의가 이뤄집니다.</li>\n<li>자바스크립트 파일에서 export 문이 없이 일반 파일이라면 전역 스코프에 속하는 변수, 함수 등등을 declare 라는 키워드를 사용해서 타입 정의가 이뤄집니다.</li>\n<li>만약 export 문과 일반 함수, 변수 등이 혼용되어 있을 경우에는 모듈로 간주 export 문으로 외부로 공개된 API 만 declare 키워드를 사용해서 타입 정의가 이뤄집니다.</li>\n<li>export default 를 사용해서 외부로 노출하는 API는 별도의 declear 대신 default 문으로 타입 정의가 이뤄집니다.</li>\n</ul>","excerpt":"동기 타입스크립트를 학습하다가 타입 정의 파일에서의  의 용도가 궁금해져서 몇가지 테스트 후 정리 해봅니다. 배경 namespace…","tableOfContents":"<ul>\n<li><a href=\"/ho_blog/typescript-embient/#%EB%8F%99%EA%B8%B0\">동기</a></li>\n<li>\n<p><a href=\"/ho_blog/typescript-embient/#%EB%B0%B0%EA%B2%BD\">배경</a></p>\n<ul>\n<li><a href=\"/ho_blog/typescript-embient/#namespace\">namespace</a></li>\n<li><a href=\"/ho_blog/typescript-embient/#export\">export</a></li>\n</ul>\n</li>\n<li><a href=\"/ho_blog/typescript-embient/#%ED%83%80%EC%9E%85-%EC%A0%95%EC%9D%98-%ED%8C%8C%EC%9D%BC\">타입 정의 파일</a></li>\n<li><a href=\"/ho_blog/typescript-embient/#%EC%95%B0%EB%B9%84%EC%96%B8%ED%8A%B8-%EC%84%A0%EC%96%B8\">앰비언트 선언</a></li>\n<li><a href=\"/ho_blog/typescript-embient/#%EC%95%B0%EB%B9%84%EC%96%B8%ED%8A%B8-%EC%84%A0%EC%96%B8%EC%8B%9C-%EC%BD%94%EB%93%9C-%EC%96%B4%EC%8B%9C%EC%8A%A4%ED%8A%B8%EB%8A%94-%EC%96%B4%EB%96%BB%EA%B2%8C-%EB%8F%99%EC%9E%91%ED%95%A0%EA%B9%8C\">앰비언트 선언시 코드 어시스트는 어떻게 동작할까</a></li>\n<li><a href=\"/ho_blog/typescript-embient/#%ED%83%80%EC%9E%85%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%EC%BB%B4%ED%8C%8C%EC%9D%BC%EC%8B%9C-%ED%83%80%EC%9E%85-%EC%A0%95%EC%9D%98-%ED%8C%8C%EC%9D%BC%EB%8F%84-%EB%A7%8C%EB%93%A0%EB%8B%A4%EB%A9%B4\">타입스크립트 컴파일시 타입 정의 파일도 만든다면</a></li>\n<li><a href=\"/ho_blog/typescript-embient/#%EC%A0%95%EB%A6%AC\">정리</a></li>\n</ul>","fields":{"slug":"/typescript-embient/"},"frontmatter":{"title":"typescript embient","date":"Jun 18, 2020","tags":["javascript","ES6","typescript","ambient"],"keywords":["Merlin Tech Blog","Merlin.ho"],"update":"Jan 01, 0001"}}},"pageContext":{"slug":"/typescript-embient/","series":[],"lastmod":"0001-01-01"}}}