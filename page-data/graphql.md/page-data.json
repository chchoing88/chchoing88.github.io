{"componentChunkName":"component---src-templates-post-tsx","path":"/graphql.md/","result":{"data":{"markdownRemark":{"html":"<h2 id=\"개요\" style=\"position:relative;\"><a href=\"#%EA%B0%9C%EC%9A%94\" aria-label=\"개요 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>개요</h2>\n<p>Rest API의 호출 형식 말고도 GraphQL을 사용하면 더 코드가 직관적이고 적은 요청으로 원하는 데이터만 가져올 수 있다는 장점을 듣고 GrpahQL Server 학습을 듣고 정리를 해봅니다.</p>\n<p>그럼 먼저 Rest API와 GraphQL의 장.단점 부터 알아봅시다.</p>\n<h3 id=\"rest-api-장점\" style=\"position:relative;\"><a href=\"#rest-api-%EC%9E%A5%EC%A0%90\" aria-label=\"rest api 장점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Rest API 장점</h3>\n<p>메서드의 URI를 조합해서, 예측 가능하고 일정한 정보와 작업을 요청하는 것입니다.\n각 요청이 어떤 동작이나 정보를 위한 것인지를 그 요청의 모습 자체로 추론 가능하다는 것입니다.\n자원을 구조와 함께 나타내는 이런 형태의 구분자를 URI라고 합니다.</p>\n<h3 id=\"rest-api-단점\" style=\"position:relative;\"><a href=\"#rest-api-%EB%8B%A8%EC%A0%90\" aria-label=\"rest api 단점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Rest API 단점</h3>\n<p>전송되는 데이터의 양 측면에서 소모가 클것입니다.</p>\n<h3 id=\"graphql-장점\" style=\"position:relative;\"><a href=\"#graphql-%EC%9E%A5%EC%A0%90\" aria-label=\"graphql 장점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>GraphQL 장점</h3>\n<p>내가 원하는 것만 골라서 요청할 수 있습니다.\n필요한 정보를 얻기 위해서 Rest API는 여러번의 요청을 보내야할 수 도 있습니다.\n하지만 GraphAPI는 다른 depth의 정보들이 한번에 다 와줄 수 있습니다.</p>\n<p>백엔드 서버 하나에 Rest API 와 GraphAPI을 둘 다 구현해놓으면 사용자들이 골라서 사용할 수 있습니다.</p>\n<h3 id=\"graphql-단점\" style=\"position:relative;\"><a href=\"#graphql-%EB%8B%A8%EC%A0%90\" aria-label=\"graphql 단점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>GraphQL 단점</h3>\n<p>받아야 하는 항목이 많고 딱 정해진 데이터 들을 받아와야 할때에는 쿼리에 일일이 나열하는 것 보다 그냥 URL 한줄 호출하는게 더 심플 할때가 있습니다.</p>\n<blockquote>\n<p>참고 : Schema 란 데이터의 구조나 표현법, 관계를 나타내는 말입니다.</p>\n</blockquote>\n<h2 id=\"구현\" style=\"position:relative;\"><a href=\"#%EA%B5%AC%ED%98%84\" aria-label=\"구현 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>구현</h2>\n<p>먼저 GraphQL 쿼리의 요청을 받고 그에 해당하는 응답을 내보내줄 서버가 필요합니다.\n이 서버는 <a href=\"https://github.com/prisma-labs/graphql-yoga\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">GraphQL Yoga</a> 라는 것으로 만들어 볼 것이며,\n이는 GraphQL 서버를 아주 빠르게 시작할 수 있게 도와줍니다.</p>\n<h3 id=\"서버-index\" style=\"position:relative;\"><a href=\"#%EC%84%9C%EB%B2%84-index\" aria-label=\"서버 index permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>서버 index</h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> GraphQLServer <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"graphql-yoga\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> resolvers <span class=\"token keyword\">from</span> <span class=\"token string\">\"./graphql/apiResolver\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Query는 네가 정보를 받을 때만 쓰입니다.</span>\n<span class=\"token comment\">// Mutation은 네가 정보를 변형할 때 쓰입니다.</span>\n\n<span class=\"token keyword\">const</span> server <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">GraphQLServer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  typeDefs<span class=\"token operator\">:</span> <span class=\"token string\">\"graphql/apiSchema.graphql\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 스키마 정의</span>\n  resolvers<span class=\"token punctuation\">,</span> <span class=\"token comment\">// resolvers 정의</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nserver<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Graphql Server Running hou!!!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"스키마\" style=\"position:relative;\"><a href=\"#%EC%8A%A4%ED%82%A4%EB%A7%88\" aria-label=\"스키마 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>스키마</h3>\n<p>스키마에서는 나의 데이터가 어떻게 보일지를 정의하는 공간입니다. 또는 데이터를 받거나 줄 정보에 대한 설명이라고 생각하면 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre class=\"language-graphql\"><code class=\"language-graphql\"><span class=\"token keyword\">type</span> <span class=\"token class-name\">Movie</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">id</span><span class=\"token punctuation\">:</span> Int<span class=\"token operator\">!</span>\n  <span class=\"token attr-name\">title</span><span class=\"token punctuation\">:</span> String<span class=\"token operator\">!</span>\n  <span class=\"token attr-name\">rating</span><span class=\"token punctuation\">:</span> Float\n  <span class=\"token attr-name\">description_intro</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">language</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">medium_cover_image</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">genres</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>String<span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">Query</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">movies</span><span class=\"token punctuation\">(</span><span class=\"token attr-name\">limit</span><span class=\"token punctuation\">:</span> Int<span class=\"token punctuation\">,</span> <span class=\"token attr-name\">rating</span><span class=\"token punctuation\">:</span> Float<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>Movie<span class=\"token punctuation\">]</span><span class=\"token operator\">!</span>\n  <span class=\"token attr-name\">movie</span><span class=\"token punctuation\">(</span><span class=\"token attr-name\">id</span><span class=\"token punctuation\">:</span> Int<span class=\"token operator\">!</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> Movie\n  <span class=\"token attr-name\">suggestions</span><span class=\"token punctuation\">(</span><span class=\"token attr-name\">id</span><span class=\"token punctuation\">:</span> Int<span class=\"token operator\">!</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>Movie<span class=\"token punctuation\">]</span><span class=\"token operator\">!</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"resolvers\" style=\"position:relative;\"><a href=\"#resolvers\" aria-label=\"resolvers permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>resolvers</h3>\n<p>스키마에서 너의 데이터가 어떻게 보일지를 정의하고 그 질문을 resolve에서 해결하는 함수를 만드는 것입니다.\n<code class=\"language-text\">resolvers</code>는 다른 API에 갈 수도 있고 Database에 갈 수도 있습니다.</p>\n<p>실제로 이름 Query의 기능성을 프로그래밍 해야합니다.\n이 Query 들을 어떤 방식으로 resolve(해결) 해야 한다. 라는 느낌입니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> getMovies<span class=\"token punctuation\">,</span> getMovie<span class=\"token punctuation\">,</span> getSuggestions <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"./apidb\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> resolvers <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  Query<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function-variable function\">movies</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">_<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> rating<span class=\"token punctuation\">,</span> limit <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">getMovies</span><span class=\"token punctuation\">(</span>limit<span class=\"token punctuation\">,</span> rating<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">movie</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">_<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> id <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">getMovie</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">suggestions</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">_<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> id <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">getSuggestions</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> resolvers<span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"db\" style=\"position:relative;\"><a href=\"#db\" aria-label=\"db permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>DB</h3>\n<p>여기서 DB는 API를 요청하는 공간으로 마련해 두었습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> axios <span class=\"token keyword\">from</span> <span class=\"token string\">\"axios\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token constant\">BASE_URL</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"https://yts-proxy.now.sh/\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token constant\">LIST_MOVIES_URL</span> <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token constant\">BASE_URL</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">list_movies.json</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token constant\">MOVIE_DETAILS_URL</span> <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token constant\">BASE_URL</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">movie_details.json</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token constant\">MOVIE_SUGGESTIONS_URL</span> <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token constant\">BASE_URL</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">movie_suggestions.json</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getMovies</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">limit<span class=\"token punctuation\">,</span> rating</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n    data<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      data<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> movies <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">axios</span><span class=\"token punctuation\">(</span><span class=\"token constant\">LIST_MOVIES_URL</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n    params<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      limit<span class=\"token punctuation\">,</span>\n      minimum_rating<span class=\"token operator\">:</span> rating<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> movies<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getMovie</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">id</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n    data<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      data<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> movie <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">axios</span><span class=\"token punctuation\">(</span><span class=\"token constant\">MOVIE_DETAILS_URL</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n    params<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      movie_id<span class=\"token operator\">:</span> id<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> movie<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getSuggestions</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">id</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n    data<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      data<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> movies <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">axios</span><span class=\"token punctuation\">(</span><span class=\"token constant\">MOVIE_SUGGESTIONS_URL</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n    params<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      movie_id<span class=\"token operator\">:</span> id<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> movies<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"참고\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0\" aria-label=\"참고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고</h2>\n<ul>\n<li><a href=\"https://academy.nomadcoders.co/courses/enrolled/357405\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">노마드코더</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=EkWI6Ru8lFQ&#x26;feature=emb_rel_pause\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://www.youtube.com/watch?v=EkWI6Ru8lFQ&#x26;feature=emb<em>rel</em>pause</a></li>\n</ul>","excerpt":"개요 Rest API의 호출 형식 말고도 GraphQL을 사용하면 더 코드가 직관적이고 적은 요청으로 원하는 데이터만 가져올 수 있다는 장점을 듣고 GrpahQL Server 학습을 듣고 정리를 해봅니다. 그럼 먼저 Rest API와 GraphQL…","tableOfContents":"<ul>\n<li>\n<p><a href=\"/ho_blog/graphql.md/#%EA%B0%9C%EC%9A%94\">개요</a></p>\n<ul>\n<li><a href=\"/ho_blog/graphql.md/#rest-api-%EC%9E%A5%EC%A0%90\">Rest API 장점</a></li>\n<li><a href=\"/ho_blog/graphql.md/#rest-api-%EB%8B%A8%EC%A0%90\">Rest API 단점</a></li>\n<li><a href=\"/ho_blog/graphql.md/#graphql-%EC%9E%A5%EC%A0%90\">GraphQL 장점</a></li>\n<li><a href=\"/ho_blog/graphql.md/#graphql-%EB%8B%A8%EC%A0%90\">GraphQL 단점</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/ho_blog/graphql.md/#%EA%B5%AC%ED%98%84\">구현</a></p>\n<ul>\n<li><a href=\"/ho_blog/graphql.md/#%EC%84%9C%EB%B2%84-index\">서버 index</a></li>\n<li><a href=\"/ho_blog/graphql.md/#%EC%8A%A4%ED%82%A4%EB%A7%88\">스키마</a></li>\n<li><a href=\"/ho_blog/graphql.md/#resolvers\">resolvers</a></li>\n<li><a href=\"/ho_blog/graphql.md/#db\">DB</a></li>\n</ul>\n</li>\n<li><a href=\"/ho_blog/graphql.md/#%EC%B0%B8%EA%B3%A0\">참고</a></li>\n</ul>","fields":{"slug":"/graphql.md/"},"frontmatter":{"title":"GraphQL Server","date":"May 03, 2020","tags":["javascript","GraphQL"],"keywords":["GraphQL"],"update":"Jan 01, 0001"}}},"pageContext":{"slug":"/graphql.md/","series":[],"lastmod":"0001-01-01"}}}