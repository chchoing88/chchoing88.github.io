{"componentChunkName":"component---src-templates-post-tsx","path":"/hello-rollup.md/","result":{"data":{"markdownRemark":{"html":"<h1 id=\"rollup-setting--babel-setting\" style=\"position:relative;\"><a href=\"#rollup-setting--babel-setting\" aria-label=\"rollup setting  babel setting permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Rollup Setting &#x26; babel Setting</h1>\n<p>간단한 스크립트 개발 셋팅을 위한 rollup 과 babel 셋팅 및 crawling을 위한 proxy 서버 셋팅을 정리해둡니다.</p>\n<h2 id=\"rollup-production-setting\" style=\"position:relative;\"><a href=\"#rollup-production-setting\" aria-label=\"rollup production setting permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Rollup production setting</h2>\n<p>rollup 셋팅시 다음과 같은 plugin을 설치하라는 공식 문서가 보입니다.</p>\n<ul>\n<li><code class=\"language-text\">rollup-plugin-node-resolve</code> : <code class=\"language-text\">node_modules</code>에 설치된 제 3자 모듈의 위치를 <a href=\"https://nodejs.org/api/modules.html#modules_all_together\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Node resolution algorithm</a> 를 사용해서 모듈의 위치를 찾아줍니다. 이 resolve 가 없을시 <code class=\"language-text\">import hljs from &quot;highlight.js/lib/highlight&quot;;</code> 이런 node_modules에 설치된 모듈을 찾지 못합니다. </li>\n<li><code class=\"language-text\">rollup-plugin-commonjs</code> : 다음 플러그인을 사용하면 node_modules에 설치된 모듈중에서 <code class=\"language-text\">require</code> 문을 사용하는 CommonJS 모듈을 ES6로 변환해서 번들코드에 포함시켜 줍니다. JS의 다양한 모듈 타입을 ES6로 맞춰서 번들한다고 생각하면 됩니다.</li>\n<li><code class=\"language-text\">rollup-plugin-babel</code> : 코드 번들링할때 babel을 이용하기 위해서 사용됩니다.</li>\n</ul>\n<h2 id=\"rollup-production-code\" style=\"position:relative;\"><a href=\"#rollup-production-code\" aria-label=\"rollup production code permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Rollup production Code</h2>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// rollup.config.js</span>\n<span class=\"token keyword\">import</span> resolve <span class=\"token keyword\">from</span> <span class=\"token string\">\"rollup-plugin-node-resolve\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> commonjs <span class=\"token keyword\">from</span> <span class=\"token string\">\"rollup-plugin-commonjs\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> babel <span class=\"token keyword\">from</span> <span class=\"token string\">\"rollup-plugin-babel\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> postcss <span class=\"token keyword\">from</span> <span class=\"token string\">'rollup-plugin-postcss'</span>\n<span class=\"token keyword\">import</span> staticSite <span class=\"token keyword\">from</span> <span class=\"token string\">'rollup-plugin-static-site'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> uglify <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'rollup-plugin-uglify'</span>\n\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n  input<span class=\"token operator\">:</span> <span class=\"token string\">\"src/js/main.js\"</span><span class=\"token punctuation\">,</span>\n  output<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    file<span class=\"token operator\">:</span> <span class=\"token string\">\"dist/bundle.js\"</span><span class=\"token punctuation\">,</span>\n    format<span class=\"token operator\">:</span> <span class=\"token string\">\"iife\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  plugins<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n     <span class=\"token function\">babel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      exclude<span class=\"token operator\">:</span> <span class=\"token string\">\"node_modules/**\"</span> <span class=\"token comment\">// only transpile our source code</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      browser<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">/</span><span class=\"token operator\">/</span> axios 같이 서버 코드랑 브라우저 코드가 다 들어있는 모듈일때 <span class=\"token keyword\">package</span><span class=\"token punctuation\">.</span>json 보고 브라우저 관련 코드만 가져온다<span class=\"token punctuation\">.</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">commonjs</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">postcss</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">/</span><span class=\"token operator\">/</span> css 도 번들 포함\n    <span class=\"token function\">uglify</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> \n    <span class=\"token function\">staticSite</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      dir<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">dist/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>context<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n      filename<span class=\"token operator\">:</span> <span class=\"token string\">'index.html'</span><span class=\"token punctuation\">,</span>\n      template<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> path<span class=\"token operator\">:</span> `src<span class=\"token operator\">/</span><span class=\"token keyword\">public</span><span class=\"token operator\">/</span>index<span class=\"token punctuation\">.</span>html` <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    \n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"rollup-dev-setting\" style=\"position:relative;\"><a href=\"#rollup-dev-setting\" aria-label=\"rollup dev setting permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Rollup dev setting</h2>\n<p>dev에서는 개발서버를 돌려주는 <code class=\"language-text\">rollup-plugin-serve</code> 와 <code class=\"language-text\">rollup-plugin-livereload</code> 를 사용합니다.</p>\n<p>dev 모드에서는 <code class=\"language-text\">--watch</code> 를 꼭 붙여주어서 코드가 변화할때마다 다시 번들하게 만들어 주어야 합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token string\">\"scripts\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"start\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"rollup -c ./rollup.config.dev.js --watch\"</span>\n  <span class=\"token punctuation\">}</span>,</code></pre></div>\n<ul>\n<li>주의 : 최신 rollup 버젼에서는 <code class=\"language-text\">rollup-plugin-server</code> 모듈은 사용하지 말자.</li>\n</ul>\n<h2 id=\"rollup-dev-code\" style=\"position:relative;\"><a href=\"#rollup-dev-code\" aria-label=\"rollup dev code permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Rollup dev Code</h2>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> common <span class=\"token keyword\">from</span> <span class=\"token string\">\"./rollup.config\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> serve <span class=\"token keyword\">from</span> <span class=\"token string\">\"rollup-plugin-serve\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> livereload <span class=\"token keyword\">from</span> <span class=\"token string\">\"rollup-plugin-livereload\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> path <span class=\"token keyword\">from</span> <span class=\"token string\">\"path\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n  input<span class=\"token operator\">:</span> <span class=\"token string\">\"src/js/main.js\"</span><span class=\"token punctuation\">,</span>\n  output<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    file<span class=\"token operator\">:</span> <span class=\"token string\">\"dist/bundle.dev.js\"</span><span class=\"token punctuation\">,</span>\n    format<span class=\"token operator\">:</span> <span class=\"token string\">\"iife\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  plugins<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token operator\">...</span>common<span class=\"token punctuation\">.</span>plugins<span class=\"token punctuation\">,</span>\n    <span class=\"token function\">serve</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      open<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      contentBase<span class=\"token operator\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>process<span class=\"token punctuation\">.</span><span class=\"token function\">cwd</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"/dist\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      host<span class=\"token operator\">:</span> <span class=\"token string\">\"localhost\"</span><span class=\"token punctuation\">,</span>\n      port<span class=\"token operator\">:</span> <span class=\"token number\">9000</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">livereload</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dist\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"babel-setting\" style=\"position:relative;\"><a href=\"#babel-setting\" aria-label=\"babel setting permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>babel setting</h2>\n<p>바벨에서 <code class=\"language-text\">preset</code> 이라고 하는 것은 여러 플러그인을 모아둔것이라 불리웁니다.\n공식 프리셋은 다음과 같습니다.</p>\n<ul>\n<li>@babel/preset-env</li>\n<li>@babel/preset-flow</li>\n<li>@babel/preset-react</li>\n<li>@babel/preset-typescript</li>\n</ul>\n<p>기본적인 프로젝트 셋팅시엔 타겟 환경에 따라 구문을 변환해줄 수 있는 가장 대표적인 <code class=\"language-text\">preset-env</code>를 사용합니다.</p>\n<p>아래는 기본 설치 방법 입니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> --save-dev @babel/preset-env</code></pre></div>\n<p><code class=\"language-text\">@babel/preset-env</code>는 지정한 대상 환경을 가져 와서 매핑 목록과 비교하여 플러그인 목록을 컴파일하고 그것을 Babel에 전달합니다.</p>\n<h3 id=\"loose-mode\" style=\"position:relative;\"><a href=\"#loose-mode\" aria-label=\"loose mode permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>loose mode</h3>\n<p>많은 바벨 플러그인은 2가지 모드를 지원합니다. </p>\n<p>하나는 일반 모드(normal mode) 이고 또다른 하나는 (루즈 모드)loose mode 입니다.</p>\n<ul>\n<li>normal mode : 최대한 ECMAScript 6 의 의미에 가깝게 따릅니다.</li>\n<li>loose mode : 간단하게 ES5로 코드를 생성합니다.</li>\n</ul>\n<p>예를 들면 </p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Point</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">x<span class=\"token punctuation\">,</span> y</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> x<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> y<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">(</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>x<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">, </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>y<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">)</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>위와 같은 코드에서 normal mode로 변환하면 <code class=\"language-text\">toString</code> 이라는 메서드를 non-enumerable(비 열거) 하게 만들지만 ( 비 열거가 되면 객체에서 속성을 열거하려 할때 나오지 않습니다. )</p>\n<p>loose mode 모드에선 손으로 작성한 것과 같은 스타일 처럼 일반 메서드로 할당 시켜 버립니다.</p>\n<ul>\n<li><a href=\"https://2ality.com/2015/12/babel6-loose-mode.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">참고</a></li>\n</ul>\n<h3 id=\"usebuiltins\" style=\"position:relative;\"><a href=\"#usebuiltins\" aria-label=\"usebuiltins permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>useBuiltIns</h3>\n<p>여러가지 옵션중에 <code class=\"language-text\">useBuiltIns</code> 이란 옵션은 polyfills을 다루기 위한 옵션 입니다.</p>\n<p>사전에 다음과 같이 설치를 해주어야 합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> core-js@3 --save\n\n<span class=\"token comment\"># or</span>\n\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span> core-js@2 --save\n\n<span class=\"token comment\"># and</span>\n\n<span class=\"token function\">npm</span> istall regenerator-runtime --save</code></pre></div>\n<h4 id=\"usebuiltins-entry\" style=\"position:relative;\"><a href=\"#usebuiltins-entry\" aria-label=\"usebuiltins entry permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>useBuiltIns: 'entry'</h4>\n<p>코드 시작시 <code class=\"language-text\">import &quot;core-js&quot;;</code> 라고 선언하게 되면 환경에 따라 필요한 polyfills들을 전부 불러오게 치환 해줍니다.\n또한 <code class=\"language-text\">core-js@3</code>을 사용하게 될시 <code class=\"language-text\">@babel/preset-env</code> 는 <code class=\"language-text\">core-js</code>를 최적화 시킬 수 있습니다.\n예를 들면 당신이 배열과 새로운 Math 의 메서드 polyfill이 필요하다면 다음과 같이 작성할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token string\">\"core-js/es/array\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"core-js/proposals/math-extensions\"</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h4 id=\"usebuiltins-usage\" style=\"position:relative;\"><a href=\"#usebuiltins-usage\" aria-label=\"usebuiltins usage permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>useBuiltIns: 'usage'</h4>\n<p>각 파일에서 사용되는 대상 환경에서 지원되지 않는 기능에 대해 polyfill을 넣어줍니다. 번들러는 동일한 폴리필에 대해선 한번만 가져오는 이점이 있습니다. </p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// first file:</span>\n<span class=\"token keyword\">var</span> <span class=\"token keyword\">set</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// second file:</span>\n<span class=\"token keyword\">var</span> array <span class=\"token operator\">=</span> Array<span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>위 코드는 IE >= 11 환경에서 아래와 같이 변경됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"core-js/modules/web.dom.iterable\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"core-js/modules/es6.array.iterator\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"core-js/modules/es6.object.to-string\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"core-js/modules/es6.string.iterator\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"core-js/modules/es6.set\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// first file:</span>\n<span class=\"token keyword\">var</span> <span class=\"token keyword\">set</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"core-js/modules/es6.array.of\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// second file:</span>\n<span class=\"token keyword\">var</span> array <span class=\"token operator\">=</span> Array<span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"corejs\" style=\"position:relative;\"><a href=\"#corejs\" aria-label=\"corejs permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>corejs</h3>\n<p>이 옵션은 <code class=\"language-text\">useBuiltIns: usage</code> or <code class=\"language-text\">useBuiltIns: entry</code> 이 옵션이 켜져있을때 효력이 발동되며 <code class=\"language-text\">@babel/preset-env</code>가 core-js 버전이 주입하도록 합니다.</p>\n<p>디폴트로는 polyfill은 안정적인(stable) ECMAScript 기능들만 주입하지만, 모든 polyfill을 원한다면 3가지 옵션이 있습니다.</p>\n<ul>\n<li><code class=\"language-text\">useBuiltIns: entry</code> 의 경우에는 제안에 있는 polyfill을 직접 import 시키는 법입니다. : <code class=\"language-text\">import &quot;core-js/proposals/string-replace-all&quot;</code></li>\n<li>\n<p><code class=\"language-text\">useBuiltIns: usage</code> 의 경우에는 2가지 경우가 있습니다.</p>\n<ul>\n<li><a href=\"https://babeljs.io/docs/en/babel-preset-env#shippedproposals\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><code class=\"language-text\">shippedProposals</code></a> 옵션을 <code class=\"language-text\">true</code>로 셋팅합니다. 이렇게하면 이미 브라우저에 이미 제공된 제안서에 대한 polyfill 및 변환이 가능합니다.</li>\n<li><code class=\"language-text\">corejs: { version: 3, proposals: true }</code> 이렇게 하면 core-js에 있는 모든 제안된 기능들을 polyfilling 합니다.</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"babel-config-code\" style=\"position:relative;\"><a href=\"#babel-config-code\" aria-label=\"babel config code permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>babel config code</h2>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token punctuation\">{</span>\n  <span class=\"token string\">\"presets\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span>\n    <span class=\"token string\">\"@babel/preset-env\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token string\">\"targets\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"ie\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"10\"</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"useBuiltIns\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"entry\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"corejs\"</span><span class=\"token operator\">:</span> <span class=\"token number\">3</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"proxy-서버-셋팅\" style=\"position:relative;\"><a href=\"#proxy-%EC%84%9C%EB%B2%84-%EC%85%8B%ED%8C%85\" aria-label=\"proxy 서버 셋팅 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>proxy 서버 셋팅</h2>\n<p>기존의 마크업된 페이지에서 내가 개발한 코드가 제대로 동작하는지 확인하기 위해서 마크업 페이지를 crawling 해 <code class=\"language-text\">css, js, image 경로 변경 후 bundle된 javascript 삽입</code>된 HTML 응답하는 서버 필요가 생겼었다. </p>\n<h3 id=\"rollup-setting-변경\" style=\"position:relative;\"><a href=\"#rollup-setting-%EB%B3%80%EA%B2%BD\" aria-label=\"rollup setting 변경 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>rollup setting 변경</h3>\n<p>기존에 <code class=\"language-text\">rollup-plugin-serve</code>를 쓰던 개발 서버에서 <code class=\"language-text\">proxy</code> 설정을 하기 위해  <code class=\"language-text\">rollup-plugin-serve-proxy</code> 모듈로 교체한다. </p>\n<p>여기서 <code class=\"language-text\">proxy</code> 셋팅은 <strong>적절하게 셋팅해둔 url로 요청이 들어왔을 시 대신 응답(proxy 서버) 해줄 서버를 가리킵니다.</strong> </p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> common <span class=\"token keyword\">from</span> <span class=\"token string\">\"./rollup.config\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> serve <span class=\"token keyword\">from</span> <span class=\"token string\">\"rollup-plugin-serve-proxy\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> livereload <span class=\"token keyword\">from</span> <span class=\"token string\">\"rollup-plugin-livereload\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> htmlTemplate <span class=\"token keyword\">from</span> <span class=\"token string\">\"rollup-plugin-generate-html-template\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> path <span class=\"token keyword\">from</span> <span class=\"token string\">\"path\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> setting <span class=\"token keyword\">from</span> <span class=\"token string\">\"./setting.json\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> Proxy <span class=\"token keyword\">from</span> <span class=\"token string\">\"./proxy/Proxy\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> proxy <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Proxy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  targetHost<span class=\"token operator\">:</span> setting<span class=\"token punctuation\">.</span>target_host<span class=\"token punctuation\">,</span>\n  port<span class=\"token operator\">:</span> setting<span class=\"token punctuation\">.</span>port<span class=\"token punctuation\">,</span>\n  bundleJs<span class=\"token operator\">:</span> setting<span class=\"token punctuation\">.</span>bundle_js\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nproxy<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// proxy 서버를 띄웁니다.</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n  input<span class=\"token operator\">:</span> common<span class=\"token punctuation\">.</span>input<span class=\"token punctuation\">,</span>\n  output<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    file<span class=\"token operator\">:</span> <span class=\"token string\">\"dist/bundle.dev.js\"</span><span class=\"token punctuation\">,</span>\n    format<span class=\"token operator\">:</span> <span class=\"token string\">\"iife\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  plugins<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token operator\">...</span>common<span class=\"token punctuation\">.</span>plugins<span class=\"token punctuation\">,</span>\n    <span class=\"token function\">htmlTemplate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      template<span class=\"token operator\">:</span> <span class=\"token string\">\"index.html\"</span><span class=\"token punctuation\">,</span>\n      target<span class=\"token operator\">:</span> <span class=\"token string\">\"dist/index.html\"</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">serve</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      open<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      contentBase<span class=\"token operator\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>process<span class=\"token punctuation\">.</span><span class=\"token function\">cwd</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"/dist\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      host<span class=\"token operator\">:</span> <span class=\"token string\">\"localhost\"</span><span class=\"token punctuation\">,</span>\n      port<span class=\"token operator\">:</span> <span class=\"token number\">9000</span><span class=\"token punctuation\">,</span>\n      proxy<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        dev<span class=\"token operator\">:</span> <span class=\"token string\">\"http://localhost:1234\"</span> <span class=\"token comment\">// /dev url로 들어오는 요청은 localhost:1234 서버가 대신 응답해 줍니다.</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">livereload</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dist\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"proxy-서버-개발\" style=\"position:relative;\"><a href=\"#proxy-%EC%84%9C%EB%B2%84-%EA%B0%9C%EB%B0%9C\" aria-label=\"proxy 서버 개발 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>proxy 서버 개발</h3>\n<p>proxy 서버가 하는 일은 다음과 같습니다.</p>\n<ul>\n<li>사용자가 설정한 주소의 마크업을 크롤링 해옵니다. </li>\n<li>크롤링해온 HTML 파일에서 외부 링크나 내부 상대 경로를 이용하는 링크를 절대 경로로 교체 해줍니다. 이는, css, image, js 파일은 해당 마컵 서버에 있는걸 가져다 쓰겠다는 의미 입니다.</li>\n<li>마지막으로 body 에 개발 서버에 적제되어있는 bundle.js 파일을 삽입해줍니다.</li>\n</ul>\n<p><code class=\"language-text\">target_host</code> 설정 후 <code class=\"language-text\">/dev</code> 이후 요청 받은 url에 따라서 마크업 서버에서 크롤링 해오는 페이지가 다르게 하기 위해서 다음과 같은 작업을 합니다.\n(예. <code class=\"language-text\">localhost:3000/dev/ho1/ho2?search</code> 로 접속하면 다음과 같은 주소에서 크롤링 해옵니다. <code class=\"language-text\">http://merlin.com/test/ho1/ho2?search</code>)</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getHtml</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">host<span class=\"token punctuation\">,</span> path</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">await</span> axios<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>host<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>path<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> url <span class=\"token operator\">=</span> req<span class=\"token punctuation\">.</span>url\n<span class=\"token function\">getHtml</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_targetHost<span class=\"token punctuation\">,</span> url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span> <span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"코드-예제\" style=\"position:relative;\"><a href=\"#%EC%BD%94%EB%93%9C-%EC%98%88%EC%A0%9C\" aria-label=\"코드 예제 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>코드 예제</h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token punctuation\">{</span>\n  <span class=\"token string\">\"target_host\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"http://merlin.com/test\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"bundle_js\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"bundle.dev.js\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"port\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">1234</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// DevController.js</span>\n<span class=\"token keyword\">const</span> axios <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"axios\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> cheerio <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cheerio\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token constant\">HTTP_REG</span> <span class=\"token operator\">=</span> <span class=\"token regex\">/^((http(s?))\\:\\/\\/)/</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token constant\">ROOT_REG</span> <span class=\"token operator\">=</span> <span class=\"token regex\">/^(\\/)/</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token constant\">REL_REG</span> <span class=\"token operator\">=</span> <span class=\"token regex\">/^(\\.(\\.?))/</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">isHttpUrl</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">url</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token constant\">HTTP_REG</span><span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">isRootUrl</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">url</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token constant\">ROOT_REG</span><span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">isRelativeUrl</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">url</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token constant\">REL_REG</span><span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getHtml</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">host<span class=\"token punctuation\">,</span> path</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">await</span> axios<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>host<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>path<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">stringifyScriptTag</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">src</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">&lt;script type=\"text/javascript\" src=\"</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>src<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\">&lt;/script></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// ./css/path/aaa</span>\n<span class=\"token comment\">// ../css/path/ccc</span>\n<span class=\"token comment\">// /insure-2019/apt/css/path/bbb</span>\n<span class=\"token comment\">// css/path/aaa => ./css/path/aaa</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">convertAbsolutePath</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">hostUrl<span class=\"token punctuation\">,</span> pathname<span class=\"token punctuation\">,</span> attrPath</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">isRootUrl</span><span class=\"token punctuation\">(</span>attrPath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>hostUrl<span class=\"token punctuation\">.</span><span class=\"token function\">substring</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> hostUrl<span class=\"token punctuation\">.</span><span class=\"token function\">lastIndexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>attrPath<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">isRelativeUrl</span><span class=\"token punctuation\">(</span>attrPath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>hostUrl<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>pathname<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>attrPath<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>hostUrl<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>attrPath<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">convertCssPath</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">$<span class=\"token punctuation\">,</span> host<span class=\"token punctuation\">,</span> pathname</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> $link <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"link\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  $link<span class=\"token punctuation\">.</span><span class=\"token function\">each</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">index<span class=\"token punctuation\">,</span> cssLink</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> $cssLink <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span>cssLink<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> cssHref <span class=\"token operator\">=</span> $cssLink<span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"href\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>cssHref <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span><span class=\"token function\">isHttpUrl</span><span class=\"token punctuation\">(</span>cssHref<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// 경로가 있고 http로 시작하지 않는 경로만 바꿔준다.</span>\n      <span class=\"token keyword\">const</span> absolutePath <span class=\"token operator\">=</span> <span class=\"token function\">convertAbsolutePath</span><span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">,</span> pathname<span class=\"token punctuation\">,</span> cssHref<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      $cssLink<span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"href\"</span><span class=\"token punctuation\">,</span> absolutePath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">convertScriptPath</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">$<span class=\"token punctuation\">,</span> host<span class=\"token punctuation\">,</span> pathname</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> $script <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"script\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> scriptSrc <span class=\"token operator\">=</span> $script<span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"src\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>scriptSrc <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span><span class=\"token function\">isHttpUrl</span><span class=\"token punctuation\">(</span>scriptSrc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    $script<span class=\"token punctuation\">.</span><span class=\"token function\">each</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">index<span class=\"token punctuation\">,</span> scriptLink</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> $scriptLink <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span>scriptLink<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">const</span> absolutePath <span class=\"token operator\">=</span> <span class=\"token function\">convertAbsolutePath</span><span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">,</span> pathname<span class=\"token punctuation\">,</span> scriptSrc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      $scriptLink<span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"src\"</span><span class=\"token punctuation\">,</span> absolutePath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">convertImagePath</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">$<span class=\"token punctuation\">,</span> host<span class=\"token punctuation\">,</span> pathname</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> $img <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"img\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> imgSrc <span class=\"token operator\">=</span> $img<span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"src\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>imgSrc <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span><span class=\"token function\">isHttpUrl</span><span class=\"token punctuation\">(</span>imgSrc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    $img<span class=\"token punctuation\">.</span><span class=\"token function\">each</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">index<span class=\"token punctuation\">,</span> imgLink</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> $imgLink <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span>imgLink<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">const</span> absolutePath <span class=\"token operator\">=</span> <span class=\"token function\">convertAbsolutePath</span><span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">,</span> pathname<span class=\"token punctuation\">,</span> imgSrc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      $imgLink<span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"src\"</span><span class=\"token punctuation\">,</span> absolutePath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">appendBundleScript</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">$<span class=\"token punctuation\">,</span> jsfile</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"body\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token function\">stringifyScriptTag</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>jsfile<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">DevController</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> targetHost<span class=\"token punctuation\">,</span> bundleJs <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_targetHost <span class=\"token operator\">=</span> targetHost<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_bundleJs <span class=\"token operator\">=</span> bundleJs<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">getCrawlingHtml</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> url <span class=\"token operator\">=</span> req<span class=\"token punctuation\">.</span>url<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> pathname <span class=\"token operator\">=</span> url<span class=\"token punctuation\">.</span><span class=\"token function\">substring</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> url<span class=\"token punctuation\">.</span><span class=\"token function\">lastIndexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">getHtml</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_targetHost<span class=\"token punctuation\">,</span> url<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">html</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> $ <span class=\"token operator\">=</span> cheerio<span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span>html<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">convertCssPath</span><span class=\"token punctuation\">(</span>$<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_targetHost<span class=\"token punctuation\">,</span> pathname<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">convertScriptPath</span><span class=\"token punctuation\">(</span>$<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_targetHost<span class=\"token punctuation\">,</span> pathname<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">convertImagePath</span><span class=\"token punctuation\">(</span>$<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_targetHost<span class=\"token punctuation\">,</span> pathname<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">appendBundleScript</span><span class=\"token punctuation\">(</span>$<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_bundleJs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">return</span> $<span class=\"token punctuation\">.</span><span class=\"token function\">html</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span> <span class=\"token operator\">=></span> res<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> DevController<span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// devRouter.js</span>\n<span class=\"token keyword\">const</span> express <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"express\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> devRouter <span class=\"token operator\">=</span> express<span class=\"token punctuation\">.</span><span class=\"token function\">Router</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">devRouting</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">app<span class=\"token punctuation\">,</span> controller</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  app<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/dev\"</span><span class=\"token punctuation\">,</span> devRouter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  devRouter<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/*\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">,</span> nex</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    controller<span class=\"token punctuation\">.</span><span class=\"token function\">getCrawlingHtml</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// Proxy.js</span>\n<span class=\"token comment\">// require</span>\n<span class=\"token keyword\">const</span> express <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"express\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token function\">express</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> DevController <span class=\"token keyword\">from</span> <span class=\"token string\">\"./DevController\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> devRouting <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"./devRouter\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Proxy</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> targetHost<span class=\"token punctuation\">,</span> port <span class=\"token operator\">=</span> <span class=\"token number\">1234</span><span class=\"token punctuation\">,</span> bundleJs <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_targetHost <span class=\"token operator\">=</span> targetHost<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_port <span class=\"token operator\">=</span> port<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_bundleJs <span class=\"token operator\">=</span> bundleJs<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_devController <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DevController</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> targetHost<span class=\"token punctuation\">,</span> bundleJs <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">routing</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">routing</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">devRouting</span><span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_devController<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    app<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_port<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_port<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">번 port에 proxy server를 띄웠습니다.</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> Proxy<span class=\"token punctuation\">;</span></code></pre></div>","excerpt":"Rollup Setting & babel Setting 간단한 스크립트 개발 셋팅을 위한 rollup 과 babel 셋팅 및 crawling을 위한 proxy 서버 셋팅을 정리해둡니다. Rollup production setting rollup…","tableOfContents":"<ul>\n<li>\n<p><a href=\"/hello-rollup.md/#rollup-setting--babel-setting\">Rollup Setting &#x26; babel Setting</a></p>\n<ul>\n<li><a href=\"/hello-rollup.md/#rollup-production-setting\">Rollup production setting</a></li>\n<li><a href=\"/hello-rollup.md/#rollup-production-code\">Rollup production Code</a></li>\n<li><a href=\"/hello-rollup.md/#rollup-dev-setting\">Rollup dev setting</a></li>\n<li><a href=\"/hello-rollup.md/#rollup-dev-code\">Rollup dev Code</a></li>\n<li>\n<p><a href=\"/hello-rollup.md/#babel-setting\">babel setting</a></p>\n<ul>\n<li><a href=\"/hello-rollup.md/#loose-mode\">loose mode</a></li>\n<li><a href=\"/hello-rollup.md/#usebuiltins\">useBuiltIns</a></li>\n<li><a href=\"/hello-rollup.md/#corejs\">corejs</a></li>\n</ul>\n</li>\n<li><a href=\"/hello-rollup.md/#babel-config-code\">babel config code</a></li>\n<li>\n<p><a href=\"/hello-rollup.md/#proxy-%EC%84%9C%EB%B2%84-%EC%85%8B%ED%8C%85\">proxy 서버 셋팅</a></p>\n<ul>\n<li><a href=\"/hello-rollup.md/#rollup-setting-%EB%B3%80%EA%B2%BD\">rollup setting 변경</a></li>\n<li><a href=\"/hello-rollup.md/#proxy-%EC%84%9C%EB%B2%84-%EA%B0%9C%EB%B0%9C\">proxy 서버 개발</a></li>\n<li><a href=\"/hello-rollup.md/#%EC%BD%94%EB%93%9C-%EC%98%88%EC%A0%9C\">코드 예제</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>","fields":{"slug":"/hello-rollup.md/"},"frontmatter":{"title":"Hello Rollup","date":"Nov 25, 2019","tags":["undefined"],"keywords":["Merlin Tech Blog","Merlin.ho"],"update":"Jan 01, 0001"}}},"pageContext":{"slug":"/hello-rollup.md/","series":[],"lastmod":"0001-01-01"}}}