{"componentChunkName":"component---src-templates-post-tsx","path":"/react-history.md/","result":{"data":{"markdownRemark":{"html":"<p>React SPA 구축시 뒤로가기 눌렀을때 이전 상태를 유지하도록 해야하는 일이 생겼었다. 이때, 어떻게 구축 했었는지를 기록해보자.</p>\n<p>별도의 써드파티의 state management는 사용하지 않았다.</p>\n<h2 id=\"1차-도전-context\" style=\"position:relative;\"><a href=\"#1%EC%B0%A8-%EB%8F%84%EC%A0%84-context\" aria-label=\"1차 도전 context permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1차 도전 (Context)</h2>\n<p>history 의 정보는 어느 컴포넌트에나 적용이 될 수 있어야 하기 때문에 Context가 떠올랐습니다.</p>\n<p>history 정보에 필요했던 것들은 다음과 같았습니다.</p>\n<ul>\n<li>preItemsCount : 해당 페이지의 items들을 몇개까지 불러왔는지 파악.</li>\n<li>scrollTop : 해당 페이지의 어느 스크롤까지 위치 했었는지 파악.</li>\n<li>pageName : 어느 페이지의 정보인지 파악.</li>\n</ul>\n<p>추가적으로 어느 히스토리를 사용해야 할지 currentIndex 도 두었었지만 이것은 해당 컴포넌트에게 어느 히스토리를 사용할지 맡겨두기로 했습니다. ( 처음엔 이 currentIndex 가 변할때마다 자꾸 렌더링이 시도 되는 현상 때문에 고생했습니다. )</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> createContext<span class=\"token punctuation\">,</span> Dispatch<span class=\"token punctuation\">,</span> useReducer<span class=\"token punctuation\">,</span> useContext <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">type</span> HistoryContextProviderProps <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  children<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>ReactNode<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">IHistoryItem</span> <span class=\"token punctuation\">{</span>\n  preItemsCount<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n  scrollTop<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n  pageName<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">IHistoryState</span> <span class=\"token punctuation\">{</span>\n  historyList<span class=\"token operator\">:</span> IHistoryItem<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// currentIndex: number;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">type</span> Action <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">\"PUSH\"</span><span class=\"token punctuation\">;</span> historyItem<span class=\"token operator\">:</span> IHistoryItem <span class=\"token punctuation\">}</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">\"POP\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">type</span> HistoryDispatch <span class=\"token operator\">=</span> Dispatch<span class=\"token operator\">&lt;</span>Action<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> HistoryStateContext <span class=\"token operator\">=</span> createContext<span class=\"token operator\">&lt;</span>IHistoryState<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  historyList<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n  <span class=\"token comment\">// currentIndex: -1</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> HistoryDispatchContext <span class=\"token operator\">=</span> createContext<span class=\"token operator\">&lt;</span>HistoryDispatch <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span>\n  <span class=\"token keyword\">undefined</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">historyReducer</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">state<span class=\"token operator\">:</span> IHistoryState<span class=\"token punctuation\">,</span> action<span class=\"token operator\">:</span> Action</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>action<span class=\"token punctuation\">.</span><span class=\"token keyword\">type</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">\"PUSH\"</span><span class=\"token operator\">:</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token operator\">...</span>state<span class=\"token punctuation\">,</span>\n        historyList<span class=\"token operator\">:</span> state<span class=\"token punctuation\">.</span>historyList<span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>action<span class=\"token punctuation\">.</span>historyItem<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\">// currentIndex: state.currentIndex + 1</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">\"POP\"</span><span class=\"token operator\">:</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token operator\">...</span>state\n        <span class=\"token comment\">// currentIndex: state.currentIndex &lt; 0 ? -1 : state.currentIndex - 1</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n      <span class=\"token keyword\">return</span> state<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">HistoryContextProvider</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span>\n  children\n<span class=\"token punctuation\">}</span><span class=\"token operator\">:</span> HistoryContextProviderProps</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>historyState<span class=\"token punctuation\">,</span> dispatch<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useReducer</span><span class=\"token punctuation\">(</span>historyReducer<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n    historyList<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token comment\">// currentIndex: -1</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>HistoryDispatchContext<span class=\"token punctuation\">.</span>Provider value<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>dispatch<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>HistoryStateContext<span class=\"token punctuation\">.</span>Provider value<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>historyState<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n        <span class=\"token punctuation\">{</span>children<span class=\"token punctuation\">}</span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>HistoryStateContext<span class=\"token punctuation\">.</span>Provider<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>HistoryDispatchContext<span class=\"token punctuation\">.</span>Provider<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">useHistoryState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> state <span class=\"token operator\">=</span> <span class=\"token function\">useContext</span><span class=\"token punctuation\">(</span>HistoryStateContext<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> state<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">useHistoryDispatch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> dispatch <span class=\"token operator\">=</span> <span class=\"token function\">useContext</span><span class=\"token punctuation\">(</span>HistoryDispatchContext<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>dispatch<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"HistoryDispatchContext value not found\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> dispatch<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"1차-도전의-문제\" style=\"position:relative;\"><a href=\"#1%EC%B0%A8-%EB%8F%84%EC%A0%84%EC%9D%98-%EB%AC%B8%EC%A0%9C\" aria-label=\"1차 도전의 문제 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1차 도전의 문제</h2>\n<p>위 코드는 나름 잘 동작은 하였지만 제가 생각한대로 동작하지 않았습니다.</p>\n<p>이유는 다음과 같았습니다.</p>\n<p>currentIndex 도 마찬가지지만 이 history Context의 historyList 에 컴포넌트가 unmount 될시에 적제가 되도록 작성해 두었습니다.\n그리곤 페이지 이동이 끝난 상태에서 historyList를 참고하도록 하였습니다.</p>\n<p>하지만 Context의 상태 값을 변경 한다는 것은 Consumer 들이 다시 리 렌더링을 뜻하는 것이고, 마운트 될때 Context의 상태 변경 해둔 것이 마운트 된 이후에 historyList에 적용 과 리 렌더링이 되면서 예상과는 다르게 움직 였었습니다.</p>\n<p>정리하면 다음과 같은 문제가 발생했습니다.</p>\n<ul>\n<li>불필요한 리 렌더링</li>\n<li>2번 리렌더링 (페이지 이동 + Context 상태변경)이 되면서 같은 페이지에서 다른 history를 참고 하고 있음</li>\n</ul>\n<h2 id=\"2차-도전-static-store--context\" style=\"position:relative;\"><a href=\"#2%EC%B0%A8-%EB%8F%84%EC%A0%84-static-store--context\" aria-label=\"2차 도전 static store  context permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2차 도전 (static store + Context)</h2>\n<p>1차 문제를 해결하기 위해서 Context 상태 변경에 의한 렌더링을 피해야만 된다는 생각을 했습니다.</p>\n<p>그래서 history store를 <strong>유일한 객체</strong>로 만들어야 겠다는 생각을 했고, 이 객체가 변해도 React가 반응하지 않아야 되도록 별도의 store를 만들었습니다.</p>\n<p>또한 이 history store 의 메서드와 프로퍼티들을 props로 타고 내려 보내는 것이 아닌 필요한 곳에 쉽게 사용할 수 있도록 Context를 혼합 했습니다.</p>\n<p>다음은 history store 객체 입니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">IHistoryItem</span> <span class=\"token punctuation\">{</span>\n  preItemsCount<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n  scrollTop<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n  pageName<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">HistoryStore</span> <span class=\"token punctuation\">{</span>\n  historyList<span class=\"token operator\">:</span> IHistoryItem<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// currentIndex: number;</span>\n\n  <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>historyList <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// this.currentIndex = -1;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// get currentHistory() {</span>\n  <span class=\"token comment\">//   if (this.currentIndex &lt; 0) {</span>\n  <span class=\"token comment\">//     return null;</span>\n  <span class=\"token comment\">//   }</span>\n  <span class=\"token comment\">//   return this.historyList[this.currentIndex - 1];</span>\n  <span class=\"token comment\">// }</span>\n\n  <span class=\"token function\">getRecentPageHistory</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">pageName<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> matchPageNameHistoryList <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>historyList<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>\n      <span class=\"token parameter\">history</span> <span class=\"token operator\">=></span> history<span class=\"token punctuation\">.</span>pageName <span class=\"token operator\">===</span> pageName\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>matchPageNameHistoryList<span class=\"token punctuation\">.</span>length <span class=\"token operator\">></span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> matchPageNameHistoryList<span class=\"token punctuation\">[</span>matchPageNameHistoryList<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">isMatchPageNameHistory</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">pageName<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>historyList<span class=\"token punctuation\">.</span><span class=\"token function\">some</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">history</span> <span class=\"token operator\">=></span> history<span class=\"token punctuation\">.</span>pageName <span class=\"token operator\">===</span> pageName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">pushHistory</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">historyItem<span class=\"token operator\">:</span> IHistoryItem</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>historyList<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>historyItem<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// this.currentIndex = this.currentIndex + 1;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> HistoryStore<span class=\"token punctuation\">;</span></code></pre></div>\n<p>초반에는 <code class=\"language-text\">currentIndex</code> 를 두어서 위에서 했던 것처럼 컴포넌트들이 어떤 히스토리를 봐야 하는지 알려주는 지표로써 사용을 하려고 했지만 후반부에는 그것 보다는 현재 접속한 pageName에서 historyList 에서 일치된 가장 최근 pageName의 history를 빼와서 적용하도록 하였습니다.</p>\n<p>다음은 이런 히스토리를 다양한 뎁스의 컴포넌트에서 사용할 수 있도록 Context를 수정하였습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> createContext<span class=\"token punctuation\">,</span> useContext <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> HistoryStore <span class=\"token keyword\">from</span> <span class=\"token string\">\"staticStore/HistoryStore\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">type</span> HistoryContextProviderProps <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  children<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>ReactNode<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> historyStore <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HistoryStore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> HistoryStateContext <span class=\"token operator\">=</span> createContext<span class=\"token operator\">&lt;</span>HistoryStore<span class=\"token operator\">></span><span class=\"token punctuation\">(</span>historyStore<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">HistoryContextProvider</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span>\n  children\n<span class=\"token punctuation\">}</span><span class=\"token operator\">:</span> HistoryContextProviderProps</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>HistoryStateContext<span class=\"token punctuation\">.</span>Provider value<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>historyStore<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n      <span class=\"token punctuation\">{</span>children<span class=\"token punctuation\">}</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>HistoryStateContext<span class=\"token punctuation\">.</span>Provider<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">useHistoryStore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> state <span class=\"token operator\">=</span> <span class=\"token function\">useContext</span><span class=\"token punctuation\">(</span>HistoryStateContext<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> state<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Context는 훨씬 간단해 졌습니다.</p>\n<h2 id=\"정리\" style=\"position:relative;\"><a href=\"#%EC%A0%95%EB%A6%AC\" aria-label=\"정리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>정리</h2>\n<p>생각을 하다하다 몇번의 도전만에 예상대로 움직이긴 했습니다. 이 방법 말고도 React SPA에서 react-router-dom의 location props의 state를 이용해볼까도 생각했지만 복잡한 state를 location에 다루기에는 투머치(?) 한 생각이 들어서 따로 빼는 방식을 생각해보았습니다.</p>\n<p>추가적으로 다른 방식들이 있는지 고민을 추가적으로 해보아야 겠습니다.</p>","excerpt":"React SPA 구축시 뒤로가기 눌렀을때 이전 상태를 유지하도록 해야하는 일이 생겼었다. 이때, 어떻게 구축 했었는지를 기록해보자. 별도의 써드파티의 state management는 사용하지 않았다. 1차 도전 (Context) history…","tableOfContents":"<ul>\n<li><a href=\"/ho_blog/react-history.md/#1%EC%B0%A8-%EB%8F%84%EC%A0%84-context\">1차 도전 (Context)</a></li>\n<li><a href=\"/ho_blog/react-history.md/#1%EC%B0%A8-%EB%8F%84%EC%A0%84%EC%9D%98-%EB%AC%B8%EC%A0%9C\">1차 도전의 문제</a></li>\n<li><a href=\"/ho_blog/react-history.md/#2%EC%B0%A8-%EB%8F%84%EC%A0%84-static-store--context\">2차 도전 (static store + Context)</a></li>\n<li><a href=\"/ho_blog/react-history.md/#%EC%A0%95%EB%A6%AC\">정리</a></li>\n</ul>","fields":{"slug":"/react-history.md/"},"frontmatter":{"title":"React 뒤로가기 시 이전 상태 유지를 위한 history","date":"Apr 04, 2020","tags":["undefined"],"keywords":["Merlin Tech Blog","Merlin.ho"],"update":"Jan 01, 0001"}}},"pageContext":{"slug":"/react-history.md/","series":[],"lastmod":"0001-01-01"}}}