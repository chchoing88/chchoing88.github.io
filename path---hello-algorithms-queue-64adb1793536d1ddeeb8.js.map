{"version":3,"sources":["webpack:///path---hello-algorithms-queue-64adb1793536d1ddeeb8.js","webpack:///./.cache/json/hello-algorithms-queue.json"],"names":["webpackJsonp","508","module","exports","data","site","siteMetadata","title","author","markdownRemark","id","html","frontmatter","date","pathContext","slug"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,MAAQC,cAAgBC,MAAA,kBAAAC,OAAA,cAAgDC,gBAAmBC,GAAA,kIAAAC,KAAA;AAA8/pEC,aAAyDL,MAAA,kBAAAM,KAAA,oBAAoDC,aAAgBC,KAAA","file":"path---hello-algorithms-queue-64adb1793536d1ddeeb8.js","sourcesContent":["webpackJsonp([149621425204082],{\n\n/***/ 508:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"title\":\"Merlin Tec Blog\",\"author\":\"merlin.ho\"}},\"markdownRemark\":{\"id\":\"/Users/merlin.ho/Documents/workspace/ho_blog/gatsby-blog/src/pages/hello-algorithms/queue.md absPath of file >>> MarkdownRemark\",\"html\":\"<h2>큐의 동작</h2>\\n<ul>\\n<li>큐에 요소를 삽입하는 동작을 인큐(enqueue)</li>\\n<li>큐에서 요소를 삭제하는 동작을 데큐(dequeue)</li>\\n<li>인큐는 큐에 끝부분에 요소를 추가하며, 데큐는 큐의 앞부분에서 요소를 삭제한다.</li>\\n<li>피크(peek)는 큐의 앞부분에 있는 요소를 확인할 수 있다. 또한 요소를 반환하지는 않는다.</li>\\n<li>length 프로퍼티를 이용하면 큐에 얼마나 많은 요소가 저장되어 있는지 확인 할 수 있다.</li>\\n</ul>\\n<h2>큐 구현</h2>\\n<pre class=\\\"editor editor-colors\\\"><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span class=\\\"storage type class ts\\\"><span>class</span></span><span>&nbsp;</span><span class=\\\"entity name type class ts\\\"><span>Queue</span></span><span class=\\\"meta type parameters ts\\\"><span class=\\\"punctuation definition typeparameters begin ts\\\"><span>&lt;</span></span><span class=\\\"entity name type ts\\\"><span>T</span></span><span class=\\\"punctuation definition typeparameters end ts\\\"><span>&gt;</span></span></span><span>&nbsp;</span><span class=\\\"punctuation definition block ts\\\"><span>{</span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"meta field declaration ts\\\"><span class=\\\"meta definition property ts variable object property ts\\\"><span>dataStore</span></span><span class=\\\"meta type annotation ts\\\"><span class=\\\"keyword operator type annotation ts\\\"><span>:</span></span><span>&nbsp;</span><span class=\\\"entity name type ts\\\"><span>T</span></span><span class=\\\"meta type tuple ts\\\"><span class=\\\"meta brace square ts\\\"><span>[</span><span>]</span></span></span></span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span>&nbsp;</span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"meta method declaration ts\\\"><span class=\\\"storage type ts\\\"><span>constructor</span></span><span class=\\\"meta parameters ts\\\"><span class=\\\"punctuation definition parameters begin ts\\\"><span>(</span></span><span class=\\\"variable parameter ts\\\"><span>dataStore</span></span><span class=\\\"keyword operator optional ts\\\"><span>?</span></span><span class=\\\"meta type annotation ts\\\"><span class=\\\"keyword operator type annotation ts\\\"><span>:</span></span><span>&nbsp;</span><span class=\\\"entity name type ts\\\"><span>T</span></span><span class=\\\"meta type tuple ts\\\"><span class=\\\"meta brace square ts\\\"><span>[</span><span>]</span></span></span></span><span class=\\\"punctuation definition parameters end ts\\\"><span>)</span></span></span><span>&nbsp;</span><span class=\\\"meta block ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>{</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span class=\\\"meta method declaration ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"variable language this ts\\\"><span>this</span></span><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"variable other property ts\\\"><span>dataStore</span></span><span>&nbsp;</span><span class=\\\"keyword operator assignment ts\\\"><span>=</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>dataStore</span></span><span>&nbsp;</span><span class=\\\"keyword operator logical ts\\\"><span>||</span></span><span>&nbsp;</span><span class=\\\"meta array literal ts\\\"><span class=\\\"meta brace square ts\\\"><span>[</span><span>]</span></span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span class=\\\"meta method declaration ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span>&nbsp;</span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"meta method declaration ts\\\"><span class=\\\"storage type property ts\\\"><span>get</span></span><span>&nbsp;</span><span class=\\\"meta definition method ts entity name function ts\\\"><span>length</span></span><span class=\\\"meta parameters ts\\\"><span class=\\\"punctuation definition parameters begin ts\\\"><span>(</span></span><span class=\\\"punctuation definition parameters end ts\\\"><span>)</span></span></span><span>&nbsp;</span><span class=\\\"meta block ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>{</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span class=\\\"meta method declaration ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"keyword control flow ts\\\"><span>return</span></span><span>&nbsp;</span><span class=\\\"variable language this ts\\\"><span>this</span></span><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"variable other object property ts\\\"><span>dataStore</span></span><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"support variable property ts\\\"><span>length</span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span class=\\\"meta method declaration ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span>&nbsp;</span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"meta method declaration ts\\\"><span class=\\\"meta definition method ts entity name function ts\\\"><span>enqueue</span></span><span class=\\\"meta parameters ts\\\"><span class=\\\"punctuation definition parameters begin ts\\\"><span>(</span></span><span class=\\\"variable parameter ts\\\"><span>element</span></span><span class=\\\"meta type annotation ts\\\"><span class=\\\"keyword operator type annotation ts\\\"><span>:</span></span><span>&nbsp;</span><span class=\\\"entity name type ts\\\"><span>T</span></span></span><span class=\\\"punctuation definition parameters end ts\\\"><span>)</span></span></span><span>&nbsp;</span><span class=\\\"meta block ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>{</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span class=\\\"meta method declaration ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"meta function-call ts\\\"><span class=\\\"variable language this ts\\\"><span>this</span></span><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"variable other object property ts\\\"><span>dataStore</span></span><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"support function ts\\\"><span>push</span></span></span><span class=\\\"meta brace round ts\\\"><span>(</span></span><span class=\\\"variable other readwrite ts\\\"><span>element</span></span><span class=\\\"meta brace round ts\\\"><span>)</span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span class=\\\"meta method declaration ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span>&nbsp;</span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"meta method declaration ts\\\"><span class=\\\"meta definition method ts entity name function ts\\\"><span>dequeue</span></span><span class=\\\"meta parameters ts\\\"><span class=\\\"punctuation definition parameters begin ts\\\"><span>(</span></span><span class=\\\"punctuation definition parameters end ts\\\"><span>)</span></span></span><span>&nbsp;</span><span class=\\\"meta block ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>{</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span class=\\\"meta method declaration ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"keyword control flow ts\\\"><span>return</span></span><span>&nbsp;</span><span class=\\\"meta function-call ts\\\"><span class=\\\"variable language this ts\\\"><span>this</span></span><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"variable other object property ts\\\"><span>dataStore</span></span><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"support function ts\\\"><span>shift</span></span></span><span class=\\\"meta brace round ts\\\"><span>(</span><span>)</span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span class=\\\"meta method declaration ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span>&nbsp;</span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span class=\\\"punctuation whitespace comment leading ts\\\"><span>&nbsp;&nbsp;</span></span><span class=\\\"comment line double-slash ts\\\"><span class=\\\"punctuation definition comment ts\\\"><span>//</span></span><span>&nbsp;큐의&nbsp;앞부분의&nbsp;요소를&nbsp;확인한다.</span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"meta method declaration ts\\\"><span class=\\\"meta definition method ts entity name function ts\\\"><span>front</span></span><span class=\\\"meta parameters ts\\\"><span class=\\\"punctuation definition parameters begin ts\\\"><span>(</span></span><span class=\\\"punctuation definition parameters end ts\\\"><span>)</span></span></span><span>&nbsp;</span><span class=\\\"meta block ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>{</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span class=\\\"meta method declaration ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"keyword control flow ts\\\"><span>return</span></span><span>&nbsp;</span><span class=\\\"variable language this ts\\\"><span>this</span></span><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"variable other property ts\\\"><span>dataStore</span></span><span class=\\\"meta array literal ts\\\"><span class=\\\"meta brace square ts\\\"><span>[</span></span><span class=\\\"constant numeric decimal ts\\\"><span>0</span></span><span class=\\\"meta brace square ts\\\"><span>]</span></span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span class=\\\"meta method declaration ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span>&nbsp;</span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span class=\\\"punctuation whitespace comment leading ts\\\"><span>&nbsp;&nbsp;</span></span><span class=\\\"comment line double-slash ts\\\"><span class=\\\"punctuation definition comment ts\\\"><span>//</span></span><span>&nbsp;큐의&nbsp;끝부분의&nbsp;요소를&nbsp;확인한다.</span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"meta method declaration ts\\\"><span class=\\\"meta definition method ts entity name function ts\\\"><span>back</span></span><span class=\\\"meta parameters ts\\\"><span class=\\\"punctuation definition parameters begin ts\\\"><span>(</span></span><span class=\\\"punctuation definition parameters end ts\\\"><span>)</span></span></span><span>&nbsp;</span><span class=\\\"meta block ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>{</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span class=\\\"meta method declaration ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"keyword control flow ts\\\"><span>return</span></span><span>&nbsp;</span><span class=\\\"variable language this ts\\\"><span>this</span></span><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"variable other property ts\\\"><span>dataStore</span></span><span class=\\\"meta array literal ts\\\"><span class=\\\"meta brace square ts\\\"><span>[</span></span><span class=\\\"variable language this ts\\\"><span>this</span></span><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"variable other object property ts\\\"><span>dataStore</span></span><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"support variable property ts\\\"><span>length</span></span><span>&nbsp;</span><span class=\\\"keyword operator arithmetic ts\\\"><span>-</span></span><span>&nbsp;</span><span class=\\\"constant numeric decimal ts\\\"><span>1</span></span><span class=\\\"meta brace square ts\\\"><span>]</span></span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span class=\\\"meta method declaration ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span>&nbsp;</span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"meta method declaration ts\\\"><span class=\\\"meta definition method ts entity name function ts\\\"><span>toString</span></span><span class=\\\"meta parameters ts\\\"><span class=\\\"punctuation definition parameters begin ts\\\"><span>(</span></span><span class=\\\"punctuation definition parameters end ts\\\"><span>)</span></span></span><span>&nbsp;</span><span class=\\\"meta block ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>{</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span class=\\\"meta method declaration ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"keyword control flow ts\\\"><span>return</span></span><span>&nbsp;</span><span class=\\\"meta function-call ts\\\"><span class=\\\"variable language this ts\\\"><span>this</span></span><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"variable other object property ts\\\"><span>dataStore</span></span><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"support function ts\\\"><span>join</span></span></span><span class=\\\"meta brace round ts\\\"><span>(</span></span><span class=\\\"string quoted double ts\\\"><span class=\\\"punctuation definition string begin ts\\\"><span>&quot;</span></span><span class=\\\"constant character escape ts\\\"><span>\\\\n</span></span><span class=\\\"punctuation definition string end ts\\\"><span>&quot;</span></span></span><span class=\\\"meta brace round ts\\\"><span>)</span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span class=\\\"meta method declaration ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span>&nbsp;</span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span class=\\\"punctuation whitespace comment leading ts\\\"><span>&nbsp;&nbsp;</span></span><span class=\\\"comment line double-slash ts\\\"><span class=\\\"punctuation definition comment ts\\\"><span>//</span></span><span>&nbsp;큐가&nbsp;비었는지&nbsp;안비었는지&nbsp;확인한다.</span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"meta method declaration ts\\\"><span class=\\\"meta definition method ts entity name function ts\\\"><span>empty</span></span><span class=\\\"meta parameters ts\\\"><span class=\\\"punctuation definition parameters begin ts\\\"><span>(</span></span><span class=\\\"punctuation definition parameters end ts\\\"><span>)</span></span></span><span>&nbsp;</span><span class=\\\"meta block ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>{</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span class=\\\"meta method declaration ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"keyword control conditional ts\\\"><span>if</span></span><span>&nbsp;</span><span class=\\\"meta brace round ts\\\"><span>(</span></span><span class=\\\"variable language this ts\\\"><span>this</span></span><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"variable other object property ts\\\"><span>dataStore</span></span><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"support variable property ts\\\"><span>length</span></span><span>&nbsp;</span><span class=\\\"keyword operator comparison ts\\\"><span>===</span></span><span>&nbsp;</span><span class=\\\"constant numeric decimal ts\\\"><span>0</span></span><span class=\\\"meta brace round ts\\\"><span>)</span></span><span>&nbsp;</span><span class=\\\"keyword control flow ts\\\"><span>return</span></span><span>&nbsp;</span><span class=\\\"constant language boolean true ts\\\"><span>true</span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span class=\\\"meta method declaration ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"keyword control flow ts\\\"><span>return</span></span><span>&nbsp;</span><span class=\\\"constant language boolean false ts\\\"><span>false</span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span class=\\\"meta method declaration ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span>&nbsp;</span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"meta method declaration ts\\\"><span class=\\\"meta array literal ts\\\"><span class=\\\"meta brace square ts\\\"><span>[</span></span><span class=\\\"support class builtin ts\\\"><span>Symbol</span></span><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"variable other property ts\\\"><span>iterator</span></span><span class=\\\"meta brace square ts\\\"><span>]</span></span></span><span class=\\\"meta parameters ts\\\"><span class=\\\"punctuation definition parameters begin ts\\\"><span>(</span></span><span class=\\\"punctuation definition parameters end ts\\\"><span>)</span></span></span><span>&nbsp;</span><span class=\\\"meta block ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>{</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span class=\\\"meta method declaration ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"meta var expr ts\\\"><span class=\\\"storage type ts\\\"><span>let</span></span><span>&nbsp;</span><span class=\\\"meta var-single-variable expr ts\\\"><span class=\\\"meta definition variable ts variable other readwrite ts\\\"><span>position</span></span><span>&nbsp;</span></span><span class=\\\"keyword operator assignment ts\\\"><span>=</span></span><span>&nbsp;</span><span class=\\\"keyword operator arithmetic ts\\\"><span>-</span></span><span class=\\\"constant numeric decimal ts\\\"><span>1</span></span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span class=\\\"meta method declaration ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"meta var expr ts\\\"><span class=\\\"storage type ts\\\"><span>const</span></span><span>&nbsp;</span><span class=\\\"meta var-single-variable expr ts\\\"><span class=\\\"meta definition variable ts variable other readwrite ts\\\"><span>dataList</span></span><span>&nbsp;</span></span><span class=\\\"keyword operator assignment ts\\\"><span>=</span></span><span>&nbsp;</span><span class=\\\"variable language this ts\\\"><span>this</span></span><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"variable other property ts\\\"><span>dataStore</span></span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span class=\\\"meta method declaration ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"meta var expr ts\\\"><span class=\\\"storage type ts\\\"><span>const</span></span><span>&nbsp;</span><span class=\\\"meta var-single-variable expr ts\\\"><span class=\\\"meta definition variable ts variable other readwrite ts\\\"><span>length</span></span><span>&nbsp;</span></span><span class=\\\"keyword operator assignment ts\\\"><span>=</span></span><span>&nbsp;</span><span class=\\\"variable language this ts\\\"><span>this</span></span><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"support variable property ts\\\"><span>length</span></span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span class=\\\"meta method declaration ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"keyword control flow ts\\\"><span>return</span></span><span class=\\\"meta objectliteral ts\\\"><span>&nbsp;</span><span class=\\\"punctuation definition block ts\\\"><span>{</span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span class=\\\"meta method declaration ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta objectliteral ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"meta method declaration ts\\\"><span class=\\\"meta definition method ts entity name function ts\\\"><span>next</span></span><span class=\\\"meta parameters ts\\\"><span class=\\\"punctuation definition parameters begin ts\\\"><span>(</span></span><span class=\\\"punctuation definition parameters end ts\\\"><span>)</span></span></span><span>&nbsp;</span><span class=\\\"meta block ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>{</span></span></span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span class=\\\"meta method declaration ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta objectliteral ts\\\"><span class=\\\"meta method declaration ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>position</span></span><span>&nbsp;</span><span class=\\\"keyword operator assignment ts\\\"><span>=</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>position</span></span><span>&nbsp;</span><span class=\\\"keyword operator arithmetic ts\\\"><span>+</span></span><span>&nbsp;</span><span class=\\\"constant numeric decimal ts\\\"><span>1</span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span class=\\\"meta method declaration ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta objectliteral ts\\\"><span class=\\\"meta method declaration ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"keyword control flow ts\\\"><span>return</span></span><span class=\\\"meta objectliteral ts\\\"><span>&nbsp;</span><span class=\\\"punctuation definition block ts\\\"><span>{</span></span></span></span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span class=\\\"meta method declaration ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta objectliteral ts\\\"><span class=\\\"meta method declaration ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta objectliteral ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"meta object member ts\\\"><span class=\\\"meta object-literal key ts\\\"><span>value</span></span><span class=\\\"meta object-literal key ts punctuation separator key-value ts\\\"><span>:</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>dataList</span></span><span class=\\\"meta array literal ts\\\"><span class=\\\"meta brace square ts\\\"><span>[</span></span><span class=\\\"variable other readwrite ts\\\"><span>position</span></span><span class=\\\"meta brace square ts\\\"><span>]</span></span></span></span><span class=\\\"punctuation separator comma ts\\\"><span>,</span></span></span></span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span class=\\\"meta method declaration ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta objectliteral ts\\\"><span class=\\\"meta method declaration ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta objectliteral ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"meta object member ts\\\"><span class=\\\"meta object-literal key ts\\\"><span>done</span></span><span class=\\\"meta object-literal key ts punctuation separator key-value ts\\\"><span>:</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>position</span></span><span>&nbsp;</span><span class=\\\"keyword operator relational ts\\\"><span>&gt;=</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>length</span></span></span></span></span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span class=\\\"meta method declaration ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta objectliteral ts\\\"><span class=\\\"meta method declaration ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta objectliteral ts\\\"><span class=\\\"meta object member ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span class=\\\"meta method declaration ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta objectliteral ts\\\"><span class=\\\"meta method declaration ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span class=\\\"meta method declaration ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta objectliteral ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span class=\\\"meta method declaration ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span></span></div></pre>\\n<h2>예제</h2>\\n<ol>\\n<li>큐로 데이터 정렬하기 (기수정렬)</li>\\n</ol>\\n<p>기수 정렬은 두 번의 과정을 걸쳐 데이터를 정렬한다. 우리는 0 부터 99 사이의 정수 데이터를 사용한다.\\n첫 번째 과정에서는 1의 자리 숫자를 기준으로 숫자를 정렬하고 , 두 번째 과정에서는 10의 자리 숫자를 기주능로 데이터를 정렬한다.</p>\\n<pre class=\\\"editor editor-colors\\\"><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta type declaration ts\\\"><span class=\\\"storage type type ts\\\"><span>type</span></span><span>&nbsp;</span><span class=\\\"entity name type alias ts\\\"><span>DigitType</span></span><span>&nbsp;</span><span class=\\\"keyword operator assignment ts\\\"><span>=</span></span><span>&nbsp;</span><span class=\\\"constant numeric decimal ts\\\"><span>1</span></span><span>&nbsp;</span><span class=\\\"keyword operator type ts\\\"><span>|</span></span><span>&nbsp;</span><span class=\\\"constant numeric decimal ts\\\"><span>10</span></span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta var expr ts\\\"><span class=\\\"storage type ts\\\"><span>const</span></span><span>&nbsp;</span><span class=\\\"meta var-single-variable expr ts\\\"><span class=\\\"meta definition variable ts variable other readwrite ts\\\"><span>sampleList</span></span><span>&nbsp;</span></span><span class=\\\"keyword operator assignment ts\\\"><span>=</span></span><span>&nbsp;</span><span class=\\\"meta array literal ts\\\"><span class=\\\"meta brace square ts\\\"><span>[</span></span><span class=\\\"constant numeric decimal ts\\\"><span>10</span></span><span class=\\\"punctuation separator comma ts\\\"><span>,</span></span><span>&nbsp;</span><span class=\\\"constant numeric decimal ts\\\"><span>29</span></span><span class=\\\"punctuation separator comma ts\\\"><span>,</span></span><span>&nbsp;</span><span class=\\\"constant numeric decimal ts\\\"><span>40</span></span><span class=\\\"punctuation separator comma ts\\\"><span>,</span></span><span>&nbsp;</span><span class=\\\"constant numeric decimal ts\\\"><span>50</span></span><span class=\\\"punctuation separator comma ts\\\"><span>,</span></span><span>&nbsp;</span><span class=\\\"constant numeric decimal ts\\\"><span>32</span></span><span class=\\\"punctuation separator comma ts\\\"><span>,</span></span><span>&nbsp;</span><span class=\\\"constant numeric decimal ts\\\"><span>54</span></span><span class=\\\"punctuation separator comma ts\\\"><span>,</span></span><span>&nbsp;</span><span class=\\\"constant numeric decimal ts\\\"><span>34</span></span><span class=\\\"punctuation separator comma ts\\\"><span>,</span></span><span>&nbsp;</span><span class=\\\"constant numeric decimal ts\\\"><span>56</span></span><span class=\\\"punctuation separator comma ts\\\"><span>,</span></span><span>&nbsp;</span><span class=\\\"constant numeric decimal ts\\\"><span>23</span></span><span class=\\\"punctuation separator comma ts\\\"><span>,</span></span><span>&nbsp;</span><span class=\\\"constant numeric decimal ts\\\"><span>97</span></span><span class=\\\"punctuation separator comma ts\\\"><span>,</span></span><span>&nbsp;</span><span class=\\\"constant numeric decimal ts\\\"><span>78</span></span><span class=\\\"meta brace square ts\\\"><span>]</span></span></span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span>&nbsp;</span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"comment line double-slash ts\\\"><span class=\\\"punctuation definition comment ts\\\"><span>//</span></span><span>&nbsp;digit&nbsp;정렬&nbsp;기준&nbsp;자릿수</span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"storage type function ts\\\"><span>function</span></span><span>&nbsp;</span><span class=\\\"meta definition function ts entity name function ts\\\"><span>distribute</span></span><span class=\\\"meta parameters ts\\\"><span class=\\\"punctuation definition parameters begin ts\\\"><span>(</span></span><span class=\\\"variable parameter ts\\\"><span>targetList</span></span><span class=\\\"meta type annotation ts\\\"><span class=\\\"keyword operator type annotation ts\\\"><span>:</span></span><span>&nbsp;</span><span class=\\\"support type primitive ts\\\"><span>number</span></span><span class=\\\"meta type tuple ts\\\"><span class=\\\"meta brace square ts\\\"><span>[</span><span>]</span></span></span></span><span class=\\\"punctuation separator parameter ts\\\"><span>,</span></span><span>&nbsp;</span><span class=\\\"variable parameter ts\\\"><span>digit</span></span><span class=\\\"meta type annotation ts\\\"><span class=\\\"keyword operator type annotation ts\\\"><span>:</span></span><span>&nbsp;</span><span class=\\\"entity name type ts\\\"><span>DigitType</span></span></span><span class=\\\"punctuation definition parameters end ts\\\"><span>)</span></span></span><span>&nbsp;</span><span class=\\\"meta block ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>{</span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"meta var expr ts\\\"><span class=\\\"storage type ts\\\"><span>const</span></span><span>&nbsp;</span><span class=\\\"meta var-single-variable expr ts\\\"><span class=\\\"meta definition variable ts variable other readwrite ts\\\"><span>result</span></span><span class=\\\"meta type annotation ts\\\"><span class=\\\"keyword operator type annotation ts\\\"><span>:</span></span><span>&nbsp;</span><span class=\\\"entity name type ts\\\"><span>Queue</span></span><span class=\\\"meta type parameters ts\\\"><span class=\\\"punctuation definition typeparameters begin ts\\\"><span>&lt;</span></span><span class=\\\"support type primitive ts\\\"><span>number</span></span><span class=\\\"punctuation definition typeparameters end ts\\\"><span>&gt;</span></span></span><span class=\\\"meta type tuple ts\\\"><span class=\\\"meta brace square ts\\\"><span>[</span><span>]</span></span></span><span>&nbsp;</span></span></span><span class=\\\"keyword operator assignment ts\\\"><span>=</span></span><span>&nbsp;</span><span class=\\\"new expr ts\\\"><span class=\\\"keyword operator new ts\\\"><span>new</span></span><span>&nbsp;</span><span class=\\\"entity name type ts\\\"><span>Array</span></span><span class=\\\"meta brace round ts\\\"><span>(</span></span><span class=\\\"constant numeric decimal ts\\\"><span>10</span></span><span class=\\\"meta brace round ts\\\"><span>)</span></span></span><span class=\\\"meta function-call ts\\\"><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"entity name function ts\\\"><span>fill</span></span></span><span class=\\\"meta brace round ts\\\"><span>(</span></span><span class=\\\"constant numeric decimal ts\\\"><span>1</span></span><span class=\\\"meta brace round ts\\\"><span>)</span></span><span class=\\\"meta function-call ts\\\"><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"entity name function ts\\\"><span>map</span></span></span><span class=\\\"meta brace round ts\\\"><span>(</span></span><span class=\\\"meta arrow ts\\\"><span class=\\\"variable parameter ts\\\"><span>_</span></span><span>&nbsp;</span><span class=\\\"storage type function arrow ts\\\"><span>=&gt;</span></span><span>&nbsp;</span></span><span class=\\\"new expr ts\\\"><span class=\\\"keyword operator new ts\\\"><span>new</span></span><span>&nbsp;</span><span class=\\\"entity name type ts\\\"><span>Queue</span></span><span class=\\\"meta brace round ts\\\"><span>(</span><span>)</span></span></span><span class=\\\"meta brace round ts\\\"><span>)</span></span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;</span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"meta function-call ts\\\"><span class=\\\"variable other object ts\\\"><span>targetList</span></span><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"support function dom ts\\\"><span>forEach</span></span></span><span class=\\\"meta brace round ts\\\"><span>(</span></span><span class=\\\"meta arrow ts\\\"><span class=\\\"variable parameter ts\\\"><span>num</span></span><span>&nbsp;</span><span class=\\\"storage type function arrow ts\\\"><span>=&gt;</span></span><span>&nbsp;</span><span class=\\\"meta block ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>{</span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta arrow ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"keyword control conditional ts\\\"><span>if</span></span><span>&nbsp;</span><span class=\\\"meta brace round ts\\\"><span>(</span></span><span class=\\\"variable other readwrite ts\\\"><span>digit</span></span><span>&nbsp;</span><span class=\\\"keyword operator comparison ts\\\"><span>===</span></span><span>&nbsp;</span><span class=\\\"constant numeric decimal ts\\\"><span>1</span></span><span class=\\\"meta brace round ts\\\"><span>)</span></span><span>&nbsp;</span><span class=\\\"meta block ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>{</span></span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta arrow ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"meta var expr ts\\\"><span class=\\\"storage type ts\\\"><span>const</span></span><span>&nbsp;</span><span class=\\\"meta var-single-variable expr ts\\\"><span class=\\\"meta definition variable ts variable other readwrite ts\\\"><span>rest</span></span><span>&nbsp;</span></span><span class=\\\"keyword operator assignment ts\\\"><span>=</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>num</span></span><span>&nbsp;</span><span class=\\\"keyword operator arithmetic ts\\\"><span>%</span></span><span>&nbsp;</span><span class=\\\"constant numeric decimal ts\\\"><span>10</span></span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta arrow ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>result</span></span><span class=\\\"meta array literal ts\\\"><span class=\\\"meta brace square ts\\\"><span>[</span></span><span class=\\\"variable other readwrite ts\\\"><span>rest</span></span><span class=\\\"meta brace square ts\\\"><span>]</span></span></span><span class=\\\"meta function-call ts\\\"><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"entity name function ts\\\"><span>enqueue</span></span></span><span class=\\\"meta brace round ts\\\"><span>(</span></span><span class=\\\"variable other readwrite ts\\\"><span>num</span></span><span class=\\\"meta brace round ts\\\"><span>)</span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta arrow ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span><span>&nbsp;</span><span class=\\\"keyword control conditional ts\\\"><span>else</span></span><span>&nbsp;</span><span class=\\\"meta block ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>{</span></span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta arrow ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"meta var expr ts\\\"><span class=\\\"storage type ts\\\"><span>const</span></span><span>&nbsp;</span><span class=\\\"meta var-single-variable expr ts\\\"><span class=\\\"meta definition variable ts variable other readwrite ts\\\"><span>rest</span></span><span>&nbsp;</span></span><span class=\\\"keyword operator assignment ts\\\"><span>=</span></span><span>&nbsp;</span><span class=\\\"meta function-call ts\\\"><span class=\\\"support constant math ts\\\"><span>Math</span></span><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"support function math ts\\\"><span>floor</span></span></span><span class=\\\"meta brace round ts\\\"><span>(</span></span><span class=\\\"variable other readwrite ts\\\"><span>num</span></span><span>&nbsp;</span><span class=\\\"keyword operator arithmetic ts\\\"><span>/</span></span><span>&nbsp;</span><span class=\\\"constant numeric decimal ts\\\"><span>10</span></span><span class=\\\"meta brace round ts\\\"><span>)</span></span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta arrow ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>result</span></span><span class=\\\"meta array literal ts\\\"><span class=\\\"meta brace square ts\\\"><span>[</span></span><span class=\\\"variable other readwrite ts\\\"><span>rest</span></span><span class=\\\"meta brace square ts\\\"><span>]</span></span></span><span class=\\\"meta function-call ts\\\"><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"entity name function ts\\\"><span>enqueue</span></span></span><span class=\\\"meta brace round ts\\\"><span>(</span></span><span class=\\\"variable other readwrite ts\\\"><span>num</span></span><span class=\\\"meta brace round ts\\\"><span>)</span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta arrow ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta arrow ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span></span><span class=\\\"meta brace round ts\\\"><span>)</span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;</span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"keyword control flow ts\\\"><span>return</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>result</span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span>&nbsp;</span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"storage type function ts\\\"><span>function</span></span><span>&nbsp;</span><span class=\\\"meta definition function ts entity name function ts\\\"><span>collect</span></span><span class=\\\"meta parameters ts\\\"><span class=\\\"punctuation definition parameters begin ts\\\"><span>(</span></span><span class=\\\"variable parameter ts\\\"><span>queueList</span></span><span class=\\\"meta type annotation ts\\\"><span class=\\\"keyword operator type annotation ts\\\"><span>:</span></span><span>&nbsp;</span><span class=\\\"entity name type ts\\\"><span>Queue</span></span><span class=\\\"meta type parameters ts\\\"><span class=\\\"punctuation definition typeparameters begin ts\\\"><span>&lt;</span></span><span class=\\\"support type primitive ts\\\"><span>number</span></span><span class=\\\"punctuation definition typeparameters end ts\\\"><span>&gt;</span></span></span><span class=\\\"meta type tuple ts\\\"><span class=\\\"meta brace square ts\\\"><span>[</span><span>]</span></span></span></span><span class=\\\"punctuation definition parameters end ts\\\"><span>)</span></span></span><span>&nbsp;</span><span class=\\\"meta block ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>{</span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"keyword control flow ts\\\"><span>return</span></span><span>&nbsp;</span><span class=\\\"meta function-call ts\\\"><span class=\\\"variable other object ts\\\"><span>queueList</span></span><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"entity name function ts\\\"><span>flatMap</span></span></span><span class=\\\"meta brace round ts\\\"><span>(</span></span><span class=\\\"meta arrow ts\\\"><span class=\\\"variable parameter ts\\\"><span>queue</span></span><span>&nbsp;</span><span class=\\\"storage type function arrow ts\\\"><span>=&gt;</span></span><span>&nbsp;</span><span class=\\\"meta block ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>{</span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta arrow ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"punctuation whitespace comment leading ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class=\\\"comment line double-slash ts\\\"><span class=\\\"punctuation definition comment ts\\\"><span>//</span></span><span>&nbsp;return&nbsp;queue.dataStore</span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta arrow ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"meta var expr ts\\\"><span class=\\\"storage type ts\\\"><span>const</span></span><span>&nbsp;</span><span class=\\\"meta var-single-variable expr ts\\\"><span class=\\\"meta definition variable ts variable other readwrite ts\\\"><span>queueDataList</span></span><span>&nbsp;</span></span><span class=\\\"keyword operator assignment ts\\\"><span>=</span></span><span>&nbsp;</span><span class=\\\"meta array literal ts\\\"><span class=\\\"meta brace square ts\\\"><span>[</span><span>]</span></span></span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta arrow ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"keyword control loop ts\\\"><span>for</span></span><span>&nbsp;</span><span class=\\\"meta brace round ts\\\"><span>(</span></span><span class=\\\"meta var expr ts\\\"><span class=\\\"storage type ts\\\"><span>const</span></span><span>&nbsp;</span><span class=\\\"meta var-single-variable expr ts\\\"><span class=\\\"meta definition variable ts variable other readwrite ts\\\"><span>value</span></span></span></span><span>&nbsp;</span><span class=\\\"keyword operator expression of ts\\\"><span>of</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>queue</span></span><span class=\\\"meta brace round ts\\\"><span>)</span></span><span>&nbsp;</span><span class=\\\"meta block ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>{</span></span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta arrow ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"meta function-call ts\\\"><span class=\\\"variable other object ts\\\"><span>queueDataList</span></span><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"support function ts\\\"><span>push</span></span></span><span class=\\\"meta brace round ts\\\"><span>(</span></span><span class=\\\"variable other readwrite ts\\\"><span>value</span></span><span class=\\\"meta brace round ts\\\"><span>)</span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta arrow ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta arrow ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"keyword control flow ts\\\"><span>return</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>queueDataList</span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta arrow ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span></span><span class=\\\"meta brace round ts\\\"><span>)</span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span>&nbsp;</span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta var expr ts\\\"><span class=\\\"storage type ts\\\"><span>const</span></span><span>&nbsp;</span><span class=\\\"meta var-single-variable expr ts\\\"><span class=\\\"meta definition variable ts variable other readwrite ts\\\"><span>firstQueue</span></span><span>&nbsp;</span></span><span class=\\\"keyword operator assignment ts\\\"><span>=</span></span><span>&nbsp;</span><span class=\\\"meta function-call ts\\\"><span class=\\\"entity name function ts\\\"><span>distribute</span></span></span><span class=\\\"meta brace round ts\\\"><span>(</span></span><span class=\\\"variable other readwrite ts\\\"><span>sampleList</span></span><span class=\\\"punctuation separator comma ts\\\"><span>,</span></span><span>&nbsp;</span><span class=\\\"constant numeric decimal ts\\\"><span>1</span></span><span class=\\\"meta brace round ts\\\"><span>)</span></span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta var expr ts\\\"><span class=\\\"storage type ts\\\"><span>const</span></span><span>&nbsp;</span><span class=\\\"meta var-single-variable expr ts\\\"><span class=\\\"meta definition variable ts variable other readwrite ts\\\"><span>firstCollectList</span></span><span>&nbsp;</span></span><span class=\\\"keyword operator assignment ts\\\"><span>=</span></span><span>&nbsp;</span><span class=\\\"meta function-call ts\\\"><span class=\\\"entity name function ts\\\"><span>collect</span></span></span><span class=\\\"meta brace round ts\\\"><span>(</span></span><span class=\\\"variable other readwrite ts\\\"><span>firstQueue</span></span><span class=\\\"meta brace round ts\\\"><span>)</span></span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta var expr ts\\\"><span class=\\\"storage type ts\\\"><span>const</span></span><span>&nbsp;</span><span class=\\\"meta var-single-variable expr ts\\\"><span class=\\\"meta definition variable ts variable other readwrite ts\\\"><span>secondQueue</span></span><span>&nbsp;</span></span><span class=\\\"keyword operator assignment ts\\\"><span>=</span></span><span>&nbsp;</span><span class=\\\"meta function-call ts\\\"><span class=\\\"entity name function ts\\\"><span>distribute</span></span></span><span class=\\\"meta brace round ts\\\"><span>(</span></span><span class=\\\"variable other readwrite ts\\\"><span>firstCollectList</span></span><span class=\\\"punctuation separator comma ts\\\"><span>,</span></span><span>&nbsp;</span><span class=\\\"constant numeric decimal ts\\\"><span>10</span></span><span class=\\\"meta brace round ts\\\"><span>)</span></span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta var expr ts\\\"><span class=\\\"storage type ts\\\"><span>const</span></span><span>&nbsp;</span><span class=\\\"meta var-single-variable expr ts\\\"><span class=\\\"meta definition variable ts variable other readwrite ts\\\"><span>result</span></span><span>&nbsp;</span></span><span class=\\\"keyword operator assignment ts\\\"><span>=</span></span><span>&nbsp;</span><span class=\\\"meta function-call ts\\\"><span class=\\\"entity name function ts\\\"><span>collect</span></span></span><span class=\\\"meta brace round ts\\\"><span>(</span></span><span class=\\\"variable other readwrite ts\\\"><span>secondQueue</span></span><span class=\\\"meta brace round ts\\\"><span>)</span></span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span>&nbsp;</span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function-call ts\\\"><span class=\\\"support class console ts\\\"><span>console</span></span><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"support function console ts\\\"><span>log</span></span></span><span class=\\\"meta brace round ts\\\"><span>(</span></span><span class=\\\"string quoted double ts\\\"><span class=\\\"punctuation definition string begin ts\\\"><span>&quot;</span></span><span>sampleList</span><span class=\\\"punctuation definition string end ts\\\"><span>&quot;</span></span></span><span class=\\\"punctuation separator comma ts\\\"><span>,</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>sampleList</span></span><span class=\\\"meta brace round ts\\\"><span>)</span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function-call ts\\\"><span class=\\\"support class console ts\\\"><span>console</span></span><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"support function console ts\\\"><span>log</span></span></span><span class=\\\"meta brace round ts\\\"><span>(</span></span><span class=\\\"string quoted double ts\\\"><span class=\\\"punctuation definition string begin ts\\\"><span>&quot;</span></span><span>result</span><span class=\\\"punctuation definition string end ts\\\"><span>&quot;</span></span></span><span class=\\\"punctuation separator comma ts\\\"><span>,</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>result</span></span><span class=\\\"meta brace round ts\\\"><span>)</span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></div></pre>\\n<ol start=\\\"2\\\">\\n<li>우선순위 큐</li>\\n</ol>\\n<p>보통 큐에서 요소를 삭제할 때는 먼저 삽입한 요소부터 삭제된다. 하지만 이러한 선입선출 방식이 아닌 우선순위와 같은 다른 기준으로 요소를 삭제해야하는 경우도 있다. 이럴때는 우선순위 큐라는 자료구조를 이용한다.</p>\\n<pre class=\\\"editor editor-colors\\\"><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"comment line double-slash ts\\\"><span class=\\\"punctuation definition comment ts\\\"><span>//</span></span><span>&nbsp;기존&nbsp;queue&nbsp;에서&nbsp;dequeue를&nbsp;수정해&nbsp;준다.</span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"comment line double-slash ts\\\"><span class=\\\"punctuation definition comment ts\\\"><span>//</span></span><span>&nbsp;다음과&nbsp;같은&nbsp;큐에&nbsp;들어갈&nbsp;element가&nbsp;있다고&nbsp;가정하자.</span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span>&nbsp;</span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span class=\\\"storage type class ts\\\"><span>class</span></span><span>&nbsp;</span><span class=\\\"entity name type class ts\\\"><span>Job</span></span><span>&nbsp;</span><span class=\\\"punctuation definition block ts\\\"><span>{</span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"meta field declaration ts\\\"><span class=\\\"meta definition property ts variable object property ts\\\"><span>name</span></span><span class=\\\"meta type annotation ts\\\"><span class=\\\"keyword operator type annotation ts\\\"><span>:</span></span><span>&nbsp;</span><span class=\\\"support type primitive ts\\\"><span>string</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"meta field declaration ts\\\"><span class=\\\"meta definition property ts variable object property ts\\\"><span>code</span></span><span class=\\\"meta type annotation ts\\\"><span class=\\\"keyword operator type annotation ts\\\"><span>:</span></span><span>&nbsp;</span><span class=\\\"support type primitive ts\\\"><span>number</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span>&nbsp;</span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"meta method declaration ts\\\"><span class=\\\"storage type ts\\\"><span>constructor</span></span><span class=\\\"meta parameters ts\\\"><span class=\\\"punctuation definition parameters begin ts\\\"><span>(</span></span><span class=\\\"variable parameter ts\\\"><span>name</span></span><span class=\\\"meta type annotation ts\\\"><span class=\\\"keyword operator type annotation ts\\\"><span>:</span></span><span class=\\\"support type primitive ts\\\"><span>string</span></span></span><span class=\\\"punctuation separator parameter ts\\\"><span>,</span></span><span>&nbsp;</span><span class=\\\"variable parameter ts\\\"><span>code</span></span><span class=\\\"meta type annotation ts\\\"><span class=\\\"keyword operator type annotation ts\\\"><span>:</span></span><span class=\\\"support type primitive ts\\\"><span>number</span></span></span><span class=\\\"punctuation definition parameters end ts\\\"><span>)</span></span></span><span>&nbsp;</span><span class=\\\"meta block ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>{</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span class=\\\"meta method declaration ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"variable language this ts\\\"><span>this</span></span><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"support variable property dom ts\\\"><span>name</span></span><span>&nbsp;</span><span class=\\\"keyword operator assignment ts\\\"><span>=</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>name</span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span class=\\\"meta method declaration ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"variable language this ts\\\"><span>this</span></span><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"support variable property dom ts\\\"><span>code</span></span><span>&nbsp;</span><span class=\\\"keyword operator assignment ts\\\"><span>=</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>code</span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span class=\\\"meta method declaration ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span>&nbsp;</span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta var expr ts\\\"><span class=\\\"storage type ts\\\"><span>const</span></span><span>&nbsp;</span><span class=\\\"meta var-single-variable expr ts\\\"><span class=\\\"meta definition variable ts variable other readwrite ts\\\"><span>queue</span></span><span>&nbsp;</span></span><span class=\\\"keyword operator assignment ts\\\"><span>=</span></span><span>&nbsp;</span><span class=\\\"new expr ts\\\"><span class=\\\"keyword operator new ts\\\"><span>new</span></span><span>&nbsp;</span><span class=\\\"entity name type ts\\\"><span>Queue</span></span><span class=\\\"meta type parameters ts\\\"><span class=\\\"punctuation definition typeparameters begin ts\\\"><span>&lt;</span></span><span class=\\\"entity name type ts\\\"><span>Job</span></span><span class=\\\"punctuation definition typeparameters end ts\\\"><span>&gt;</span></span></span><span class=\\\"meta brace round ts\\\"><span>(</span><span>)</span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span>&nbsp;</span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"comment line double-slash ts\\\"><span class=\\\"punctuation definition comment ts\\\"><span>//</span></span><span>&nbsp;기존&nbsp;큐에서&nbsp;dequeue는&nbsp;다음과&nbsp;같이&nbsp;수정해&nbsp;준다.</span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span class=\\\"storage type class ts\\\"><span>class</span></span><span>&nbsp;</span><span class=\\\"entity name type class ts\\\"><span>Queue</span></span><span>&nbsp;</span><span class=\\\"punctuation definition block ts\\\"><span>{</span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span class=\\\"punctuation whitespace comment leading ts\\\"><span>&nbsp;&nbsp;</span></span><span class=\\\"comment line double-slash ts\\\"><span class=\\\"punctuation definition comment ts\\\"><span>//</span></span><span>&nbsp;(...)</span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"meta method declaration ts\\\"><span class=\\\"meta definition method ts entity name function ts\\\"><span>dequeue</span></span><span class=\\\"meta parameters ts\\\"><span class=\\\"punctuation definition parameters begin ts\\\"><span>(</span></span><span class=\\\"punctuation definition parameters end ts\\\"><span>)</span></span></span><span>&nbsp;</span><span class=\\\"meta block ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>{</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span class=\\\"meta method declaration ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"meta var expr ts\\\"><span class=\\\"storage type ts\\\"><span>const</span></span><span>&nbsp;</span><span class=\\\"meta var-single-variable expr ts\\\"><span class=\\\"meta definition variable ts variable other readwrite ts\\\"><span>targetIndex</span></span><span>&nbsp;</span></span><span class=\\\"keyword operator assignment ts\\\"><span>=</span></span><span>&nbsp;</span><span class=\\\"meta function-call ts\\\"><span class=\\\"variable language this ts\\\"><span>this</span></span><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"variable other object property ts\\\"><span>dataStore</span></span><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"entity name function ts\\\"><span>reduce</span></span></span><span class=\\\"meta brace round ts\\\"><span>(</span></span><span class=\\\"meta arrow ts\\\"><span class=\\\"meta parameters ts\\\"><span class=\\\"punctuation definition parameters begin ts\\\"><span>(</span></span><span class=\\\"variable parameter ts\\\"><span>resultIndex</span></span><span class=\\\"punctuation separator parameter ts\\\"><span>,</span></span><span>&nbsp;</span><span class=\\\"variable parameter ts\\\"><span>elem</span></span><span class=\\\"punctuation separator parameter ts\\\"><span>,</span></span><span>&nbsp;</span><span class=\\\"variable parameter ts\\\"><span>index</span></span><span class=\\\"punctuation definition parameters end ts\\\"><span>)</span></span></span><span>&nbsp;</span><span class=\\\"storage type function arrow ts\\\"><span>=&gt;</span></span><span>&nbsp;</span><span class=\\\"meta block ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>{</span></span></span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span class=\\\"meta method declaration ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta var expr ts\\\"><span class=\\\"meta arrow ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"keyword control conditional ts\\\"><span>if</span></span><span class=\\\"meta brace round ts\\\"><span>(</span></span><span class=\\\"variable other readwrite ts\\\"><span>resultIndex</span></span><span>&nbsp;</span><span class=\\\"keyword operator relational ts\\\"><span>&gt;</span></span><span>&nbsp;</span><span class=\\\"variable other object ts\\\"><span>elem</span></span><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"support variable property dom ts\\\"><span>code</span></span><span class=\\\"meta brace round ts\\\"><span>)</span></span><span>&nbsp;</span><span class=\\\"meta block ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>{</span></span></span></span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span class=\\\"meta method declaration ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta var expr ts\\\"><span class=\\\"meta arrow ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"keyword control flow ts\\\"><span>return</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>index</span></span></span></span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span class=\\\"meta method declaration ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta var expr ts\\\"><span class=\\\"meta arrow ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span></span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span class=\\\"meta method declaration ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta var expr ts\\\"><span class=\\\"meta arrow ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"keyword control flow ts\\\"><span>return</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>resultIndex</span></span></span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span class=\\\"meta method declaration ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta var expr ts\\\"><span class=\\\"meta arrow ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span></span><span class=\\\"punctuation separator comma ts\\\"><span>,</span></span><span class=\\\"constant numeric decimal ts\\\"><span>0</span></span><span class=\\\"meta brace round ts\\\"><span>)</span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span class=\\\"meta method declaration ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span></span></div></pre>\",\"frontmatter\":{\"title\":\"algorithm Queue\",\"date\":\"March 27, 2020\"}}},\"pathContext\":{\"slug\":\"/hello-algorithms/queue/\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---hello-algorithms-queue-64adb1793536d1ddeeb8.js","module.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"title\":\"Merlin Tec Blog\",\"author\":\"merlin.ho\"}},\"markdownRemark\":{\"id\":\"/Users/merlin.ho/Documents/workspace/ho_blog/gatsby-blog/src/pages/hello-algorithms/queue.md absPath of file >>> MarkdownRemark\",\"html\":\"<h2>큐의 동작</h2>\\n<ul>\\n<li>큐에 요소를 삽입하는 동작을 인큐(enqueue)</li>\\n<li>큐에서 요소를 삭제하는 동작을 데큐(dequeue)</li>\\n<li>인큐는 큐에 끝부분에 요소를 추가하며, 데큐는 큐의 앞부분에서 요소를 삭제한다.</li>\\n<li>피크(peek)는 큐의 앞부분에 있는 요소를 확인할 수 있다. 또한 요소를 반환하지는 않는다.</li>\\n<li>length 프로퍼티를 이용하면 큐에 얼마나 많은 요소가 저장되어 있는지 확인 할 수 있다.</li>\\n</ul>\\n<h2>큐 구현</h2>\\n<pre class=\\\"editor editor-colors\\\"><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span class=\\\"storage type class ts\\\"><span>class</span></span><span>&nbsp;</span><span class=\\\"entity name type class ts\\\"><span>Queue</span></span><span class=\\\"meta type parameters ts\\\"><span class=\\\"punctuation definition typeparameters begin ts\\\"><span>&lt;</span></span><span class=\\\"entity name type ts\\\"><span>T</span></span><span class=\\\"punctuation definition typeparameters end ts\\\"><span>&gt;</span></span></span><span>&nbsp;</span><span class=\\\"punctuation definition block ts\\\"><span>{</span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"meta field declaration ts\\\"><span class=\\\"meta definition property ts variable object property ts\\\"><span>dataStore</span></span><span class=\\\"meta type annotation ts\\\"><span class=\\\"keyword operator type annotation ts\\\"><span>:</span></span><span>&nbsp;</span><span class=\\\"entity name type ts\\\"><span>T</span></span><span class=\\\"meta type tuple ts\\\"><span class=\\\"meta brace square ts\\\"><span>[</span><span>]</span></span></span></span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span>&nbsp;</span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"meta method declaration ts\\\"><span class=\\\"storage type ts\\\"><span>constructor</span></span><span class=\\\"meta parameters ts\\\"><span class=\\\"punctuation definition parameters begin ts\\\"><span>(</span></span><span class=\\\"variable parameter ts\\\"><span>dataStore</span></span><span class=\\\"keyword operator optional ts\\\"><span>?</span></span><span class=\\\"meta type annotation ts\\\"><span class=\\\"keyword operator type annotation ts\\\"><span>:</span></span><span>&nbsp;</span><span class=\\\"entity name type ts\\\"><span>T</span></span><span class=\\\"meta type tuple ts\\\"><span class=\\\"meta brace square ts\\\"><span>[</span><span>]</span></span></span></span><span class=\\\"punctuation definition parameters end ts\\\"><span>)</span></span></span><span>&nbsp;</span><span class=\\\"meta block ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>{</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span class=\\\"meta method declaration ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"variable language this ts\\\"><span>this</span></span><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"variable other property ts\\\"><span>dataStore</span></span><span>&nbsp;</span><span class=\\\"keyword operator assignment ts\\\"><span>=</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>dataStore</span></span><span>&nbsp;</span><span class=\\\"keyword operator logical ts\\\"><span>||</span></span><span>&nbsp;</span><span class=\\\"meta array literal ts\\\"><span class=\\\"meta brace square ts\\\"><span>[</span><span>]</span></span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span class=\\\"meta method declaration ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span>&nbsp;</span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"meta method declaration ts\\\"><span class=\\\"storage type property ts\\\"><span>get</span></span><span>&nbsp;</span><span class=\\\"meta definition method ts entity name function ts\\\"><span>length</span></span><span class=\\\"meta parameters ts\\\"><span class=\\\"punctuation definition parameters begin ts\\\"><span>(</span></span><span class=\\\"punctuation definition parameters end ts\\\"><span>)</span></span></span><span>&nbsp;</span><span class=\\\"meta block ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>{</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span class=\\\"meta method declaration ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"keyword control flow ts\\\"><span>return</span></span><span>&nbsp;</span><span class=\\\"variable language this ts\\\"><span>this</span></span><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"variable other object property ts\\\"><span>dataStore</span></span><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"support variable property ts\\\"><span>length</span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span class=\\\"meta method declaration ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span>&nbsp;</span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"meta method declaration ts\\\"><span class=\\\"meta definition method ts entity name function ts\\\"><span>enqueue</span></span><span class=\\\"meta parameters ts\\\"><span class=\\\"punctuation definition parameters begin ts\\\"><span>(</span></span><span class=\\\"variable parameter ts\\\"><span>element</span></span><span class=\\\"meta type annotation ts\\\"><span class=\\\"keyword operator type annotation ts\\\"><span>:</span></span><span>&nbsp;</span><span class=\\\"entity name type ts\\\"><span>T</span></span></span><span class=\\\"punctuation definition parameters end ts\\\"><span>)</span></span></span><span>&nbsp;</span><span class=\\\"meta block ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>{</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span class=\\\"meta method declaration ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"meta function-call ts\\\"><span class=\\\"variable language this ts\\\"><span>this</span></span><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"variable other object property ts\\\"><span>dataStore</span></span><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"support function ts\\\"><span>push</span></span></span><span class=\\\"meta brace round ts\\\"><span>(</span></span><span class=\\\"variable other readwrite ts\\\"><span>element</span></span><span class=\\\"meta brace round ts\\\"><span>)</span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span class=\\\"meta method declaration ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span>&nbsp;</span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"meta method declaration ts\\\"><span class=\\\"meta definition method ts entity name function ts\\\"><span>dequeue</span></span><span class=\\\"meta parameters ts\\\"><span class=\\\"punctuation definition parameters begin ts\\\"><span>(</span></span><span class=\\\"punctuation definition parameters end ts\\\"><span>)</span></span></span><span>&nbsp;</span><span class=\\\"meta block ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>{</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span class=\\\"meta method declaration ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"keyword control flow ts\\\"><span>return</span></span><span>&nbsp;</span><span class=\\\"meta function-call ts\\\"><span class=\\\"variable language this ts\\\"><span>this</span></span><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"variable other object property ts\\\"><span>dataStore</span></span><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"support function ts\\\"><span>shift</span></span></span><span class=\\\"meta brace round ts\\\"><span>(</span><span>)</span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span class=\\\"meta method declaration ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span>&nbsp;</span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span class=\\\"punctuation whitespace comment leading ts\\\"><span>&nbsp;&nbsp;</span></span><span class=\\\"comment line double-slash ts\\\"><span class=\\\"punctuation definition comment ts\\\"><span>//</span></span><span>&nbsp;큐의&nbsp;앞부분의&nbsp;요소를&nbsp;확인한다.</span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"meta method declaration ts\\\"><span class=\\\"meta definition method ts entity name function ts\\\"><span>front</span></span><span class=\\\"meta parameters ts\\\"><span class=\\\"punctuation definition parameters begin ts\\\"><span>(</span></span><span class=\\\"punctuation definition parameters end ts\\\"><span>)</span></span></span><span>&nbsp;</span><span class=\\\"meta block ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>{</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span class=\\\"meta method declaration ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"keyword control flow ts\\\"><span>return</span></span><span>&nbsp;</span><span class=\\\"variable language this ts\\\"><span>this</span></span><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"variable other property ts\\\"><span>dataStore</span></span><span class=\\\"meta array literal ts\\\"><span class=\\\"meta brace square ts\\\"><span>[</span></span><span class=\\\"constant numeric decimal ts\\\"><span>0</span></span><span class=\\\"meta brace square ts\\\"><span>]</span></span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span class=\\\"meta method declaration ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span>&nbsp;</span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span class=\\\"punctuation whitespace comment leading ts\\\"><span>&nbsp;&nbsp;</span></span><span class=\\\"comment line double-slash ts\\\"><span class=\\\"punctuation definition comment ts\\\"><span>//</span></span><span>&nbsp;큐의&nbsp;끝부분의&nbsp;요소를&nbsp;확인한다.</span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"meta method declaration ts\\\"><span class=\\\"meta definition method ts entity name function ts\\\"><span>back</span></span><span class=\\\"meta parameters ts\\\"><span class=\\\"punctuation definition parameters begin ts\\\"><span>(</span></span><span class=\\\"punctuation definition parameters end ts\\\"><span>)</span></span></span><span>&nbsp;</span><span class=\\\"meta block ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>{</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span class=\\\"meta method declaration ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"keyword control flow ts\\\"><span>return</span></span><span>&nbsp;</span><span class=\\\"variable language this ts\\\"><span>this</span></span><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"variable other property ts\\\"><span>dataStore</span></span><span class=\\\"meta array literal ts\\\"><span class=\\\"meta brace square ts\\\"><span>[</span></span><span class=\\\"variable language this ts\\\"><span>this</span></span><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"variable other object property ts\\\"><span>dataStore</span></span><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"support variable property ts\\\"><span>length</span></span><span>&nbsp;</span><span class=\\\"keyword operator arithmetic ts\\\"><span>-</span></span><span>&nbsp;</span><span class=\\\"constant numeric decimal ts\\\"><span>1</span></span><span class=\\\"meta brace square ts\\\"><span>]</span></span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span class=\\\"meta method declaration ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span>&nbsp;</span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"meta method declaration ts\\\"><span class=\\\"meta definition method ts entity name function ts\\\"><span>toString</span></span><span class=\\\"meta parameters ts\\\"><span class=\\\"punctuation definition parameters begin ts\\\"><span>(</span></span><span class=\\\"punctuation definition parameters end ts\\\"><span>)</span></span></span><span>&nbsp;</span><span class=\\\"meta block ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>{</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span class=\\\"meta method declaration ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"keyword control flow ts\\\"><span>return</span></span><span>&nbsp;</span><span class=\\\"meta function-call ts\\\"><span class=\\\"variable language this ts\\\"><span>this</span></span><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"variable other object property ts\\\"><span>dataStore</span></span><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"support function ts\\\"><span>join</span></span></span><span class=\\\"meta brace round ts\\\"><span>(</span></span><span class=\\\"string quoted double ts\\\"><span class=\\\"punctuation definition string begin ts\\\"><span>&quot;</span></span><span class=\\\"constant character escape ts\\\"><span>\\\\n</span></span><span class=\\\"punctuation definition string end ts\\\"><span>&quot;</span></span></span><span class=\\\"meta brace round ts\\\"><span>)</span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span class=\\\"meta method declaration ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span>&nbsp;</span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span class=\\\"punctuation whitespace comment leading ts\\\"><span>&nbsp;&nbsp;</span></span><span class=\\\"comment line double-slash ts\\\"><span class=\\\"punctuation definition comment ts\\\"><span>//</span></span><span>&nbsp;큐가&nbsp;비었는지&nbsp;안비었는지&nbsp;확인한다.</span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"meta method declaration ts\\\"><span class=\\\"meta definition method ts entity name function ts\\\"><span>empty</span></span><span class=\\\"meta parameters ts\\\"><span class=\\\"punctuation definition parameters begin ts\\\"><span>(</span></span><span class=\\\"punctuation definition parameters end ts\\\"><span>)</span></span></span><span>&nbsp;</span><span class=\\\"meta block ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>{</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span class=\\\"meta method declaration ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"keyword control conditional ts\\\"><span>if</span></span><span>&nbsp;</span><span class=\\\"meta brace round ts\\\"><span>(</span></span><span class=\\\"variable language this ts\\\"><span>this</span></span><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"variable other object property ts\\\"><span>dataStore</span></span><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"support variable property ts\\\"><span>length</span></span><span>&nbsp;</span><span class=\\\"keyword operator comparison ts\\\"><span>===</span></span><span>&nbsp;</span><span class=\\\"constant numeric decimal ts\\\"><span>0</span></span><span class=\\\"meta brace round ts\\\"><span>)</span></span><span>&nbsp;</span><span class=\\\"keyword control flow ts\\\"><span>return</span></span><span>&nbsp;</span><span class=\\\"constant language boolean true ts\\\"><span>true</span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span class=\\\"meta method declaration ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"keyword control flow ts\\\"><span>return</span></span><span>&nbsp;</span><span class=\\\"constant language boolean false ts\\\"><span>false</span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span class=\\\"meta method declaration ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span>&nbsp;</span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"meta method declaration ts\\\"><span class=\\\"meta array literal ts\\\"><span class=\\\"meta brace square ts\\\"><span>[</span></span><span class=\\\"support class builtin ts\\\"><span>Symbol</span></span><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"variable other property ts\\\"><span>iterator</span></span><span class=\\\"meta brace square ts\\\"><span>]</span></span></span><span class=\\\"meta parameters ts\\\"><span class=\\\"punctuation definition parameters begin ts\\\"><span>(</span></span><span class=\\\"punctuation definition parameters end ts\\\"><span>)</span></span></span><span>&nbsp;</span><span class=\\\"meta block ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>{</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span class=\\\"meta method declaration ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"meta var expr ts\\\"><span class=\\\"storage type ts\\\"><span>let</span></span><span>&nbsp;</span><span class=\\\"meta var-single-variable expr ts\\\"><span class=\\\"meta definition variable ts variable other readwrite ts\\\"><span>position</span></span><span>&nbsp;</span></span><span class=\\\"keyword operator assignment ts\\\"><span>=</span></span><span>&nbsp;</span><span class=\\\"keyword operator arithmetic ts\\\"><span>-</span></span><span class=\\\"constant numeric decimal ts\\\"><span>1</span></span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span class=\\\"meta method declaration ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"meta var expr ts\\\"><span class=\\\"storage type ts\\\"><span>const</span></span><span>&nbsp;</span><span class=\\\"meta var-single-variable expr ts\\\"><span class=\\\"meta definition variable ts variable other readwrite ts\\\"><span>dataList</span></span><span>&nbsp;</span></span><span class=\\\"keyword operator assignment ts\\\"><span>=</span></span><span>&nbsp;</span><span class=\\\"variable language this ts\\\"><span>this</span></span><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"variable other property ts\\\"><span>dataStore</span></span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span class=\\\"meta method declaration ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"meta var expr ts\\\"><span class=\\\"storage type ts\\\"><span>const</span></span><span>&nbsp;</span><span class=\\\"meta var-single-variable expr ts\\\"><span class=\\\"meta definition variable ts variable other readwrite ts\\\"><span>length</span></span><span>&nbsp;</span></span><span class=\\\"keyword operator assignment ts\\\"><span>=</span></span><span>&nbsp;</span><span class=\\\"variable language this ts\\\"><span>this</span></span><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"support variable property ts\\\"><span>length</span></span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span class=\\\"meta method declaration ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"keyword control flow ts\\\"><span>return</span></span><span class=\\\"meta objectliteral ts\\\"><span>&nbsp;</span><span class=\\\"punctuation definition block ts\\\"><span>{</span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span class=\\\"meta method declaration ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta objectliteral ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"meta method declaration ts\\\"><span class=\\\"meta definition method ts entity name function ts\\\"><span>next</span></span><span class=\\\"meta parameters ts\\\"><span class=\\\"punctuation definition parameters begin ts\\\"><span>(</span></span><span class=\\\"punctuation definition parameters end ts\\\"><span>)</span></span></span><span>&nbsp;</span><span class=\\\"meta block ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>{</span></span></span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span class=\\\"meta method declaration ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta objectliteral ts\\\"><span class=\\\"meta method declaration ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>position</span></span><span>&nbsp;</span><span class=\\\"keyword operator assignment ts\\\"><span>=</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>position</span></span><span>&nbsp;</span><span class=\\\"keyword operator arithmetic ts\\\"><span>+</span></span><span>&nbsp;</span><span class=\\\"constant numeric decimal ts\\\"><span>1</span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span class=\\\"meta method declaration ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta objectliteral ts\\\"><span class=\\\"meta method declaration ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"keyword control flow ts\\\"><span>return</span></span><span class=\\\"meta objectliteral ts\\\"><span>&nbsp;</span><span class=\\\"punctuation definition block ts\\\"><span>{</span></span></span></span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span class=\\\"meta method declaration ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta objectliteral ts\\\"><span class=\\\"meta method declaration ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta objectliteral ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"meta object member ts\\\"><span class=\\\"meta object-literal key ts\\\"><span>value</span></span><span class=\\\"meta object-literal key ts punctuation separator key-value ts\\\"><span>:</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>dataList</span></span><span class=\\\"meta array literal ts\\\"><span class=\\\"meta brace square ts\\\"><span>[</span></span><span class=\\\"variable other readwrite ts\\\"><span>position</span></span><span class=\\\"meta brace square ts\\\"><span>]</span></span></span></span><span class=\\\"punctuation separator comma ts\\\"><span>,</span></span></span></span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span class=\\\"meta method declaration ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta objectliteral ts\\\"><span class=\\\"meta method declaration ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta objectliteral ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"meta object member ts\\\"><span class=\\\"meta object-literal key ts\\\"><span>done</span></span><span class=\\\"meta object-literal key ts punctuation separator key-value ts\\\"><span>:</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>position</span></span><span>&nbsp;</span><span class=\\\"keyword operator relational ts\\\"><span>&gt;=</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>length</span></span></span></span></span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span class=\\\"meta method declaration ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta objectliteral ts\\\"><span class=\\\"meta method declaration ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta objectliteral ts\\\"><span class=\\\"meta object member ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span class=\\\"meta method declaration ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta objectliteral ts\\\"><span class=\\\"meta method declaration ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span class=\\\"meta method declaration ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta objectliteral ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span class=\\\"meta method declaration ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span></span></div></pre>\\n<h2>예제</h2>\\n<ol>\\n<li>큐로 데이터 정렬하기 (기수정렬)</li>\\n</ol>\\n<p>기수 정렬은 두 번의 과정을 걸쳐 데이터를 정렬한다. 우리는 0 부터 99 사이의 정수 데이터를 사용한다.\\n첫 번째 과정에서는 1의 자리 숫자를 기준으로 숫자를 정렬하고 , 두 번째 과정에서는 10의 자리 숫자를 기주능로 데이터를 정렬한다.</p>\\n<pre class=\\\"editor editor-colors\\\"><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta type declaration ts\\\"><span class=\\\"storage type type ts\\\"><span>type</span></span><span>&nbsp;</span><span class=\\\"entity name type alias ts\\\"><span>DigitType</span></span><span>&nbsp;</span><span class=\\\"keyword operator assignment ts\\\"><span>=</span></span><span>&nbsp;</span><span class=\\\"constant numeric decimal ts\\\"><span>1</span></span><span>&nbsp;</span><span class=\\\"keyword operator type ts\\\"><span>|</span></span><span>&nbsp;</span><span class=\\\"constant numeric decimal ts\\\"><span>10</span></span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta var expr ts\\\"><span class=\\\"storage type ts\\\"><span>const</span></span><span>&nbsp;</span><span class=\\\"meta var-single-variable expr ts\\\"><span class=\\\"meta definition variable ts variable other readwrite ts\\\"><span>sampleList</span></span><span>&nbsp;</span></span><span class=\\\"keyword operator assignment ts\\\"><span>=</span></span><span>&nbsp;</span><span class=\\\"meta array literal ts\\\"><span class=\\\"meta brace square ts\\\"><span>[</span></span><span class=\\\"constant numeric decimal ts\\\"><span>10</span></span><span class=\\\"punctuation separator comma ts\\\"><span>,</span></span><span>&nbsp;</span><span class=\\\"constant numeric decimal ts\\\"><span>29</span></span><span class=\\\"punctuation separator comma ts\\\"><span>,</span></span><span>&nbsp;</span><span class=\\\"constant numeric decimal ts\\\"><span>40</span></span><span class=\\\"punctuation separator comma ts\\\"><span>,</span></span><span>&nbsp;</span><span class=\\\"constant numeric decimal ts\\\"><span>50</span></span><span class=\\\"punctuation separator comma ts\\\"><span>,</span></span><span>&nbsp;</span><span class=\\\"constant numeric decimal ts\\\"><span>32</span></span><span class=\\\"punctuation separator comma ts\\\"><span>,</span></span><span>&nbsp;</span><span class=\\\"constant numeric decimal ts\\\"><span>54</span></span><span class=\\\"punctuation separator comma ts\\\"><span>,</span></span><span>&nbsp;</span><span class=\\\"constant numeric decimal ts\\\"><span>34</span></span><span class=\\\"punctuation separator comma ts\\\"><span>,</span></span><span>&nbsp;</span><span class=\\\"constant numeric decimal ts\\\"><span>56</span></span><span class=\\\"punctuation separator comma ts\\\"><span>,</span></span><span>&nbsp;</span><span class=\\\"constant numeric decimal ts\\\"><span>23</span></span><span class=\\\"punctuation separator comma ts\\\"><span>,</span></span><span>&nbsp;</span><span class=\\\"constant numeric decimal ts\\\"><span>97</span></span><span class=\\\"punctuation separator comma ts\\\"><span>,</span></span><span>&nbsp;</span><span class=\\\"constant numeric decimal ts\\\"><span>78</span></span><span class=\\\"meta brace square ts\\\"><span>]</span></span></span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span>&nbsp;</span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"comment line double-slash ts\\\"><span class=\\\"punctuation definition comment ts\\\"><span>//</span></span><span>&nbsp;digit&nbsp;정렬&nbsp;기준&nbsp;자릿수</span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"storage type function ts\\\"><span>function</span></span><span>&nbsp;</span><span class=\\\"meta definition function ts entity name function ts\\\"><span>distribute</span></span><span class=\\\"meta parameters ts\\\"><span class=\\\"punctuation definition parameters begin ts\\\"><span>(</span></span><span class=\\\"variable parameter ts\\\"><span>targetList</span></span><span class=\\\"meta type annotation ts\\\"><span class=\\\"keyword operator type annotation ts\\\"><span>:</span></span><span>&nbsp;</span><span class=\\\"support type primitive ts\\\"><span>number</span></span><span class=\\\"meta type tuple ts\\\"><span class=\\\"meta brace square ts\\\"><span>[</span><span>]</span></span></span></span><span class=\\\"punctuation separator parameter ts\\\"><span>,</span></span><span>&nbsp;</span><span class=\\\"variable parameter ts\\\"><span>digit</span></span><span class=\\\"meta type annotation ts\\\"><span class=\\\"keyword operator type annotation ts\\\"><span>:</span></span><span>&nbsp;</span><span class=\\\"entity name type ts\\\"><span>DigitType</span></span></span><span class=\\\"punctuation definition parameters end ts\\\"><span>)</span></span></span><span>&nbsp;</span><span class=\\\"meta block ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>{</span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"meta var expr ts\\\"><span class=\\\"storage type ts\\\"><span>const</span></span><span>&nbsp;</span><span class=\\\"meta var-single-variable expr ts\\\"><span class=\\\"meta definition variable ts variable other readwrite ts\\\"><span>result</span></span><span class=\\\"meta type annotation ts\\\"><span class=\\\"keyword operator type annotation ts\\\"><span>:</span></span><span>&nbsp;</span><span class=\\\"entity name type ts\\\"><span>Queue</span></span><span class=\\\"meta type parameters ts\\\"><span class=\\\"punctuation definition typeparameters begin ts\\\"><span>&lt;</span></span><span class=\\\"support type primitive ts\\\"><span>number</span></span><span class=\\\"punctuation definition typeparameters end ts\\\"><span>&gt;</span></span></span><span class=\\\"meta type tuple ts\\\"><span class=\\\"meta brace square ts\\\"><span>[</span><span>]</span></span></span><span>&nbsp;</span></span></span><span class=\\\"keyword operator assignment ts\\\"><span>=</span></span><span>&nbsp;</span><span class=\\\"new expr ts\\\"><span class=\\\"keyword operator new ts\\\"><span>new</span></span><span>&nbsp;</span><span class=\\\"entity name type ts\\\"><span>Array</span></span><span class=\\\"meta brace round ts\\\"><span>(</span></span><span class=\\\"constant numeric decimal ts\\\"><span>10</span></span><span class=\\\"meta brace round ts\\\"><span>)</span></span></span><span class=\\\"meta function-call ts\\\"><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"entity name function ts\\\"><span>fill</span></span></span><span class=\\\"meta brace round ts\\\"><span>(</span></span><span class=\\\"constant numeric decimal ts\\\"><span>1</span></span><span class=\\\"meta brace round ts\\\"><span>)</span></span><span class=\\\"meta function-call ts\\\"><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"entity name function ts\\\"><span>map</span></span></span><span class=\\\"meta brace round ts\\\"><span>(</span></span><span class=\\\"meta arrow ts\\\"><span class=\\\"variable parameter ts\\\"><span>_</span></span><span>&nbsp;</span><span class=\\\"storage type function arrow ts\\\"><span>=&gt;</span></span><span>&nbsp;</span></span><span class=\\\"new expr ts\\\"><span class=\\\"keyword operator new ts\\\"><span>new</span></span><span>&nbsp;</span><span class=\\\"entity name type ts\\\"><span>Queue</span></span><span class=\\\"meta brace round ts\\\"><span>(</span><span>)</span></span></span><span class=\\\"meta brace round ts\\\"><span>)</span></span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;</span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"meta function-call ts\\\"><span class=\\\"variable other object ts\\\"><span>targetList</span></span><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"support function dom ts\\\"><span>forEach</span></span></span><span class=\\\"meta brace round ts\\\"><span>(</span></span><span class=\\\"meta arrow ts\\\"><span class=\\\"variable parameter ts\\\"><span>num</span></span><span>&nbsp;</span><span class=\\\"storage type function arrow ts\\\"><span>=&gt;</span></span><span>&nbsp;</span><span class=\\\"meta block ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>{</span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta arrow ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"keyword control conditional ts\\\"><span>if</span></span><span>&nbsp;</span><span class=\\\"meta brace round ts\\\"><span>(</span></span><span class=\\\"variable other readwrite ts\\\"><span>digit</span></span><span>&nbsp;</span><span class=\\\"keyword operator comparison ts\\\"><span>===</span></span><span>&nbsp;</span><span class=\\\"constant numeric decimal ts\\\"><span>1</span></span><span class=\\\"meta brace round ts\\\"><span>)</span></span><span>&nbsp;</span><span class=\\\"meta block ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>{</span></span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta arrow ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"meta var expr ts\\\"><span class=\\\"storage type ts\\\"><span>const</span></span><span>&nbsp;</span><span class=\\\"meta var-single-variable expr ts\\\"><span class=\\\"meta definition variable ts variable other readwrite ts\\\"><span>rest</span></span><span>&nbsp;</span></span><span class=\\\"keyword operator assignment ts\\\"><span>=</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>num</span></span><span>&nbsp;</span><span class=\\\"keyword operator arithmetic ts\\\"><span>%</span></span><span>&nbsp;</span><span class=\\\"constant numeric decimal ts\\\"><span>10</span></span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta arrow ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>result</span></span><span class=\\\"meta array literal ts\\\"><span class=\\\"meta brace square ts\\\"><span>[</span></span><span class=\\\"variable other readwrite ts\\\"><span>rest</span></span><span class=\\\"meta brace square ts\\\"><span>]</span></span></span><span class=\\\"meta function-call ts\\\"><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"entity name function ts\\\"><span>enqueue</span></span></span><span class=\\\"meta brace round ts\\\"><span>(</span></span><span class=\\\"variable other readwrite ts\\\"><span>num</span></span><span class=\\\"meta brace round ts\\\"><span>)</span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta arrow ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span><span>&nbsp;</span><span class=\\\"keyword control conditional ts\\\"><span>else</span></span><span>&nbsp;</span><span class=\\\"meta block ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>{</span></span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta arrow ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"meta var expr ts\\\"><span class=\\\"storage type ts\\\"><span>const</span></span><span>&nbsp;</span><span class=\\\"meta var-single-variable expr ts\\\"><span class=\\\"meta definition variable ts variable other readwrite ts\\\"><span>rest</span></span><span>&nbsp;</span></span><span class=\\\"keyword operator assignment ts\\\"><span>=</span></span><span>&nbsp;</span><span class=\\\"meta function-call ts\\\"><span class=\\\"support constant math ts\\\"><span>Math</span></span><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"support function math ts\\\"><span>floor</span></span></span><span class=\\\"meta brace round ts\\\"><span>(</span></span><span class=\\\"variable other readwrite ts\\\"><span>num</span></span><span>&nbsp;</span><span class=\\\"keyword operator arithmetic ts\\\"><span>/</span></span><span>&nbsp;</span><span class=\\\"constant numeric decimal ts\\\"><span>10</span></span><span class=\\\"meta brace round ts\\\"><span>)</span></span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta arrow ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>result</span></span><span class=\\\"meta array literal ts\\\"><span class=\\\"meta brace square ts\\\"><span>[</span></span><span class=\\\"variable other readwrite ts\\\"><span>rest</span></span><span class=\\\"meta brace square ts\\\"><span>]</span></span></span><span class=\\\"meta function-call ts\\\"><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"entity name function ts\\\"><span>enqueue</span></span></span><span class=\\\"meta brace round ts\\\"><span>(</span></span><span class=\\\"variable other readwrite ts\\\"><span>num</span></span><span class=\\\"meta brace round ts\\\"><span>)</span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta arrow ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta arrow ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span></span><span class=\\\"meta brace round ts\\\"><span>)</span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;</span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"keyword control flow ts\\\"><span>return</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>result</span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span>&nbsp;</span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"storage type function ts\\\"><span>function</span></span><span>&nbsp;</span><span class=\\\"meta definition function ts entity name function ts\\\"><span>collect</span></span><span class=\\\"meta parameters ts\\\"><span class=\\\"punctuation definition parameters begin ts\\\"><span>(</span></span><span class=\\\"variable parameter ts\\\"><span>queueList</span></span><span class=\\\"meta type annotation ts\\\"><span class=\\\"keyword operator type annotation ts\\\"><span>:</span></span><span>&nbsp;</span><span class=\\\"entity name type ts\\\"><span>Queue</span></span><span class=\\\"meta type parameters ts\\\"><span class=\\\"punctuation definition typeparameters begin ts\\\"><span>&lt;</span></span><span class=\\\"support type primitive ts\\\"><span>number</span></span><span class=\\\"punctuation definition typeparameters end ts\\\"><span>&gt;</span></span></span><span class=\\\"meta type tuple ts\\\"><span class=\\\"meta brace square ts\\\"><span>[</span><span>]</span></span></span></span><span class=\\\"punctuation definition parameters end ts\\\"><span>)</span></span></span><span>&nbsp;</span><span class=\\\"meta block ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>{</span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"keyword control flow ts\\\"><span>return</span></span><span>&nbsp;</span><span class=\\\"meta function-call ts\\\"><span class=\\\"variable other object ts\\\"><span>queueList</span></span><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"entity name function ts\\\"><span>flatMap</span></span></span><span class=\\\"meta brace round ts\\\"><span>(</span></span><span class=\\\"meta arrow ts\\\"><span class=\\\"variable parameter ts\\\"><span>queue</span></span><span>&nbsp;</span><span class=\\\"storage type function arrow ts\\\"><span>=&gt;</span></span><span>&nbsp;</span><span class=\\\"meta block ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>{</span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta arrow ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"punctuation whitespace comment leading ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class=\\\"comment line double-slash ts\\\"><span class=\\\"punctuation definition comment ts\\\"><span>//</span></span><span>&nbsp;return&nbsp;queue.dataStore</span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta arrow ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"meta var expr ts\\\"><span class=\\\"storage type ts\\\"><span>const</span></span><span>&nbsp;</span><span class=\\\"meta var-single-variable expr ts\\\"><span class=\\\"meta definition variable ts variable other readwrite ts\\\"><span>queueDataList</span></span><span>&nbsp;</span></span><span class=\\\"keyword operator assignment ts\\\"><span>=</span></span><span>&nbsp;</span><span class=\\\"meta array literal ts\\\"><span class=\\\"meta brace square ts\\\"><span>[</span><span>]</span></span></span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta arrow ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"keyword control loop ts\\\"><span>for</span></span><span>&nbsp;</span><span class=\\\"meta brace round ts\\\"><span>(</span></span><span class=\\\"meta var expr ts\\\"><span class=\\\"storage type ts\\\"><span>const</span></span><span>&nbsp;</span><span class=\\\"meta var-single-variable expr ts\\\"><span class=\\\"meta definition variable ts variable other readwrite ts\\\"><span>value</span></span></span></span><span>&nbsp;</span><span class=\\\"keyword operator expression of ts\\\"><span>of</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>queue</span></span><span class=\\\"meta brace round ts\\\"><span>)</span></span><span>&nbsp;</span><span class=\\\"meta block ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>{</span></span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta arrow ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"meta function-call ts\\\"><span class=\\\"variable other object ts\\\"><span>queueDataList</span></span><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"support function ts\\\"><span>push</span></span></span><span class=\\\"meta brace round ts\\\"><span>(</span></span><span class=\\\"variable other readwrite ts\\\"><span>value</span></span><span class=\\\"meta brace round ts\\\"><span>)</span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta arrow ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta arrow ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"keyword control flow ts\\\"><span>return</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>queueDataList</span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta arrow ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span></span><span class=\\\"meta brace round ts\\\"><span>)</span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span>&nbsp;</span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta var expr ts\\\"><span class=\\\"storage type ts\\\"><span>const</span></span><span>&nbsp;</span><span class=\\\"meta var-single-variable expr ts\\\"><span class=\\\"meta definition variable ts variable other readwrite ts\\\"><span>firstQueue</span></span><span>&nbsp;</span></span><span class=\\\"keyword operator assignment ts\\\"><span>=</span></span><span>&nbsp;</span><span class=\\\"meta function-call ts\\\"><span class=\\\"entity name function ts\\\"><span>distribute</span></span></span><span class=\\\"meta brace round ts\\\"><span>(</span></span><span class=\\\"variable other readwrite ts\\\"><span>sampleList</span></span><span class=\\\"punctuation separator comma ts\\\"><span>,</span></span><span>&nbsp;</span><span class=\\\"constant numeric decimal ts\\\"><span>1</span></span><span class=\\\"meta brace round ts\\\"><span>)</span></span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta var expr ts\\\"><span class=\\\"storage type ts\\\"><span>const</span></span><span>&nbsp;</span><span class=\\\"meta var-single-variable expr ts\\\"><span class=\\\"meta definition variable ts variable other readwrite ts\\\"><span>firstCollectList</span></span><span>&nbsp;</span></span><span class=\\\"keyword operator assignment ts\\\"><span>=</span></span><span>&nbsp;</span><span class=\\\"meta function-call ts\\\"><span class=\\\"entity name function ts\\\"><span>collect</span></span></span><span class=\\\"meta brace round ts\\\"><span>(</span></span><span class=\\\"variable other readwrite ts\\\"><span>firstQueue</span></span><span class=\\\"meta brace round ts\\\"><span>)</span></span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta var expr ts\\\"><span class=\\\"storage type ts\\\"><span>const</span></span><span>&nbsp;</span><span class=\\\"meta var-single-variable expr ts\\\"><span class=\\\"meta definition variable ts variable other readwrite ts\\\"><span>secondQueue</span></span><span>&nbsp;</span></span><span class=\\\"keyword operator assignment ts\\\"><span>=</span></span><span>&nbsp;</span><span class=\\\"meta function-call ts\\\"><span class=\\\"entity name function ts\\\"><span>distribute</span></span></span><span class=\\\"meta brace round ts\\\"><span>(</span></span><span class=\\\"variable other readwrite ts\\\"><span>firstCollectList</span></span><span class=\\\"punctuation separator comma ts\\\"><span>,</span></span><span>&nbsp;</span><span class=\\\"constant numeric decimal ts\\\"><span>10</span></span><span class=\\\"meta brace round ts\\\"><span>)</span></span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta var expr ts\\\"><span class=\\\"storage type ts\\\"><span>const</span></span><span>&nbsp;</span><span class=\\\"meta var-single-variable expr ts\\\"><span class=\\\"meta definition variable ts variable other readwrite ts\\\"><span>result</span></span><span>&nbsp;</span></span><span class=\\\"keyword operator assignment ts\\\"><span>=</span></span><span>&nbsp;</span><span class=\\\"meta function-call ts\\\"><span class=\\\"entity name function ts\\\"><span>collect</span></span></span><span class=\\\"meta brace round ts\\\"><span>(</span></span><span class=\\\"variable other readwrite ts\\\"><span>secondQueue</span></span><span class=\\\"meta brace round ts\\\"><span>)</span></span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span>&nbsp;</span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function-call ts\\\"><span class=\\\"support class console ts\\\"><span>console</span></span><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"support function console ts\\\"><span>log</span></span></span><span class=\\\"meta brace round ts\\\"><span>(</span></span><span class=\\\"string quoted double ts\\\"><span class=\\\"punctuation definition string begin ts\\\"><span>&quot;</span></span><span>sampleList</span><span class=\\\"punctuation definition string end ts\\\"><span>&quot;</span></span></span><span class=\\\"punctuation separator comma ts\\\"><span>,</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>sampleList</span></span><span class=\\\"meta brace round ts\\\"><span>)</span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function-call ts\\\"><span class=\\\"support class console ts\\\"><span>console</span></span><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"support function console ts\\\"><span>log</span></span></span><span class=\\\"meta brace round ts\\\"><span>(</span></span><span class=\\\"string quoted double ts\\\"><span class=\\\"punctuation definition string begin ts\\\"><span>&quot;</span></span><span>result</span><span class=\\\"punctuation definition string end ts\\\"><span>&quot;</span></span></span><span class=\\\"punctuation separator comma ts\\\"><span>,</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>result</span></span><span class=\\\"meta brace round ts\\\"><span>)</span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></div></pre>\\n<ol start=\\\"2\\\">\\n<li>우선순위 큐</li>\\n</ol>\\n<p>보통 큐에서 요소를 삭제할 때는 먼저 삽입한 요소부터 삭제된다. 하지만 이러한 선입선출 방식이 아닌 우선순위와 같은 다른 기준으로 요소를 삭제해야하는 경우도 있다. 이럴때는 우선순위 큐라는 자료구조를 이용한다.</p>\\n<pre class=\\\"editor editor-colors\\\"><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"comment line double-slash ts\\\"><span class=\\\"punctuation definition comment ts\\\"><span>//</span></span><span>&nbsp;기존&nbsp;queue&nbsp;에서&nbsp;dequeue를&nbsp;수정해&nbsp;준다.</span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"comment line double-slash ts\\\"><span class=\\\"punctuation definition comment ts\\\"><span>//</span></span><span>&nbsp;다음과&nbsp;같은&nbsp;큐에&nbsp;들어갈&nbsp;element가&nbsp;있다고&nbsp;가정하자.</span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span>&nbsp;</span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span class=\\\"storage type class ts\\\"><span>class</span></span><span>&nbsp;</span><span class=\\\"entity name type class ts\\\"><span>Job</span></span><span>&nbsp;</span><span class=\\\"punctuation definition block ts\\\"><span>{</span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"meta field declaration ts\\\"><span class=\\\"meta definition property ts variable object property ts\\\"><span>name</span></span><span class=\\\"meta type annotation ts\\\"><span class=\\\"keyword operator type annotation ts\\\"><span>:</span></span><span>&nbsp;</span><span class=\\\"support type primitive ts\\\"><span>string</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"meta field declaration ts\\\"><span class=\\\"meta definition property ts variable object property ts\\\"><span>code</span></span><span class=\\\"meta type annotation ts\\\"><span class=\\\"keyword operator type annotation ts\\\"><span>:</span></span><span>&nbsp;</span><span class=\\\"support type primitive ts\\\"><span>number</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span>&nbsp;</span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"meta method declaration ts\\\"><span class=\\\"storage type ts\\\"><span>constructor</span></span><span class=\\\"meta parameters ts\\\"><span class=\\\"punctuation definition parameters begin ts\\\"><span>(</span></span><span class=\\\"variable parameter ts\\\"><span>name</span></span><span class=\\\"meta type annotation ts\\\"><span class=\\\"keyword operator type annotation ts\\\"><span>:</span></span><span class=\\\"support type primitive ts\\\"><span>string</span></span></span><span class=\\\"punctuation separator parameter ts\\\"><span>,</span></span><span>&nbsp;</span><span class=\\\"variable parameter ts\\\"><span>code</span></span><span class=\\\"meta type annotation ts\\\"><span class=\\\"keyword operator type annotation ts\\\"><span>:</span></span><span class=\\\"support type primitive ts\\\"><span>number</span></span></span><span class=\\\"punctuation definition parameters end ts\\\"><span>)</span></span></span><span>&nbsp;</span><span class=\\\"meta block ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>{</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span class=\\\"meta method declaration ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"variable language this ts\\\"><span>this</span></span><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"support variable property dom ts\\\"><span>name</span></span><span>&nbsp;</span><span class=\\\"keyword operator assignment ts\\\"><span>=</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>name</span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span class=\\\"meta method declaration ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"variable language this ts\\\"><span>this</span></span><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"support variable property dom ts\\\"><span>code</span></span><span>&nbsp;</span><span class=\\\"keyword operator assignment ts\\\"><span>=</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>code</span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span class=\\\"meta method declaration ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span>&nbsp;</span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta var expr ts\\\"><span class=\\\"storage type ts\\\"><span>const</span></span><span>&nbsp;</span><span class=\\\"meta var-single-variable expr ts\\\"><span class=\\\"meta definition variable ts variable other readwrite ts\\\"><span>queue</span></span><span>&nbsp;</span></span><span class=\\\"keyword operator assignment ts\\\"><span>=</span></span><span>&nbsp;</span><span class=\\\"new expr ts\\\"><span class=\\\"keyword operator new ts\\\"><span>new</span></span><span>&nbsp;</span><span class=\\\"entity name type ts\\\"><span>Queue</span></span><span class=\\\"meta type parameters ts\\\"><span class=\\\"punctuation definition typeparameters begin ts\\\"><span>&lt;</span></span><span class=\\\"entity name type ts\\\"><span>Job</span></span><span class=\\\"punctuation definition typeparameters end ts\\\"><span>&gt;</span></span></span><span class=\\\"meta brace round ts\\\"><span>(</span><span>)</span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span>&nbsp;</span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"comment line double-slash ts\\\"><span class=\\\"punctuation definition comment ts\\\"><span>//</span></span><span>&nbsp;기존&nbsp;큐에서&nbsp;dequeue는&nbsp;다음과&nbsp;같이&nbsp;수정해&nbsp;준다.</span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span class=\\\"storage type class ts\\\"><span>class</span></span><span>&nbsp;</span><span class=\\\"entity name type class ts\\\"><span>Queue</span></span><span>&nbsp;</span><span class=\\\"punctuation definition block ts\\\"><span>{</span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span class=\\\"punctuation whitespace comment leading ts\\\"><span>&nbsp;&nbsp;</span></span><span class=\\\"comment line double-slash ts\\\"><span class=\\\"punctuation definition comment ts\\\"><span>//</span></span><span>&nbsp;(...)</span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"meta method declaration ts\\\"><span class=\\\"meta definition method ts entity name function ts\\\"><span>dequeue</span></span><span class=\\\"meta parameters ts\\\"><span class=\\\"punctuation definition parameters begin ts\\\"><span>(</span></span><span class=\\\"punctuation definition parameters end ts\\\"><span>)</span></span></span><span>&nbsp;</span><span class=\\\"meta block ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>{</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span class=\\\"meta method declaration ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"meta var expr ts\\\"><span class=\\\"storage type ts\\\"><span>const</span></span><span>&nbsp;</span><span class=\\\"meta var-single-variable expr ts\\\"><span class=\\\"meta definition variable ts variable other readwrite ts\\\"><span>targetIndex</span></span><span>&nbsp;</span></span><span class=\\\"keyword operator assignment ts\\\"><span>=</span></span><span>&nbsp;</span><span class=\\\"meta function-call ts\\\"><span class=\\\"variable language this ts\\\"><span>this</span></span><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"variable other object property ts\\\"><span>dataStore</span></span><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"entity name function ts\\\"><span>reduce</span></span></span><span class=\\\"meta brace round ts\\\"><span>(</span></span><span class=\\\"meta arrow ts\\\"><span class=\\\"meta parameters ts\\\"><span class=\\\"punctuation definition parameters begin ts\\\"><span>(</span></span><span class=\\\"variable parameter ts\\\"><span>resultIndex</span></span><span class=\\\"punctuation separator parameter ts\\\"><span>,</span></span><span>&nbsp;</span><span class=\\\"variable parameter ts\\\"><span>elem</span></span><span class=\\\"punctuation separator parameter ts\\\"><span>,</span></span><span>&nbsp;</span><span class=\\\"variable parameter ts\\\"><span>index</span></span><span class=\\\"punctuation definition parameters end ts\\\"><span>)</span></span></span><span>&nbsp;</span><span class=\\\"storage type function arrow ts\\\"><span>=&gt;</span></span><span>&nbsp;</span><span class=\\\"meta block ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>{</span></span></span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span class=\\\"meta method declaration ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta var expr ts\\\"><span class=\\\"meta arrow ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"keyword control conditional ts\\\"><span>if</span></span><span class=\\\"meta brace round ts\\\"><span>(</span></span><span class=\\\"variable other readwrite ts\\\"><span>resultIndex</span></span><span>&nbsp;</span><span class=\\\"keyword operator relational ts\\\"><span>&gt;</span></span><span>&nbsp;</span><span class=\\\"variable other object ts\\\"><span>elem</span></span><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"support variable property dom ts\\\"><span>code</span></span><span class=\\\"meta brace round ts\\\"><span>)</span></span><span>&nbsp;</span><span class=\\\"meta block ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>{</span></span></span></span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span class=\\\"meta method declaration ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta var expr ts\\\"><span class=\\\"meta arrow ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"keyword control flow ts\\\"><span>return</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>index</span></span></span></span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span class=\\\"meta method declaration ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta var expr ts\\\"><span class=\\\"meta arrow ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span></span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span class=\\\"meta method declaration ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta var expr ts\\\"><span class=\\\"meta arrow ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"keyword control flow ts\\\"><span>return</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>resultIndex</span></span></span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span class=\\\"meta method declaration ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta var expr ts\\\"><span class=\\\"meta arrow ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span></span><span class=\\\"punctuation separator comma ts\\\"><span>,</span></span><span class=\\\"constant numeric decimal ts\\\"><span>0</span></span><span class=\\\"meta brace round ts\\\"><span>)</span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span class=\\\"meta method declaration ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta class ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span></span></div></pre>\",\"frontmatter\":{\"title\":\"algorithm Queue\",\"date\":\"March 27, 2020\"}}},\"pathContext\":{\"slug\":\"/hello-algorithms/queue/\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/hello-algorithms-queue.json\n// module id = 508\n// module chunks = 149621425204082"],"sourceRoot":""}