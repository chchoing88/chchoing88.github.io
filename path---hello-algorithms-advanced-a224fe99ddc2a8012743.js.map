{"version":3,"sources":["webpack:///path---hello-algorithms-advanced-a224fe99ddc2a8012743.js","webpack:///./.cache/json/hello-algorithms-advanced.json"],"names":["webpackJsonp","502","module","exports","data","site","siteMetadata","title","author","markdownRemark","id","html","frontmatter","date","pathContext","slug"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,MAAQC,cAAgBC,MAAA,kBAAAC,OAAA,cAAgDC,gBAAmBC,GAAA,qIAAAC,KAAA;AAA81zDC,aAA0IL,MAAA,sBAAAM,KAAA,kBAAsDC,aAAgBC,KAAA","file":"path---hello-algorithms-advanced-a224fe99ddc2a8012743.js","sourcesContent":["webpackJsonp([30105182649681],{\n\n/***/ 502:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"title\":\"Merlin Tec Blog\",\"author\":\"merlin.ho\"}},\"markdownRemark\":{\"id\":\"/Users/merlin.ho/Documents/workspace/ho_blog/gatsby-blog/src/pages/hello-algorithms/advanced.md absPath of file >>> MarkdownRemark\",\"html\":\"<h2>동적 프로그래밍</h2>\\n<ul>\\n<li>동적 프로그래밍은 재귀와 상반되는 기법으로 알려져 있습니다. 재귀에서는 위에서 아래로 내려가면서 점차 작아지는 문제를 모두 해결하는 방식인 반면, 동적프로그래밍에서는 아래에서 위로 해결하면서 결과를 모아 큰 전체 문제를 해결하는 방식입니다.</li>\\n<li>재귀 기법으로 해결할 수 있는 대부분의 프로그래밍 문제는 동적 프로그래밍으로도 해결할 수 있습니다.</li>\\n</ul>\\n<h3>피보나치 예제</h3>\\n<p>피보나치는 이전의 두 숫자를 더해서 다음 숫자를 만들 수 있습니다.\\n재귀를 이용해서 다음과 같이 구현할 수 있습니다.</p>\\n<pre class=\\\"editor editor-colors\\\"><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"storage type function ts\\\"><span>function</span></span><span>&nbsp;</span><span class=\\\"meta definition function ts entity name function ts\\\"><span>recurFib</span></span><span class=\\\"meta parameters ts\\\"><span class=\\\"punctuation definition parameters begin ts\\\"><span>(</span></span><span class=\\\"variable parameter ts\\\"><span>n</span></span><span class=\\\"punctuation definition parameters end ts\\\"><span>)</span></span></span><span>&nbsp;</span><span class=\\\"meta block ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>{</span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"keyword control conditional ts\\\"><span>if</span></span><span class=\\\"meta brace round ts\\\"><span>(</span></span><span class=\\\"variable other readwrite ts\\\"><span>n</span></span><span>&nbsp;</span><span class=\\\"keyword operator relational ts\\\"><span>&lt;</span></span><span>&nbsp;</span><span class=\\\"constant numeric decimal ts\\\"><span>2</span></span><span class=\\\"meta brace round ts\\\"><span>)</span></span><span>&nbsp;</span><span class=\\\"meta block ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>{</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"keyword control flow ts\\\"><span>return</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>n</span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span><span>&nbsp;</span><span class=\\\"keyword control conditional ts\\\"><span>else</span></span><span>&nbsp;</span><span class=\\\"meta block ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>{</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"keyword control flow ts\\\"><span>return</span></span><span>&nbsp;</span><span class=\\\"meta function-call ts\\\"><span class=\\\"entity name function ts\\\"><span>recurFib</span></span></span><span class=\\\"meta brace round ts\\\"><span>(</span></span><span class=\\\"variable other readwrite ts\\\"><span>n</span></span><span class=\\\"keyword operator arithmetic ts\\\"><span>-</span></span><span class=\\\"constant numeric decimal ts\\\"><span>1</span></span><span class=\\\"meta brace round ts\\\"><span>)</span></span><span>&nbsp;</span><span class=\\\"keyword operator arithmetic ts\\\"><span>+</span></span><span>&nbsp;</span><span class=\\\"meta function-call ts\\\"><span class=\\\"entity name function ts\\\"><span>recurFib</span></span></span><span class=\\\"meta brace round ts\\\"><span>(</span></span><span class=\\\"variable other readwrite ts\\\"><span>n</span></span><span class=\\\"keyword operator arithmetic ts\\\"><span>-</span></span><span class=\\\"constant numeric decimal ts\\\"><span>2</span></span><span class=\\\"meta brace round ts\\\"><span>)</span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span></span></span></div></pre>\\n<p>이미 계산한 값을 컴파일러가 기억할 수 있다면 더 효율성을 높일 수 있습니다.\\n동적 프로그래밍에서는 가장 간단한 하위 문제부터 해결하면서 좀 더 복잡한 상위 문제로 나아갑니다.</p>\\n<pre class=\\\"editor editor-colors\\\"><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"storage type function ts\\\"><span>function</span></span><span>&nbsp;</span><span class=\\\"meta definition function ts entity name function ts\\\"><span>dynFib</span></span><span class=\\\"meta parameters ts\\\"><span class=\\\"punctuation definition parameters begin ts\\\"><span>(</span></span><span class=\\\"variable parameter ts\\\"><span>n</span></span><span class=\\\"punctuation definition parameters end ts\\\"><span>)</span></span></span><span>&nbsp;</span><span class=\\\"meta block ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>{</span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"punctuation whitespace comment leading ts\\\"><span>&nbsp;&nbsp;</span></span><span class=\\\"comment line double-slash ts\\\"><span class=\\\"punctuation definition comment ts\\\"><span>//</span></span><span>&nbsp;초기화</span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"meta var expr ts\\\"><span class=\\\"storage type ts\\\"><span>const</span></span><span>&nbsp;</span><span class=\\\"meta var-single-variable expr ts\\\"><span class=\\\"meta definition variable ts variable other readwrite ts\\\"><span>val</span></span><span>&nbsp;</span></span><span class=\\\"keyword operator assignment ts\\\"><span>=</span></span><span>&nbsp;</span><span class=\\\"new expr ts\\\"><span class=\\\"keyword operator new ts\\\"><span>new</span></span><span>&nbsp;</span><span class=\\\"entity name type ts\\\"><span>Array</span></span><span class=\\\"meta brace round ts\\\"><span>(</span></span><span class=\\\"variable other readwrite ts\\\"><span>n</span></span><span class=\\\"meta brace round ts\\\"><span>)</span></span></span><span class=\\\"meta function-call ts\\\"><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"entity name function ts\\\"><span>fill</span></span></span><span class=\\\"meta brace round ts\\\"><span>(</span></span><span class=\\\"constant numeric decimal ts\\\"><span>0</span></span><span class=\\\"meta brace round ts\\\"><span>)</span></span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;</span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"keyword control conditional ts\\\"><span>if</span></span><span class=\\\"meta brace round ts\\\"><span>(</span></span><span class=\\\"variable other readwrite ts\\\"><span>n</span></span><span>&nbsp;</span><span class=\\\"keyword operator comparison ts\\\"><span>===</span></span><span>&nbsp;</span><span class=\\\"constant numeric decimal ts\\\"><span>1</span></span><span>&nbsp;</span><span class=\\\"keyword operator logical ts\\\"><span>||</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>n</span></span><span>&nbsp;</span><span class=\\\"keyword operator comparison ts\\\"><span>===</span></span><span>&nbsp;</span><span class=\\\"constant numeric decimal ts\\\"><span>2</span></span><span class=\\\"meta brace round ts\\\"><span>)</span></span><span>&nbsp;</span><span class=\\\"meta block ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>{</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"keyword control flow ts\\\"><span>return</span></span><span>&nbsp;</span><span class=\\\"constant numeric decimal ts\\\"><span>1</span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span><span>&nbsp;</span><span class=\\\"keyword control conditional ts\\\"><span>else</span></span><span>&nbsp;</span><span class=\\\"keyword control conditional ts\\\"><span>if</span></span><span class=\\\"meta brace round ts\\\"><span>(</span></span><span class=\\\"variable other readwrite ts\\\"><span>n</span></span><span>&nbsp;</span><span class=\\\"keyword operator relational ts\\\"><span>&gt;</span></span><span>&nbsp;</span><span class=\\\"constant numeric decimal ts\\\"><span>2</span></span><span class=\\\"meta brace round ts\\\"><span>)</span></span><span>&nbsp;</span><span class=\\\"meta block ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>{</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>val</span></span><span class=\\\"meta array literal ts\\\"><span class=\\\"meta brace square ts\\\"><span>[</span></span><span class=\\\"constant numeric decimal ts\\\"><span>1</span></span><span class=\\\"meta brace square ts\\\"><span>]</span></span></span><span>&nbsp;</span><span class=\\\"keyword operator assignment ts\\\"><span>=</span></span><span>&nbsp;</span><span class=\\\"constant numeric decimal ts\\\"><span>1</span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>val</span></span><span class=\\\"meta array literal ts\\\"><span class=\\\"meta brace square ts\\\"><span>[</span></span><span class=\\\"constant numeric decimal ts\\\"><span>2</span></span><span class=\\\"meta brace square ts\\\"><span>]</span></span></span><span>&nbsp;</span><span class=\\\"keyword operator assignment ts\\\"><span>=</span></span><span>&nbsp;</span><span class=\\\"constant numeric decimal ts\\\"><span>1</span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"keyword control loop ts\\\"><span>for</span></span><span>&nbsp;</span><span class=\\\"meta brace round ts\\\"><span>(</span></span><span class=\\\"meta var expr ts\\\"><span class=\\\"storage type ts\\\"><span>let</span></span><span>&nbsp;</span><span class=\\\"meta var-single-variable expr ts\\\"><span class=\\\"meta definition variable ts variable other readwrite ts\\\"><span>i</span></span><span>&nbsp;</span></span><span class=\\\"keyword operator assignment ts\\\"><span>=</span></span><span>&nbsp;</span><span class=\\\"constant numeric decimal ts\\\"><span>3</span></span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>i</span></span><span>&nbsp;</span><span class=\\\"keyword operator relational ts\\\"><span>&lt;=</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>n</span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>i</span></span><span class=\\\"keyword operator increment ts\\\"><span>++</span></span><span class=\\\"meta brace round ts\\\"><span>)</span></span><span>&nbsp;</span><span class=\\\"meta block ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>{</span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>val</span></span><span class=\\\"meta array literal ts\\\"><span class=\\\"meta brace square ts\\\"><span>[</span></span><span class=\\\"variable other readwrite ts\\\"><span>i</span></span><span class=\\\"meta brace square ts\\\"><span>]</span></span></span><span>&nbsp;</span><span class=\\\"keyword operator assignment ts\\\"><span>=</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>val</span></span><span class=\\\"meta array literal ts\\\"><span class=\\\"meta brace square ts\\\"><span>[</span></span><span class=\\\"variable other readwrite ts\\\"><span>i</span></span><span class=\\\"keyword operator arithmetic ts\\\"><span>-</span></span><span class=\\\"constant numeric decimal ts\\\"><span>1</span></span><span class=\\\"meta brace square ts\\\"><span>]</span></span></span><span>&nbsp;</span><span class=\\\"keyword operator arithmetic ts\\\"><span>+</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>val</span></span><span class=\\\"meta array literal ts\\\"><span class=\\\"meta brace square ts\\\"><span>[</span></span><span class=\\\"variable other readwrite ts\\\"><span>i</span></span><span class=\\\"keyword operator arithmetic ts\\\"><span>-</span></span><span class=\\\"constant numeric decimal ts\\\"><span>2</span></span><span class=\\\"meta brace square ts\\\"><span>]</span></span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;</span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"keyword control flow ts\\\"><span>return</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>val</span></span><span class=\\\"meta array literal ts\\\"><span class=\\\"meta brace square ts\\\"><span>[</span></span><span class=\\\"variable other readwrite ts\\\"><span>n</span></span><span class=\\\"meta brace square ts\\\"><span>]</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span></span></span></div></pre>\\n<p>반복 기법을 이용해서도 피보나치를 계산 할 수 있다.</p>\\n<pre class=\\\"editor editor-colors\\\"><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"storage type function ts\\\"><span>function</span></span><span>&nbsp;</span><span class=\\\"meta definition function ts entity name function ts\\\"><span>iterFib</span></span><span class=\\\"meta parameters ts\\\"><span class=\\\"punctuation definition parameters begin ts\\\"><span>(</span></span><span class=\\\"variable parameter ts\\\"><span>n</span></span><span class=\\\"punctuation definition parameters end ts\\\"><span>)</span></span></span><span>&nbsp;</span><span class=\\\"meta block ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>{</span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"meta var expr ts\\\"><span class=\\\"storage type ts\\\"><span>let</span></span><span>&nbsp;</span><span class=\\\"meta var-single-variable expr ts\\\"><span class=\\\"meta definition variable ts variable other readwrite ts\\\"><span>last</span></span><span>&nbsp;</span></span><span class=\\\"keyword operator assignment ts\\\"><span>=</span></span><span>&nbsp;</span><span class=\\\"constant numeric decimal ts\\\"><span>1</span></span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span><span>&nbsp;</span><span class=\\\"comment line double-slash ts\\\"><span class=\\\"punctuation definition comment ts\\\"><span>//</span></span><span>&nbsp;첫번째</span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"meta var expr ts\\\"><span class=\\\"storage type ts\\\"><span>let</span></span><span>&nbsp;</span><span class=\\\"meta var-single-variable expr ts\\\"><span class=\\\"meta definition variable ts variable other readwrite ts\\\"><span>nextLast</span></span><span>&nbsp;</span></span><span class=\\\"keyword operator assignment ts\\\"><span>=</span></span><span>&nbsp;</span><span class=\\\"constant numeric decimal ts\\\"><span>1</span></span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span><span>&nbsp;</span><span class=\\\"comment line double-slash ts\\\"><span class=\\\"punctuation definition comment ts\\\"><span>//</span></span><span>&nbsp;두번째</span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"meta var expr ts\\\"><span class=\\\"storage type ts\\\"><span>let</span></span><span>&nbsp;</span><span class=\\\"meta var-single-variable expr ts\\\"><span class=\\\"meta definition variable ts variable other readwrite ts\\\"><span>result</span></span><span>&nbsp;</span></span><span class=\\\"keyword operator assignment ts\\\"><span>=</span></span><span>&nbsp;</span><span class=\\\"constant numeric decimal ts\\\"><span>1</span></span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;</span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"keyword control loop ts\\\"><span>for</span></span><span class=\\\"meta brace round ts\\\"><span>(</span></span><span class=\\\"meta var expr ts\\\"><span class=\\\"storage type ts\\\"><span>let</span></span><span>&nbsp;</span><span class=\\\"meta var-single-variable expr ts\\\"><span class=\\\"meta definition variable ts variable other readwrite ts\\\"><span>i</span></span><span>&nbsp;</span></span><span class=\\\"keyword operator assignment ts\\\"><span>=</span></span><span>&nbsp;</span><span class=\\\"constant numeric decimal ts\\\"><span>3</span></span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>i</span></span><span>&nbsp;</span><span class=\\\"keyword operator relational ts\\\"><span>&lt;=</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>n</span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>i</span></span><span class=\\\"keyword operator increment ts\\\"><span>++</span></span><span class=\\\"meta brace round ts\\\"><span>)</span></span><span>&nbsp;</span><span class=\\\"meta block ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>{</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>result</span></span><span>&nbsp;</span><span class=\\\"keyword operator assignment ts\\\"><span>=</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>last</span></span><span>&nbsp;</span><span class=\\\"keyword operator arithmetic ts\\\"><span>+</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>nextLast</span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>last</span></span><span>&nbsp;</span><span class=\\\"keyword operator assignment ts\\\"><span>=</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>nextLast</span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>nextLast</span></span><span>&nbsp;</span><span class=\\\"keyword operator assignment ts\\\"><span>=</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>result</span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;</span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"keyword control flow ts\\\"><span>return</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>result</span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span></span></span></div></pre>\\n<h3>가장 긴 공통 문자열 찾기</h3>\\n<ul>\\n<li>두 개의 문자열에서 가장 긴 공통 문자열을 찾는 문제입니다.</li>\\n<li>이차원 배열을 이용해서 각 문자열을 비교하고 두 배열의 같은 위치에서 같은 문자를 발견하면 이차원 배열의 해당 행과 열에 위치한 요소를 1 증가시킵니다.</li>\\n<li>문자열을 비교하면서 얼마나 많은 글자가 일치했는지 변수에 저장합니다.</li>\\n<li>알고리즘이 끝나면 일치한 횟수를 저장한 변수와 인덱스 변수를 이용해 가장 긴 공통 문자열을 반환합니다.</li>\\n</ul>\\n<pre class=\\\"editor editor-colors\\\"><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"storage type function ts\\\"><span>function</span></span><span>&nbsp;</span><span class=\\\"meta definition function ts entity name function ts\\\"><span>Isc</span></span><span>&nbsp;</span><span class=\\\"meta parameters ts\\\"><span class=\\\"punctuation definition parameters begin ts\\\"><span>(</span></span><span class=\\\"variable parameter ts\\\"><span>word1</span></span><span class=\\\"meta type annotation ts\\\"><span class=\\\"keyword operator type annotation ts\\\"><span>:</span></span><span>&nbsp;</span><span class=\\\"support type primitive ts\\\"><span>string</span></span></span><span class=\\\"punctuation separator parameter ts\\\"><span>,</span></span><span>&nbsp;</span><span class=\\\"variable parameter ts\\\"><span>word2</span></span><span class=\\\"meta type annotation ts\\\"><span class=\\\"keyword operator type annotation ts\\\"><span>:</span></span><span>&nbsp;</span><span class=\\\"support type primitive ts\\\"><span>string</span></span></span><span class=\\\"punctuation definition parameters end ts\\\"><span>)</span></span></span><span>&nbsp;</span><span class=\\\"meta block ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>{</span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"meta var expr ts\\\"><span class=\\\"storage type ts\\\"><span>const</span></span><span>&nbsp;</span><span class=\\\"meta var-single-variable expr ts\\\"><span class=\\\"meta definition variable ts variable other readwrite ts\\\"><span>icsArr</span></span><span class=\\\"meta type annotation ts\\\"><span class=\\\"keyword operator type annotation ts\\\"><span>:</span></span><span>&nbsp;</span><span class=\\\"support type primitive ts\\\"><span>number</span></span><span class=\\\"meta type tuple ts\\\"><span class=\\\"meta brace square ts\\\"><span>[</span><span>]</span><span>[</span><span>]</span></span></span><span>&nbsp;</span></span></span><span class=\\\"keyword operator assignment ts\\\"><span>=</span></span><span>&nbsp;</span><span class=\\\"meta array literal ts\\\"><span class=\\\"meta brace square ts\\\"><span>[</span><span>]</span></span></span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"meta var expr ts\\\"><span class=\\\"storage type ts\\\"><span>let</span></span><span>&nbsp;</span><span class=\\\"meta var-single-variable expr ts\\\"><span class=\\\"meta definition variable ts variable other readwrite ts\\\"><span>max</span></span><span>&nbsp;</span></span><span class=\\\"keyword operator assignment ts\\\"><span>=</span></span><span>&nbsp;</span><span class=\\\"constant numeric decimal ts\\\"><span>0</span></span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"meta var expr ts\\\"><span class=\\\"storage type ts\\\"><span>let</span></span><span>&nbsp;</span><span class=\\\"meta var-single-variable expr ts\\\"><span class=\\\"meta definition variable ts variable other readwrite ts\\\"><span>index</span></span><span>&nbsp;</span></span><span class=\\\"keyword operator assignment ts\\\"><span>=</span></span><span>&nbsp;</span><span class=\\\"constant numeric decimal ts\\\"><span>0</span></span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;</span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"punctuation whitespace comment leading ts\\\"><span>&nbsp;&nbsp;</span></span><span class=\\\"comment line double-slash ts\\\"><span class=\\\"punctuation definition comment ts\\\"><span>//</span></span><span>&nbsp;초기화</span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"keyword control loop ts\\\"><span>for</span></span><span>&nbsp;</span><span class=\\\"meta brace round ts\\\"><span>(</span></span><span class=\\\"meta var expr ts\\\"><span class=\\\"storage type ts\\\"><span>let</span></span><span>&nbsp;</span><span class=\\\"meta var-single-variable expr ts\\\"><span class=\\\"meta definition variable ts variable other readwrite ts\\\"><span>i</span></span><span>&nbsp;</span></span><span class=\\\"keyword operator assignment ts\\\"><span>=</span></span><span>&nbsp;</span><span class=\\\"constant numeric decimal ts\\\"><span>0</span></span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>i</span></span><span>&nbsp;</span><span class=\\\"keyword operator relational ts\\\"><span>&lt;=</span></span><span>&nbsp;</span><span class=\\\"variable other object ts\\\"><span>word1</span></span><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"support variable property ts\\\"><span>length</span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>i</span></span><span class=\\\"keyword operator increment ts\\\"><span>++</span></span><span class=\\\"meta brace round ts\\\"><span>)</span></span><span>&nbsp;</span><span class=\\\"meta block ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>{</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>icsArr</span></span><span class=\\\"meta array literal ts\\\"><span class=\\\"meta brace square ts\\\"><span>[</span></span><span class=\\\"variable other readwrite ts\\\"><span>i</span></span><span class=\\\"meta brace square ts\\\"><span>]</span></span></span><span>&nbsp;</span><span class=\\\"keyword operator assignment ts\\\"><span>=</span></span><span>&nbsp;</span><span class=\\\"meta array literal ts\\\"><span class=\\\"meta brace square ts\\\"><span>[</span><span>]</span></span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"keyword control loop ts\\\"><span>for</span></span><span>&nbsp;</span><span class=\\\"meta brace round ts\\\"><span>(</span></span><span class=\\\"meta var expr ts\\\"><span class=\\\"storage type ts\\\"><span>let</span></span><span>&nbsp;</span><span class=\\\"meta var-single-variable expr ts\\\"><span class=\\\"meta definition variable ts variable other readwrite ts\\\"><span>j</span></span><span>&nbsp;</span></span><span class=\\\"keyword operator assignment ts\\\"><span>=</span></span><span>&nbsp;</span><span class=\\\"constant numeric decimal ts\\\"><span>0</span></span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>j</span></span><span>&nbsp;</span><span class=\\\"keyword operator relational ts\\\"><span>&lt;=</span></span><span>&nbsp;</span><span class=\\\"variable other object ts\\\"><span>word2</span></span><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"support variable property ts\\\"><span>length</span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>j</span></span><span class=\\\"keyword operator increment ts\\\"><span>++</span></span><span class=\\\"meta brace round ts\\\"><span>)</span></span><span>&nbsp;</span><span class=\\\"meta block ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>{</span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>icsArr</span></span><span class=\\\"meta array literal ts\\\"><span class=\\\"meta brace square ts\\\"><span>[</span></span><span class=\\\"variable other readwrite ts\\\"><span>i</span></span><span class=\\\"meta brace square ts\\\"><span>]</span><span>[</span></span><span class=\\\"variable other readwrite ts\\\"><span>j</span></span><span class=\\\"meta brace square ts\\\"><span>]</span></span></span><span>&nbsp;</span><span class=\\\"keyword operator assignment ts\\\"><span>=</span></span><span>&nbsp;</span><span class=\\\"constant numeric decimal ts\\\"><span>0</span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;</span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;</span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"punctuation whitespace comment leading ts\\\"><span>&nbsp;&nbsp;</span></span><span class=\\\"comment line double-slash ts\\\"><span class=\\\"punctuation definition comment ts\\\"><span>//</span></span><span>&nbsp;계산</span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"punctuation whitespace comment leading ts\\\"><span>&nbsp;&nbsp;</span></span><span class=\\\"comment line double-slash ts\\\"><span class=\\\"punctuation definition comment ts\\\"><span>//</span></span><span>&nbsp;i&nbsp;===&nbsp;0&nbsp;||&nbsp;j&nbsp;===&nbsp;0&nbsp;인&nbsp;곳은&nbsp;0으로&nbsp;셋팅해준다</span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"keyword control loop ts\\\"><span>for</span></span><span>&nbsp;</span><span class=\\\"meta brace round ts\\\"><span>(</span></span><span class=\\\"meta var expr ts\\\"><span class=\\\"storage type ts\\\"><span>let</span></span><span>&nbsp;</span><span class=\\\"meta var-single-variable expr ts\\\"><span class=\\\"meta definition variable ts variable other readwrite ts\\\"><span>i</span></span><span>&nbsp;</span></span><span class=\\\"keyword operator assignment ts\\\"><span>=</span></span><span>&nbsp;</span><span class=\\\"constant numeric decimal ts\\\"><span>1</span></span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>i</span></span><span>&nbsp;</span><span class=\\\"keyword operator relational ts\\\"><span>&lt;=</span></span><span>&nbsp;</span><span class=\\\"variable other object ts\\\"><span>word1</span></span><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"support variable property ts\\\"><span>length</span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>i</span></span><span class=\\\"keyword operator increment ts\\\"><span>++</span></span><span class=\\\"meta brace round ts\\\"><span>)</span></span><span>&nbsp;</span><span class=\\\"meta block ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>{</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"keyword control loop ts\\\"><span>for</span></span><span>&nbsp;</span><span class=\\\"meta brace round ts\\\"><span>(</span></span><span class=\\\"meta var expr ts\\\"><span class=\\\"storage type ts\\\"><span>let</span></span><span>&nbsp;</span><span class=\\\"meta var-single-variable expr ts\\\"><span class=\\\"meta definition variable ts variable other readwrite ts\\\"><span>j</span></span><span>&nbsp;</span></span><span class=\\\"keyword operator assignment ts\\\"><span>=</span></span><span>&nbsp;</span><span class=\\\"constant numeric decimal ts\\\"><span>1</span></span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>j</span></span><span>&nbsp;</span><span class=\\\"keyword operator relational ts\\\"><span>&lt;=</span></span><span>&nbsp;</span><span class=\\\"variable other object ts\\\"><span>word2</span></span><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"support variable property ts\\\"><span>length</span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>j</span></span><span class=\\\"keyword operator increment ts\\\"><span>++</span></span><span class=\\\"meta brace round ts\\\"><span>)</span></span><span>&nbsp;</span><span class=\\\"meta block ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>{</span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"keyword control conditional ts\\\"><span>if</span></span><span class=\\\"meta brace round ts\\\"><span>(</span></span><span class=\\\"variable other readwrite ts\\\"><span>word1</span></span><span class=\\\"meta array literal ts\\\"><span class=\\\"meta brace square ts\\\"><span>[</span></span><span class=\\\"variable other readwrite ts\\\"><span>i</span></span><span class=\\\"keyword operator arithmetic ts\\\"><span>-</span></span><span class=\\\"constant numeric decimal ts\\\"><span>1</span></span><span class=\\\"meta brace square ts\\\"><span>]</span></span></span><span>&nbsp;</span><span class=\\\"keyword operator comparison ts\\\"><span>===</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>word2</span></span><span class=\\\"meta array literal ts\\\"><span class=\\\"meta brace square ts\\\"><span>[</span></span><span class=\\\"variable other readwrite ts\\\"><span>j</span></span><span class=\\\"keyword operator arithmetic ts\\\"><span>-</span></span><span class=\\\"constant numeric decimal ts\\\"><span>1</span></span><span class=\\\"meta brace square ts\\\"><span>]</span></span></span><span class=\\\"meta brace round ts\\\"><span>)</span></span><span>&nbsp;</span><span class=\\\"meta block ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>{</span></span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"punctuation whitespace comment leading ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class=\\\"comment line double-slash ts\\\"><span class=\\\"punctuation definition comment ts\\\"><span>//</span></span><span>&nbsp;단어가&nbsp;같으면&nbsp;카운트를&nbsp;해줍니다.</span></span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>icsArr</span></span><span class=\\\"meta array literal ts\\\"><span class=\\\"meta brace square ts\\\"><span>[</span></span><span class=\\\"variable other readwrite ts\\\"><span>i</span></span><span class=\\\"meta brace square ts\\\"><span>]</span><span>[</span></span><span class=\\\"variable other readwrite ts\\\"><span>j</span></span><span class=\\\"meta brace square ts\\\"><span>]</span></span></span><span>&nbsp;</span><span class=\\\"keyword operator assignment ts\\\"><span>=</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>icsArr</span></span><span class=\\\"meta array literal ts\\\"><span class=\\\"meta brace square ts\\\"><span>[</span></span><span class=\\\"variable other readwrite ts\\\"><span>i</span></span><span class=\\\"keyword operator arithmetic ts\\\"><span>-</span></span><span class=\\\"constant numeric decimal ts\\\"><span>1</span></span><span class=\\\"meta brace square ts\\\"><span>]</span><span>[</span></span><span class=\\\"variable other readwrite ts\\\"><span>j</span></span><span class=\\\"keyword operator arithmetic ts\\\"><span>-</span></span><span class=\\\"constant numeric decimal ts\\\"><span>1</span></span><span class=\\\"meta brace square ts\\\"><span>]</span></span></span><span>&nbsp;</span><span class=\\\"keyword operator arithmetic ts\\\"><span>+</span></span><span>&nbsp;</span><span class=\\\"constant numeric decimal ts\\\"><span>1</span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;</span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"punctuation whitespace comment leading ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class=\\\"comment line double-slash ts\\\"><span class=\\\"punctuation definition comment ts\\\"><span>//</span></span><span>&nbsp;카운트&nbsp;한&nbsp;값이&nbsp;max&nbsp;보다&nbsp;크다면&nbsp;max&nbsp;값을&nbsp;업데이트&nbsp;하고</span></span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"punctuation whitespace comment leading ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class=\\\"comment line double-slash ts\\\"><span class=\\\"punctuation definition comment ts\\\"><span>//</span></span><span>&nbsp;그&nbsp;인덱스를&nbsp;index에&nbsp;저장해둔다</span></span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"keyword control conditional ts\\\"><span>if</span></span><span class=\\\"meta brace round ts\\\"><span>(</span></span><span class=\\\"variable other readwrite ts\\\"><span>max</span></span><span>&nbsp;</span><span class=\\\"keyword operator relational ts\\\"><span>&lt;</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>icsArr</span></span><span class=\\\"meta array literal ts\\\"><span class=\\\"meta brace square ts\\\"><span>[</span></span><span class=\\\"variable other readwrite ts\\\"><span>i</span></span><span class=\\\"meta brace square ts\\\"><span>]</span><span>[</span></span><span class=\\\"variable other readwrite ts\\\"><span>j</span></span><span class=\\\"meta brace square ts\\\"><span>]</span></span></span><span class=\\\"meta brace round ts\\\"><span>)</span></span><span>&nbsp;</span><span class=\\\"meta block ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>{</span></span></span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>max</span></span><span>&nbsp;</span><span class=\\\"keyword operator assignment ts\\\"><span>=</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>icsArr</span></span><span class=\\\"meta array literal ts\\\"><span class=\\\"meta brace square ts\\\"><span>[</span></span><span class=\\\"variable other readwrite ts\\\"><span>i</span></span><span class=\\\"meta brace square ts\\\"><span>]</span><span>[</span></span><span class=\\\"variable other readwrite ts\\\"><span>j</span></span><span class=\\\"meta brace square ts\\\"><span>]</span></span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>index</span></span><span>&nbsp;</span><span class=\\\"keyword operator assignment ts\\\"><span>=</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>i</span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;</span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"punctuation whitespace comment leading ts\\\"><span>&nbsp;&nbsp;</span></span><span class=\\\"comment line double-slash ts\\\"><span class=\\\"punctuation definition comment ts\\\"><span>//</span></span><span>&nbsp;출력</span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"keyword control conditional ts\\\"><span>if</span></span><span class=\\\"meta brace round ts\\\"><span>(</span></span><span class=\\\"variable other readwrite ts\\\"><span>max</span></span><span>&nbsp;</span><span class=\\\"keyword operator comparison ts\\\"><span>===</span></span><span>&nbsp;</span><span class=\\\"constant numeric decimal ts\\\"><span>0</span></span><span class=\\\"meta brace round ts\\\"><span>)</span></span><span>&nbsp;</span><span class=\\\"meta block ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>{</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"keyword control flow ts\\\"><span>return</span></span><span>&nbsp;</span><span class=\\\"string quoted single ts\\\"><span class=\\\"punctuation definition string begin ts\\\"><span>&#39;</span></span><span class=\\\"punctuation definition string end ts\\\"><span>&#39;</span></span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;</span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"keyword control conditional ts\\\"><span>if</span></span><span class=\\\"meta brace round ts\\\"><span>(</span></span><span class=\\\"variable other readwrite ts\\\"><span>max</span></span><span>&nbsp;</span><span class=\\\"keyword operator relational ts\\\"><span>&gt;</span></span><span>&nbsp;</span><span class=\\\"constant numeric decimal ts\\\"><span>0</span></span><span class=\\\"meta brace round ts\\\"><span>)</span></span><span>&nbsp;</span><span class=\\\"meta block ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>{</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"meta var expr ts\\\"><span class=\\\"storage type ts\\\"><span>let</span></span><span>&nbsp;</span><span class=\\\"meta var-single-variable expr ts\\\"><span class=\\\"meta definition variable ts variable other readwrite ts\\\"><span>str</span></span><span>&nbsp;</span></span><span class=\\\"keyword operator assignment ts\\\"><span>=</span></span><span>&nbsp;</span><span class=\\\"string quoted single ts\\\"><span class=\\\"punctuation definition string begin ts\\\"><span>&#39;</span></span><span class=\\\"punctuation definition string end ts\\\"><span>&#39;</span></span></span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"meta function-call ts\\\"><span class=\\\"support class console ts\\\"><span>console</span></span><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"support function console ts\\\"><span>log</span></span></span><span class=\\\"meta brace round ts\\\"><span>(</span></span><span class=\\\"variable other readwrite ts\\\"><span>icsArr</span></span><span class=\\\"meta brace round ts\\\"><span>)</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"punctuation whitespace comment leading ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class=\\\"comment line double-slash ts\\\"><span class=\\\"punctuation definition comment ts\\\"><span>//</span></span><span>&nbsp;index&nbsp;-&nbsp;max&nbsp;:&nbsp;연속된&nbsp;max&nbsp;값을&nbsp;가지는&nbsp;해당&nbsp;index에&nbsp;max를&nbsp;빼면&nbsp;시작&nbsp;인덱스를&nbsp;얻을&nbsp;수&nbsp;있다</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"keyword control loop ts\\\"><span>for</span></span><span>&nbsp;</span><span class=\\\"meta brace round ts\\\"><span>(</span></span><span class=\\\"meta var expr ts\\\"><span class=\\\"storage type ts\\\"><span>let</span></span><span>&nbsp;</span><span class=\\\"meta var-single-variable expr ts\\\"><span class=\\\"meta definition variable ts variable other readwrite ts\\\"><span>i</span></span><span>&nbsp;</span></span><span class=\\\"keyword operator assignment ts\\\"><span>=</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>index</span></span><span class=\\\"keyword operator arithmetic ts\\\"><span>-</span></span><span class=\\\"variable other readwrite ts\\\"><span>max</span></span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>i</span></span><span>&nbsp;</span><span class=\\\"keyword operator relational ts\\\"><span>&lt;=</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>max</span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>i</span></span><span class=\\\"keyword operator increment ts\\\"><span>++</span></span><span class=\\\"meta brace round ts\\\"><span>)</span></span><span>&nbsp;</span><span class=\\\"meta block ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>{</span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>str</span></span><span>&nbsp;</span><span class=\\\"keyword operator assignment compound ts\\\"><span>+=</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>word1</span></span><span class=\\\"meta array literal ts\\\"><span class=\\\"meta brace square ts\\\"><span>[</span></span><span class=\\\"variable other readwrite ts\\\"><span>i</span></span><span class=\\\"meta brace square ts\\\"><span>]</span></span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"keyword control flow ts\\\"><span>return</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>str</span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span>&nbsp;</span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function-call ts\\\"><span class=\\\"support class console ts\\\"><span>console</span></span><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"support function console ts\\\"><span>log</span></span></span><span class=\\\"meta brace round ts\\\"><span>(</span></span><span class=\\\"meta function-call ts\\\"><span class=\\\"entity name function ts\\\"><span>Isc</span></span></span><span class=\\\"meta brace round ts\\\"><span>(</span></span><span class=\\\"string quoted single ts\\\"><span class=\\\"punctuation definition string begin ts\\\"><span>&#39;</span></span><span>abbcc</span><span class=\\\"punctuation definition string end ts\\\"><span>&#39;</span></span></span><span class=\\\"punctuation separator comma ts\\\"><span>,</span></span><span>&nbsp;</span><span class=\\\"string quoted single ts\\\"><span class=\\\"punctuation definition string begin ts\\\"><span>&#39;</span></span><span>dbbcc</span><span class=\\\"punctuation definition string end ts\\\"><span>&#39;</span></span></span><span class=\\\"meta brace round ts\\\"><span>)</span><span>)</span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"comment line double-slash ts\\\"><span class=\\\"punctuation definition comment ts\\\"><span>//</span></span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a,&nbsp;b,&nbsp;b,&nbsp;c,&nbsp;c</span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"comment line double-slash ts\\\"><span class=\\\"punctuation definition comment ts\\\"><span>//</span></span><span>&nbsp;0:&nbsp;(6)&nbsp;&nbsp;&nbsp;[0,&nbsp;0,&nbsp;0,&nbsp;0,&nbsp;0,&nbsp;0]</span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"comment line double-slash ts\\\"><span class=\\\"punctuation definition comment ts\\\"><span>//</span></span><span>&nbsp;1:&nbsp;(6)&nbsp;d&nbsp;[0,&nbsp;0,&nbsp;0,&nbsp;0,&nbsp;0,&nbsp;0]</span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"comment line double-slash ts\\\"><span class=\\\"punctuation definition comment ts\\\"><span>//</span></span><span>&nbsp;2:&nbsp;(6)&nbsp;b&nbsp;[0,&nbsp;0,&nbsp;1,&nbsp;1,&nbsp;0,&nbsp;0]</span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"comment line double-slash ts\\\"><span class=\\\"punctuation definition comment ts\\\"><span>//</span></span><span>&nbsp;3:&nbsp;(6)&nbsp;b&nbsp;[0,&nbsp;0,&nbsp;1,&nbsp;2,&nbsp;0,&nbsp;0]</span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"comment line double-slash ts\\\"><span class=\\\"punctuation definition comment ts\\\"><span>//</span></span><span>&nbsp;4:&nbsp;(6)&nbsp;c&nbsp;[0,&nbsp;0,&nbsp;0,&nbsp;0,&nbsp;3,&nbsp;1]</span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"comment line double-slash ts\\\"><span class=\\\"punctuation definition comment ts\\\"><span>//</span></span><span>&nbsp;5:&nbsp;(6)&nbsp;c&nbsp;[0,&nbsp;0,&nbsp;0,&nbsp;0,&nbsp;1,&nbsp;4]</span></span></span></div></pre>\\n<h3>배낭 문제</h3>\\n<h2>탐욕 알고리즘</h2>\\n<ul>\\n<li>문제를 해결하는 좋은 해결책을 찾아가는 기법입니다.</li>\\n</ul>\",\"frontmatter\":{\"title\":\"advanced algorithms\",\"date\":\"May 01, 2020\"}}},\"pathContext\":{\"slug\":\"/hello-algorithms/advanced/\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---hello-algorithms-advanced-a224fe99ddc2a8012743.js","module.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"title\":\"Merlin Tec Blog\",\"author\":\"merlin.ho\"}},\"markdownRemark\":{\"id\":\"/Users/merlin.ho/Documents/workspace/ho_blog/gatsby-blog/src/pages/hello-algorithms/advanced.md absPath of file >>> MarkdownRemark\",\"html\":\"<h2>동적 프로그래밍</h2>\\n<ul>\\n<li>동적 프로그래밍은 재귀와 상반되는 기법으로 알려져 있습니다. 재귀에서는 위에서 아래로 내려가면서 점차 작아지는 문제를 모두 해결하는 방식인 반면, 동적프로그래밍에서는 아래에서 위로 해결하면서 결과를 모아 큰 전체 문제를 해결하는 방식입니다.</li>\\n<li>재귀 기법으로 해결할 수 있는 대부분의 프로그래밍 문제는 동적 프로그래밍으로도 해결할 수 있습니다.</li>\\n</ul>\\n<h3>피보나치 예제</h3>\\n<p>피보나치는 이전의 두 숫자를 더해서 다음 숫자를 만들 수 있습니다.\\n재귀를 이용해서 다음과 같이 구현할 수 있습니다.</p>\\n<pre class=\\\"editor editor-colors\\\"><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"storage type function ts\\\"><span>function</span></span><span>&nbsp;</span><span class=\\\"meta definition function ts entity name function ts\\\"><span>recurFib</span></span><span class=\\\"meta parameters ts\\\"><span class=\\\"punctuation definition parameters begin ts\\\"><span>(</span></span><span class=\\\"variable parameter ts\\\"><span>n</span></span><span class=\\\"punctuation definition parameters end ts\\\"><span>)</span></span></span><span>&nbsp;</span><span class=\\\"meta block ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>{</span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"keyword control conditional ts\\\"><span>if</span></span><span class=\\\"meta brace round ts\\\"><span>(</span></span><span class=\\\"variable other readwrite ts\\\"><span>n</span></span><span>&nbsp;</span><span class=\\\"keyword operator relational ts\\\"><span>&lt;</span></span><span>&nbsp;</span><span class=\\\"constant numeric decimal ts\\\"><span>2</span></span><span class=\\\"meta brace round ts\\\"><span>)</span></span><span>&nbsp;</span><span class=\\\"meta block ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>{</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"keyword control flow ts\\\"><span>return</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>n</span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span><span>&nbsp;</span><span class=\\\"keyword control conditional ts\\\"><span>else</span></span><span>&nbsp;</span><span class=\\\"meta block ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>{</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"keyword control flow ts\\\"><span>return</span></span><span>&nbsp;</span><span class=\\\"meta function-call ts\\\"><span class=\\\"entity name function ts\\\"><span>recurFib</span></span></span><span class=\\\"meta brace round ts\\\"><span>(</span></span><span class=\\\"variable other readwrite ts\\\"><span>n</span></span><span class=\\\"keyword operator arithmetic ts\\\"><span>-</span></span><span class=\\\"constant numeric decimal ts\\\"><span>1</span></span><span class=\\\"meta brace round ts\\\"><span>)</span></span><span>&nbsp;</span><span class=\\\"keyword operator arithmetic ts\\\"><span>+</span></span><span>&nbsp;</span><span class=\\\"meta function-call ts\\\"><span class=\\\"entity name function ts\\\"><span>recurFib</span></span></span><span class=\\\"meta brace round ts\\\"><span>(</span></span><span class=\\\"variable other readwrite ts\\\"><span>n</span></span><span class=\\\"keyword operator arithmetic ts\\\"><span>-</span></span><span class=\\\"constant numeric decimal ts\\\"><span>2</span></span><span class=\\\"meta brace round ts\\\"><span>)</span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span></span></span></div></pre>\\n<p>이미 계산한 값을 컴파일러가 기억할 수 있다면 더 효율성을 높일 수 있습니다.\\n동적 프로그래밍에서는 가장 간단한 하위 문제부터 해결하면서 좀 더 복잡한 상위 문제로 나아갑니다.</p>\\n<pre class=\\\"editor editor-colors\\\"><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"storage type function ts\\\"><span>function</span></span><span>&nbsp;</span><span class=\\\"meta definition function ts entity name function ts\\\"><span>dynFib</span></span><span class=\\\"meta parameters ts\\\"><span class=\\\"punctuation definition parameters begin ts\\\"><span>(</span></span><span class=\\\"variable parameter ts\\\"><span>n</span></span><span class=\\\"punctuation definition parameters end ts\\\"><span>)</span></span></span><span>&nbsp;</span><span class=\\\"meta block ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>{</span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"punctuation whitespace comment leading ts\\\"><span>&nbsp;&nbsp;</span></span><span class=\\\"comment line double-slash ts\\\"><span class=\\\"punctuation definition comment ts\\\"><span>//</span></span><span>&nbsp;초기화</span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"meta var expr ts\\\"><span class=\\\"storage type ts\\\"><span>const</span></span><span>&nbsp;</span><span class=\\\"meta var-single-variable expr ts\\\"><span class=\\\"meta definition variable ts variable other readwrite ts\\\"><span>val</span></span><span>&nbsp;</span></span><span class=\\\"keyword operator assignment ts\\\"><span>=</span></span><span>&nbsp;</span><span class=\\\"new expr ts\\\"><span class=\\\"keyword operator new ts\\\"><span>new</span></span><span>&nbsp;</span><span class=\\\"entity name type ts\\\"><span>Array</span></span><span class=\\\"meta brace round ts\\\"><span>(</span></span><span class=\\\"variable other readwrite ts\\\"><span>n</span></span><span class=\\\"meta brace round ts\\\"><span>)</span></span></span><span class=\\\"meta function-call ts\\\"><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"entity name function ts\\\"><span>fill</span></span></span><span class=\\\"meta brace round ts\\\"><span>(</span></span><span class=\\\"constant numeric decimal ts\\\"><span>0</span></span><span class=\\\"meta brace round ts\\\"><span>)</span></span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;</span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"keyword control conditional ts\\\"><span>if</span></span><span class=\\\"meta brace round ts\\\"><span>(</span></span><span class=\\\"variable other readwrite ts\\\"><span>n</span></span><span>&nbsp;</span><span class=\\\"keyword operator comparison ts\\\"><span>===</span></span><span>&nbsp;</span><span class=\\\"constant numeric decimal ts\\\"><span>1</span></span><span>&nbsp;</span><span class=\\\"keyword operator logical ts\\\"><span>||</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>n</span></span><span>&nbsp;</span><span class=\\\"keyword operator comparison ts\\\"><span>===</span></span><span>&nbsp;</span><span class=\\\"constant numeric decimal ts\\\"><span>2</span></span><span class=\\\"meta brace round ts\\\"><span>)</span></span><span>&nbsp;</span><span class=\\\"meta block ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>{</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"keyword control flow ts\\\"><span>return</span></span><span>&nbsp;</span><span class=\\\"constant numeric decimal ts\\\"><span>1</span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span><span>&nbsp;</span><span class=\\\"keyword control conditional ts\\\"><span>else</span></span><span>&nbsp;</span><span class=\\\"keyword control conditional ts\\\"><span>if</span></span><span class=\\\"meta brace round ts\\\"><span>(</span></span><span class=\\\"variable other readwrite ts\\\"><span>n</span></span><span>&nbsp;</span><span class=\\\"keyword operator relational ts\\\"><span>&gt;</span></span><span>&nbsp;</span><span class=\\\"constant numeric decimal ts\\\"><span>2</span></span><span class=\\\"meta brace round ts\\\"><span>)</span></span><span>&nbsp;</span><span class=\\\"meta block ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>{</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>val</span></span><span class=\\\"meta array literal ts\\\"><span class=\\\"meta brace square ts\\\"><span>[</span></span><span class=\\\"constant numeric decimal ts\\\"><span>1</span></span><span class=\\\"meta brace square ts\\\"><span>]</span></span></span><span>&nbsp;</span><span class=\\\"keyword operator assignment ts\\\"><span>=</span></span><span>&nbsp;</span><span class=\\\"constant numeric decimal ts\\\"><span>1</span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>val</span></span><span class=\\\"meta array literal ts\\\"><span class=\\\"meta brace square ts\\\"><span>[</span></span><span class=\\\"constant numeric decimal ts\\\"><span>2</span></span><span class=\\\"meta brace square ts\\\"><span>]</span></span></span><span>&nbsp;</span><span class=\\\"keyword operator assignment ts\\\"><span>=</span></span><span>&nbsp;</span><span class=\\\"constant numeric decimal ts\\\"><span>1</span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"keyword control loop ts\\\"><span>for</span></span><span>&nbsp;</span><span class=\\\"meta brace round ts\\\"><span>(</span></span><span class=\\\"meta var expr ts\\\"><span class=\\\"storage type ts\\\"><span>let</span></span><span>&nbsp;</span><span class=\\\"meta var-single-variable expr ts\\\"><span class=\\\"meta definition variable ts variable other readwrite ts\\\"><span>i</span></span><span>&nbsp;</span></span><span class=\\\"keyword operator assignment ts\\\"><span>=</span></span><span>&nbsp;</span><span class=\\\"constant numeric decimal ts\\\"><span>3</span></span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>i</span></span><span>&nbsp;</span><span class=\\\"keyword operator relational ts\\\"><span>&lt;=</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>n</span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>i</span></span><span class=\\\"keyword operator increment ts\\\"><span>++</span></span><span class=\\\"meta brace round ts\\\"><span>)</span></span><span>&nbsp;</span><span class=\\\"meta block ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>{</span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>val</span></span><span class=\\\"meta array literal ts\\\"><span class=\\\"meta brace square ts\\\"><span>[</span></span><span class=\\\"variable other readwrite ts\\\"><span>i</span></span><span class=\\\"meta brace square ts\\\"><span>]</span></span></span><span>&nbsp;</span><span class=\\\"keyword operator assignment ts\\\"><span>=</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>val</span></span><span class=\\\"meta array literal ts\\\"><span class=\\\"meta brace square ts\\\"><span>[</span></span><span class=\\\"variable other readwrite ts\\\"><span>i</span></span><span class=\\\"keyword operator arithmetic ts\\\"><span>-</span></span><span class=\\\"constant numeric decimal ts\\\"><span>1</span></span><span class=\\\"meta brace square ts\\\"><span>]</span></span></span><span>&nbsp;</span><span class=\\\"keyword operator arithmetic ts\\\"><span>+</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>val</span></span><span class=\\\"meta array literal ts\\\"><span class=\\\"meta brace square ts\\\"><span>[</span></span><span class=\\\"variable other readwrite ts\\\"><span>i</span></span><span class=\\\"keyword operator arithmetic ts\\\"><span>-</span></span><span class=\\\"constant numeric decimal ts\\\"><span>2</span></span><span class=\\\"meta brace square ts\\\"><span>]</span></span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;</span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"keyword control flow ts\\\"><span>return</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>val</span></span><span class=\\\"meta array literal ts\\\"><span class=\\\"meta brace square ts\\\"><span>[</span></span><span class=\\\"variable other readwrite ts\\\"><span>n</span></span><span class=\\\"meta brace square ts\\\"><span>]</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span></span></span></div></pre>\\n<p>반복 기법을 이용해서도 피보나치를 계산 할 수 있다.</p>\\n<pre class=\\\"editor editor-colors\\\"><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"storage type function ts\\\"><span>function</span></span><span>&nbsp;</span><span class=\\\"meta definition function ts entity name function ts\\\"><span>iterFib</span></span><span class=\\\"meta parameters ts\\\"><span class=\\\"punctuation definition parameters begin ts\\\"><span>(</span></span><span class=\\\"variable parameter ts\\\"><span>n</span></span><span class=\\\"punctuation definition parameters end ts\\\"><span>)</span></span></span><span>&nbsp;</span><span class=\\\"meta block ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>{</span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"meta var expr ts\\\"><span class=\\\"storage type ts\\\"><span>let</span></span><span>&nbsp;</span><span class=\\\"meta var-single-variable expr ts\\\"><span class=\\\"meta definition variable ts variable other readwrite ts\\\"><span>last</span></span><span>&nbsp;</span></span><span class=\\\"keyword operator assignment ts\\\"><span>=</span></span><span>&nbsp;</span><span class=\\\"constant numeric decimal ts\\\"><span>1</span></span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span><span>&nbsp;</span><span class=\\\"comment line double-slash ts\\\"><span class=\\\"punctuation definition comment ts\\\"><span>//</span></span><span>&nbsp;첫번째</span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"meta var expr ts\\\"><span class=\\\"storage type ts\\\"><span>let</span></span><span>&nbsp;</span><span class=\\\"meta var-single-variable expr ts\\\"><span class=\\\"meta definition variable ts variable other readwrite ts\\\"><span>nextLast</span></span><span>&nbsp;</span></span><span class=\\\"keyword operator assignment ts\\\"><span>=</span></span><span>&nbsp;</span><span class=\\\"constant numeric decimal ts\\\"><span>1</span></span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span><span>&nbsp;</span><span class=\\\"comment line double-slash ts\\\"><span class=\\\"punctuation definition comment ts\\\"><span>//</span></span><span>&nbsp;두번째</span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"meta var expr ts\\\"><span class=\\\"storage type ts\\\"><span>let</span></span><span>&nbsp;</span><span class=\\\"meta var-single-variable expr ts\\\"><span class=\\\"meta definition variable ts variable other readwrite ts\\\"><span>result</span></span><span>&nbsp;</span></span><span class=\\\"keyword operator assignment ts\\\"><span>=</span></span><span>&nbsp;</span><span class=\\\"constant numeric decimal ts\\\"><span>1</span></span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;</span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"keyword control loop ts\\\"><span>for</span></span><span class=\\\"meta brace round ts\\\"><span>(</span></span><span class=\\\"meta var expr ts\\\"><span class=\\\"storage type ts\\\"><span>let</span></span><span>&nbsp;</span><span class=\\\"meta var-single-variable expr ts\\\"><span class=\\\"meta definition variable ts variable other readwrite ts\\\"><span>i</span></span><span>&nbsp;</span></span><span class=\\\"keyword operator assignment ts\\\"><span>=</span></span><span>&nbsp;</span><span class=\\\"constant numeric decimal ts\\\"><span>3</span></span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>i</span></span><span>&nbsp;</span><span class=\\\"keyword operator relational ts\\\"><span>&lt;=</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>n</span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>i</span></span><span class=\\\"keyword operator increment ts\\\"><span>++</span></span><span class=\\\"meta brace round ts\\\"><span>)</span></span><span>&nbsp;</span><span class=\\\"meta block ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>{</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>result</span></span><span>&nbsp;</span><span class=\\\"keyword operator assignment ts\\\"><span>=</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>last</span></span><span>&nbsp;</span><span class=\\\"keyword operator arithmetic ts\\\"><span>+</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>nextLast</span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>last</span></span><span>&nbsp;</span><span class=\\\"keyword operator assignment ts\\\"><span>=</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>nextLast</span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>nextLast</span></span><span>&nbsp;</span><span class=\\\"keyword operator assignment ts\\\"><span>=</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>result</span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;</span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"keyword control flow ts\\\"><span>return</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>result</span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span></span></span></div></pre>\\n<h3>가장 긴 공통 문자열 찾기</h3>\\n<ul>\\n<li>두 개의 문자열에서 가장 긴 공통 문자열을 찾는 문제입니다.</li>\\n<li>이차원 배열을 이용해서 각 문자열을 비교하고 두 배열의 같은 위치에서 같은 문자를 발견하면 이차원 배열의 해당 행과 열에 위치한 요소를 1 증가시킵니다.</li>\\n<li>문자열을 비교하면서 얼마나 많은 글자가 일치했는지 변수에 저장합니다.</li>\\n<li>알고리즘이 끝나면 일치한 횟수를 저장한 변수와 인덱스 변수를 이용해 가장 긴 공통 문자열을 반환합니다.</li>\\n</ul>\\n<pre class=\\\"editor editor-colors\\\"><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"storage type function ts\\\"><span>function</span></span><span>&nbsp;</span><span class=\\\"meta definition function ts entity name function ts\\\"><span>Isc</span></span><span>&nbsp;</span><span class=\\\"meta parameters ts\\\"><span class=\\\"punctuation definition parameters begin ts\\\"><span>(</span></span><span class=\\\"variable parameter ts\\\"><span>word1</span></span><span class=\\\"meta type annotation ts\\\"><span class=\\\"keyword operator type annotation ts\\\"><span>:</span></span><span>&nbsp;</span><span class=\\\"support type primitive ts\\\"><span>string</span></span></span><span class=\\\"punctuation separator parameter ts\\\"><span>,</span></span><span>&nbsp;</span><span class=\\\"variable parameter ts\\\"><span>word2</span></span><span class=\\\"meta type annotation ts\\\"><span class=\\\"keyword operator type annotation ts\\\"><span>:</span></span><span>&nbsp;</span><span class=\\\"support type primitive ts\\\"><span>string</span></span></span><span class=\\\"punctuation definition parameters end ts\\\"><span>)</span></span></span><span>&nbsp;</span><span class=\\\"meta block ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>{</span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"meta var expr ts\\\"><span class=\\\"storage type ts\\\"><span>const</span></span><span>&nbsp;</span><span class=\\\"meta var-single-variable expr ts\\\"><span class=\\\"meta definition variable ts variable other readwrite ts\\\"><span>icsArr</span></span><span class=\\\"meta type annotation ts\\\"><span class=\\\"keyword operator type annotation ts\\\"><span>:</span></span><span>&nbsp;</span><span class=\\\"support type primitive ts\\\"><span>number</span></span><span class=\\\"meta type tuple ts\\\"><span class=\\\"meta brace square ts\\\"><span>[</span><span>]</span><span>[</span><span>]</span></span></span><span>&nbsp;</span></span></span><span class=\\\"keyword operator assignment ts\\\"><span>=</span></span><span>&nbsp;</span><span class=\\\"meta array literal ts\\\"><span class=\\\"meta brace square ts\\\"><span>[</span><span>]</span></span></span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"meta var expr ts\\\"><span class=\\\"storage type ts\\\"><span>let</span></span><span>&nbsp;</span><span class=\\\"meta var-single-variable expr ts\\\"><span class=\\\"meta definition variable ts variable other readwrite ts\\\"><span>max</span></span><span>&nbsp;</span></span><span class=\\\"keyword operator assignment ts\\\"><span>=</span></span><span>&nbsp;</span><span class=\\\"constant numeric decimal ts\\\"><span>0</span></span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"meta var expr ts\\\"><span class=\\\"storage type ts\\\"><span>let</span></span><span>&nbsp;</span><span class=\\\"meta var-single-variable expr ts\\\"><span class=\\\"meta definition variable ts variable other readwrite ts\\\"><span>index</span></span><span>&nbsp;</span></span><span class=\\\"keyword operator assignment ts\\\"><span>=</span></span><span>&nbsp;</span><span class=\\\"constant numeric decimal ts\\\"><span>0</span></span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;</span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"punctuation whitespace comment leading ts\\\"><span>&nbsp;&nbsp;</span></span><span class=\\\"comment line double-slash ts\\\"><span class=\\\"punctuation definition comment ts\\\"><span>//</span></span><span>&nbsp;초기화</span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"keyword control loop ts\\\"><span>for</span></span><span>&nbsp;</span><span class=\\\"meta brace round ts\\\"><span>(</span></span><span class=\\\"meta var expr ts\\\"><span class=\\\"storage type ts\\\"><span>let</span></span><span>&nbsp;</span><span class=\\\"meta var-single-variable expr ts\\\"><span class=\\\"meta definition variable ts variable other readwrite ts\\\"><span>i</span></span><span>&nbsp;</span></span><span class=\\\"keyword operator assignment ts\\\"><span>=</span></span><span>&nbsp;</span><span class=\\\"constant numeric decimal ts\\\"><span>0</span></span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>i</span></span><span>&nbsp;</span><span class=\\\"keyword operator relational ts\\\"><span>&lt;=</span></span><span>&nbsp;</span><span class=\\\"variable other object ts\\\"><span>word1</span></span><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"support variable property ts\\\"><span>length</span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>i</span></span><span class=\\\"keyword operator increment ts\\\"><span>++</span></span><span class=\\\"meta brace round ts\\\"><span>)</span></span><span>&nbsp;</span><span class=\\\"meta block ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>{</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>icsArr</span></span><span class=\\\"meta array literal ts\\\"><span class=\\\"meta brace square ts\\\"><span>[</span></span><span class=\\\"variable other readwrite ts\\\"><span>i</span></span><span class=\\\"meta brace square ts\\\"><span>]</span></span></span><span>&nbsp;</span><span class=\\\"keyword operator assignment ts\\\"><span>=</span></span><span>&nbsp;</span><span class=\\\"meta array literal ts\\\"><span class=\\\"meta brace square ts\\\"><span>[</span><span>]</span></span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"keyword control loop ts\\\"><span>for</span></span><span>&nbsp;</span><span class=\\\"meta brace round ts\\\"><span>(</span></span><span class=\\\"meta var expr ts\\\"><span class=\\\"storage type ts\\\"><span>let</span></span><span>&nbsp;</span><span class=\\\"meta var-single-variable expr ts\\\"><span class=\\\"meta definition variable ts variable other readwrite ts\\\"><span>j</span></span><span>&nbsp;</span></span><span class=\\\"keyword operator assignment ts\\\"><span>=</span></span><span>&nbsp;</span><span class=\\\"constant numeric decimal ts\\\"><span>0</span></span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>j</span></span><span>&nbsp;</span><span class=\\\"keyword operator relational ts\\\"><span>&lt;=</span></span><span>&nbsp;</span><span class=\\\"variable other object ts\\\"><span>word2</span></span><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"support variable property ts\\\"><span>length</span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>j</span></span><span class=\\\"keyword operator increment ts\\\"><span>++</span></span><span class=\\\"meta brace round ts\\\"><span>)</span></span><span>&nbsp;</span><span class=\\\"meta block ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>{</span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>icsArr</span></span><span class=\\\"meta array literal ts\\\"><span class=\\\"meta brace square ts\\\"><span>[</span></span><span class=\\\"variable other readwrite ts\\\"><span>i</span></span><span class=\\\"meta brace square ts\\\"><span>]</span><span>[</span></span><span class=\\\"variable other readwrite ts\\\"><span>j</span></span><span class=\\\"meta brace square ts\\\"><span>]</span></span></span><span>&nbsp;</span><span class=\\\"keyword operator assignment ts\\\"><span>=</span></span><span>&nbsp;</span><span class=\\\"constant numeric decimal ts\\\"><span>0</span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;</span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;</span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"punctuation whitespace comment leading ts\\\"><span>&nbsp;&nbsp;</span></span><span class=\\\"comment line double-slash ts\\\"><span class=\\\"punctuation definition comment ts\\\"><span>//</span></span><span>&nbsp;계산</span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"punctuation whitespace comment leading ts\\\"><span>&nbsp;&nbsp;</span></span><span class=\\\"comment line double-slash ts\\\"><span class=\\\"punctuation definition comment ts\\\"><span>//</span></span><span>&nbsp;i&nbsp;===&nbsp;0&nbsp;||&nbsp;j&nbsp;===&nbsp;0&nbsp;인&nbsp;곳은&nbsp;0으로&nbsp;셋팅해준다</span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"keyword control loop ts\\\"><span>for</span></span><span>&nbsp;</span><span class=\\\"meta brace round ts\\\"><span>(</span></span><span class=\\\"meta var expr ts\\\"><span class=\\\"storage type ts\\\"><span>let</span></span><span>&nbsp;</span><span class=\\\"meta var-single-variable expr ts\\\"><span class=\\\"meta definition variable ts variable other readwrite ts\\\"><span>i</span></span><span>&nbsp;</span></span><span class=\\\"keyword operator assignment ts\\\"><span>=</span></span><span>&nbsp;</span><span class=\\\"constant numeric decimal ts\\\"><span>1</span></span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>i</span></span><span>&nbsp;</span><span class=\\\"keyword operator relational ts\\\"><span>&lt;=</span></span><span>&nbsp;</span><span class=\\\"variable other object ts\\\"><span>word1</span></span><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"support variable property ts\\\"><span>length</span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>i</span></span><span class=\\\"keyword operator increment ts\\\"><span>++</span></span><span class=\\\"meta brace round ts\\\"><span>)</span></span><span>&nbsp;</span><span class=\\\"meta block ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>{</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"keyword control loop ts\\\"><span>for</span></span><span>&nbsp;</span><span class=\\\"meta brace round ts\\\"><span>(</span></span><span class=\\\"meta var expr ts\\\"><span class=\\\"storage type ts\\\"><span>let</span></span><span>&nbsp;</span><span class=\\\"meta var-single-variable expr ts\\\"><span class=\\\"meta definition variable ts variable other readwrite ts\\\"><span>j</span></span><span>&nbsp;</span></span><span class=\\\"keyword operator assignment ts\\\"><span>=</span></span><span>&nbsp;</span><span class=\\\"constant numeric decimal ts\\\"><span>1</span></span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>j</span></span><span>&nbsp;</span><span class=\\\"keyword operator relational ts\\\"><span>&lt;=</span></span><span>&nbsp;</span><span class=\\\"variable other object ts\\\"><span>word2</span></span><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"support variable property ts\\\"><span>length</span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>j</span></span><span class=\\\"keyword operator increment ts\\\"><span>++</span></span><span class=\\\"meta brace round ts\\\"><span>)</span></span><span>&nbsp;</span><span class=\\\"meta block ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>{</span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"keyword control conditional ts\\\"><span>if</span></span><span class=\\\"meta brace round ts\\\"><span>(</span></span><span class=\\\"variable other readwrite ts\\\"><span>word1</span></span><span class=\\\"meta array literal ts\\\"><span class=\\\"meta brace square ts\\\"><span>[</span></span><span class=\\\"variable other readwrite ts\\\"><span>i</span></span><span class=\\\"keyword operator arithmetic ts\\\"><span>-</span></span><span class=\\\"constant numeric decimal ts\\\"><span>1</span></span><span class=\\\"meta brace square ts\\\"><span>]</span></span></span><span>&nbsp;</span><span class=\\\"keyword operator comparison ts\\\"><span>===</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>word2</span></span><span class=\\\"meta array literal ts\\\"><span class=\\\"meta brace square ts\\\"><span>[</span></span><span class=\\\"variable other readwrite ts\\\"><span>j</span></span><span class=\\\"keyword operator arithmetic ts\\\"><span>-</span></span><span class=\\\"constant numeric decimal ts\\\"><span>1</span></span><span class=\\\"meta brace square ts\\\"><span>]</span></span></span><span class=\\\"meta brace round ts\\\"><span>)</span></span><span>&nbsp;</span><span class=\\\"meta block ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>{</span></span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"punctuation whitespace comment leading ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class=\\\"comment line double-slash ts\\\"><span class=\\\"punctuation definition comment ts\\\"><span>//</span></span><span>&nbsp;단어가&nbsp;같으면&nbsp;카운트를&nbsp;해줍니다.</span></span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>icsArr</span></span><span class=\\\"meta array literal ts\\\"><span class=\\\"meta brace square ts\\\"><span>[</span></span><span class=\\\"variable other readwrite ts\\\"><span>i</span></span><span class=\\\"meta brace square ts\\\"><span>]</span><span>[</span></span><span class=\\\"variable other readwrite ts\\\"><span>j</span></span><span class=\\\"meta brace square ts\\\"><span>]</span></span></span><span>&nbsp;</span><span class=\\\"keyword operator assignment ts\\\"><span>=</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>icsArr</span></span><span class=\\\"meta array literal ts\\\"><span class=\\\"meta brace square ts\\\"><span>[</span></span><span class=\\\"variable other readwrite ts\\\"><span>i</span></span><span class=\\\"keyword operator arithmetic ts\\\"><span>-</span></span><span class=\\\"constant numeric decimal ts\\\"><span>1</span></span><span class=\\\"meta brace square ts\\\"><span>]</span><span>[</span></span><span class=\\\"variable other readwrite ts\\\"><span>j</span></span><span class=\\\"keyword operator arithmetic ts\\\"><span>-</span></span><span class=\\\"constant numeric decimal ts\\\"><span>1</span></span><span class=\\\"meta brace square ts\\\"><span>]</span></span></span><span>&nbsp;</span><span class=\\\"keyword operator arithmetic ts\\\"><span>+</span></span><span>&nbsp;</span><span class=\\\"constant numeric decimal ts\\\"><span>1</span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;</span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"punctuation whitespace comment leading ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class=\\\"comment line double-slash ts\\\"><span class=\\\"punctuation definition comment ts\\\"><span>//</span></span><span>&nbsp;카운트&nbsp;한&nbsp;값이&nbsp;max&nbsp;보다&nbsp;크다면&nbsp;max&nbsp;값을&nbsp;업데이트&nbsp;하고</span></span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"punctuation whitespace comment leading ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class=\\\"comment line double-slash ts\\\"><span class=\\\"punctuation definition comment ts\\\"><span>//</span></span><span>&nbsp;그&nbsp;인덱스를&nbsp;index에&nbsp;저장해둔다</span></span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"keyword control conditional ts\\\"><span>if</span></span><span class=\\\"meta brace round ts\\\"><span>(</span></span><span class=\\\"variable other readwrite ts\\\"><span>max</span></span><span>&nbsp;</span><span class=\\\"keyword operator relational ts\\\"><span>&lt;</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>icsArr</span></span><span class=\\\"meta array literal ts\\\"><span class=\\\"meta brace square ts\\\"><span>[</span></span><span class=\\\"variable other readwrite ts\\\"><span>i</span></span><span class=\\\"meta brace square ts\\\"><span>]</span><span>[</span></span><span class=\\\"variable other readwrite ts\\\"><span>j</span></span><span class=\\\"meta brace square ts\\\"><span>]</span></span></span><span class=\\\"meta brace round ts\\\"><span>)</span></span><span>&nbsp;</span><span class=\\\"meta block ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>{</span></span></span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>max</span></span><span>&nbsp;</span><span class=\\\"keyword operator assignment ts\\\"><span>=</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>icsArr</span></span><span class=\\\"meta array literal ts\\\"><span class=\\\"meta brace square ts\\\"><span>[</span></span><span class=\\\"variable other readwrite ts\\\"><span>i</span></span><span class=\\\"meta brace square ts\\\"><span>]</span><span>[</span></span><span class=\\\"variable other readwrite ts\\\"><span>j</span></span><span class=\\\"meta brace square ts\\\"><span>]</span></span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>index</span></span><span>&nbsp;</span><span class=\\\"keyword operator assignment ts\\\"><span>=</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>i</span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;</span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"punctuation whitespace comment leading ts\\\"><span>&nbsp;&nbsp;</span></span><span class=\\\"comment line double-slash ts\\\"><span class=\\\"punctuation definition comment ts\\\"><span>//</span></span><span>&nbsp;출력</span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"keyword control conditional ts\\\"><span>if</span></span><span class=\\\"meta brace round ts\\\"><span>(</span></span><span class=\\\"variable other readwrite ts\\\"><span>max</span></span><span>&nbsp;</span><span class=\\\"keyword operator comparison ts\\\"><span>===</span></span><span>&nbsp;</span><span class=\\\"constant numeric decimal ts\\\"><span>0</span></span><span class=\\\"meta brace round ts\\\"><span>)</span></span><span>&nbsp;</span><span class=\\\"meta block ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>{</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"keyword control flow ts\\\"><span>return</span></span><span>&nbsp;</span><span class=\\\"string quoted single ts\\\"><span class=\\\"punctuation definition string begin ts\\\"><span>&#39;</span></span><span class=\\\"punctuation definition string end ts\\\"><span>&#39;</span></span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;</span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"keyword control conditional ts\\\"><span>if</span></span><span class=\\\"meta brace round ts\\\"><span>(</span></span><span class=\\\"variable other readwrite ts\\\"><span>max</span></span><span>&nbsp;</span><span class=\\\"keyword operator relational ts\\\"><span>&gt;</span></span><span>&nbsp;</span><span class=\\\"constant numeric decimal ts\\\"><span>0</span></span><span class=\\\"meta brace round ts\\\"><span>)</span></span><span>&nbsp;</span><span class=\\\"meta block ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>{</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"meta var expr ts\\\"><span class=\\\"storage type ts\\\"><span>let</span></span><span>&nbsp;</span><span class=\\\"meta var-single-variable expr ts\\\"><span class=\\\"meta definition variable ts variable other readwrite ts\\\"><span>str</span></span><span>&nbsp;</span></span><span class=\\\"keyword operator assignment ts\\\"><span>=</span></span><span>&nbsp;</span><span class=\\\"string quoted single ts\\\"><span class=\\\"punctuation definition string begin ts\\\"><span>&#39;</span></span><span class=\\\"punctuation definition string end ts\\\"><span>&#39;</span></span></span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"meta function-call ts\\\"><span class=\\\"support class console ts\\\"><span>console</span></span><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"support function console ts\\\"><span>log</span></span></span><span class=\\\"meta brace round ts\\\"><span>(</span></span><span class=\\\"variable other readwrite ts\\\"><span>icsArr</span></span><span class=\\\"meta brace round ts\\\"><span>)</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"punctuation whitespace comment leading ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class=\\\"comment line double-slash ts\\\"><span class=\\\"punctuation definition comment ts\\\"><span>//</span></span><span>&nbsp;index&nbsp;-&nbsp;max&nbsp;:&nbsp;연속된&nbsp;max&nbsp;값을&nbsp;가지는&nbsp;해당&nbsp;index에&nbsp;max를&nbsp;빼면&nbsp;시작&nbsp;인덱스를&nbsp;얻을&nbsp;수&nbsp;있다</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"keyword control loop ts\\\"><span>for</span></span><span>&nbsp;</span><span class=\\\"meta brace round ts\\\"><span>(</span></span><span class=\\\"meta var expr ts\\\"><span class=\\\"storage type ts\\\"><span>let</span></span><span>&nbsp;</span><span class=\\\"meta var-single-variable expr ts\\\"><span class=\\\"meta definition variable ts variable other readwrite ts\\\"><span>i</span></span><span>&nbsp;</span></span><span class=\\\"keyword operator assignment ts\\\"><span>=</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>index</span></span><span class=\\\"keyword operator arithmetic ts\\\"><span>-</span></span><span class=\\\"variable other readwrite ts\\\"><span>max</span></span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>i</span></span><span>&nbsp;</span><span class=\\\"keyword operator relational ts\\\"><span>&lt;=</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>max</span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>i</span></span><span class=\\\"keyword operator increment ts\\\"><span>++</span></span><span class=\\\"meta brace round ts\\\"><span>)</span></span><span>&nbsp;</span><span class=\\\"meta block ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>{</span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>str</span></span><span>&nbsp;</span><span class=\\\"keyword operator assignment compound ts\\\"><span>+=</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>word1</span></span><span class=\\\"meta array literal ts\\\"><span class=\\\"meta brace square ts\\\"><span>[</span></span><span class=\\\"variable other readwrite ts\\\"><span>i</span></span><span class=\\\"meta brace square ts\\\"><span>]</span></span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"keyword control flow ts\\\"><span>return</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>str</span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span>&nbsp;</span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function-call ts\\\"><span class=\\\"support class console ts\\\"><span>console</span></span><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"support function console ts\\\"><span>log</span></span></span><span class=\\\"meta brace round ts\\\"><span>(</span></span><span class=\\\"meta function-call ts\\\"><span class=\\\"entity name function ts\\\"><span>Isc</span></span></span><span class=\\\"meta brace round ts\\\"><span>(</span></span><span class=\\\"string quoted single ts\\\"><span class=\\\"punctuation definition string begin ts\\\"><span>&#39;</span></span><span>abbcc</span><span class=\\\"punctuation definition string end ts\\\"><span>&#39;</span></span></span><span class=\\\"punctuation separator comma ts\\\"><span>,</span></span><span>&nbsp;</span><span class=\\\"string quoted single ts\\\"><span class=\\\"punctuation definition string begin ts\\\"><span>&#39;</span></span><span>dbbcc</span><span class=\\\"punctuation definition string end ts\\\"><span>&#39;</span></span></span><span class=\\\"meta brace round ts\\\"><span>)</span><span>)</span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"comment line double-slash ts\\\"><span class=\\\"punctuation definition comment ts\\\"><span>//</span></span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a,&nbsp;b,&nbsp;b,&nbsp;c,&nbsp;c</span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"comment line double-slash ts\\\"><span class=\\\"punctuation definition comment ts\\\"><span>//</span></span><span>&nbsp;0:&nbsp;(6)&nbsp;&nbsp;&nbsp;[0,&nbsp;0,&nbsp;0,&nbsp;0,&nbsp;0,&nbsp;0]</span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"comment line double-slash ts\\\"><span class=\\\"punctuation definition comment ts\\\"><span>//</span></span><span>&nbsp;1:&nbsp;(6)&nbsp;d&nbsp;[0,&nbsp;0,&nbsp;0,&nbsp;0,&nbsp;0,&nbsp;0]</span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"comment line double-slash ts\\\"><span class=\\\"punctuation definition comment ts\\\"><span>//</span></span><span>&nbsp;2:&nbsp;(6)&nbsp;b&nbsp;[0,&nbsp;0,&nbsp;1,&nbsp;1,&nbsp;0,&nbsp;0]</span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"comment line double-slash ts\\\"><span class=\\\"punctuation definition comment ts\\\"><span>//</span></span><span>&nbsp;3:&nbsp;(6)&nbsp;b&nbsp;[0,&nbsp;0,&nbsp;1,&nbsp;2,&nbsp;0,&nbsp;0]</span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"comment line double-slash ts\\\"><span class=\\\"punctuation definition comment ts\\\"><span>//</span></span><span>&nbsp;4:&nbsp;(6)&nbsp;c&nbsp;[0,&nbsp;0,&nbsp;0,&nbsp;0,&nbsp;3,&nbsp;1]</span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"comment line double-slash ts\\\"><span class=\\\"punctuation definition comment ts\\\"><span>//</span></span><span>&nbsp;5:&nbsp;(6)&nbsp;c&nbsp;[0,&nbsp;0,&nbsp;0,&nbsp;0,&nbsp;1,&nbsp;4]</span></span></span></div></pre>\\n<h3>배낭 문제</h3>\\n<h2>탐욕 알고리즘</h2>\\n<ul>\\n<li>문제를 해결하는 좋은 해결책을 찾아가는 기법입니다.</li>\\n</ul>\",\"frontmatter\":{\"title\":\"advanced algorithms\",\"date\":\"May 01, 2020\"}}},\"pathContext\":{\"slug\":\"/hello-algorithms/advanced/\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/hello-algorithms-advanced.json\n// module id = 502\n// module chunks = 30105182649681"],"sourceRoot":""}