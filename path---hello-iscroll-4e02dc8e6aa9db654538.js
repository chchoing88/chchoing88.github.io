webpackJsonp([1317899640025],{510:function(s,a){s.exports={data:{site:{siteMetadata:{title:"Merlin Tec Blog",author:"merlin.ho"}},markdownRemark:{id:"/Users/merlin.ho/Documents/workspace/ho_blog/gatsby-blog/src/pages/hello-iscroll/index.md absPath of file >>> MarkdownRemark",html:'<p>가로 스크롤 구현을 위해 react + typescript + iscroll 썼던 느낀점을 정리하고자 합니다.</p>\n<h2>1. iscroll + typescript</h2>\n<p>첫번째로 맞닥뜨린 문제는 iscroll의 type의 정의가 제대로 안되어 있다는 점이 였습니다.\n<a href="https://www.npmjs.com/package/@types/iscroll">https://www.npmjs.com/package/@types/iscroll</a> 과 같이 타입이 존재합니다.</p>\n<p>하지만 그 타입이 제대로 정의 되어 있지 않습니다.</p>\n<p>따라서 <code>import IScroll from "iscroll";</code> 로 모듈을 <code>import</code> 할 시에 모듈이 아니라는 에러가 나게 됩니다.</p>\n<p>이는 <code>@types/iscroll</code> 에 <code>export</code> 구문이 보이지 않아서 모듈로 인식을 못하고 있는 것처럼 보였습니다.\n(추측이지만 모듈로써 사용하기 보단 script 태그 방식으로 사용하도록 타입이 설계 되어 있는 거 같습니다.)</p>\n<p>하여 폭풍 검색해보니 <a href="https://github.com/DefinitelyTyped/DefinitelyTyped/issues/18554">https://github.com/DefinitelyTyped/DefinitelyTyped/issues/18554</a> 이런 글을 만났었습니다.</p>\n<p>해서 <code>/src/types/iscroll.d.ts</code> 파일에 해당 문구를 넣어주었습니다. 참고로 typescript config시 <code>"baseUrl": "./src"</code> 를 추가했었습니다.</p>\n<p>그리고 실행하면 에러가 사라집니다.</p>\n<h2>2. iscroll 위치 조정</h2>\n<p>새로 고침시 url에 따른 처음 스크롤 위치 조정 또는 탭(메뉴)를 클릭시 클릭한 메뉴가 가운데 오도록 하게 스크롤의 위치를 움직일 필요가 있었다.</p>\n<p>정리하면 다음과 같다.</p>\n<ol>\n<li>새로고침시 해당되는 메뉴가 가운데 오도록 해야한다.</li>\n<li>메뉴 클릭시 클릭당한 메뉴가 가운데 오도록 해야한다.</li>\n</ol>\n<p>1번의 경우에는 iscroll 인스턴스를 생성하기 전에 미리 위치를 계산해서 option 값으로 <code>startX</code> 값을 넣는 방식이 가장 좋아 보였습니다.</p>\n<p>2번의 경우에는 메뉴 클릭시 해당 위치 값을 계산해서 iscroll의 <code>scrollTo</code> 메서드를 사용하도록 했습니다.</p>\n<p>여기서 중요한것은 어느 상황에서나 미리 움직여야 할 위치 값을 구하는것이 중요했습니다.</p>\n<p>준비할 수 있는 값은 두가지 였습니다.</p>\n<ol>\n<li>가로 스크롤을 감싸고 있는 wrapper element</li>\n<li>타게팅이 되는 메뉴 리스트의 index 값</li>\n</ol>\n<p>힌트가 되는 값들을 가지고 내가 움직여야 할 위치를 구하는 코드는 다음과 같습니다.</p>\n<pre class="editor editor-colors"><div class="line"><span class="source ts"><span class="meta function ts"><span class="keyword control export ts"><span>export</span></span><span>&nbsp;</span><span class="storage type function ts"><span>function</span></span><span>&nbsp;</span><span class="meta definition function ts entity name function ts"><span>scrollMoveTo</span></span><span class="meta parameters ts"><span class="punctuation definition parameters begin ts"><span>(</span></span></span></span></span></div><div class="line"><span class="source ts"><span class="meta function ts"><span class="meta parameters ts"><span>&nbsp;&nbsp;</span><span class="variable parameter ts"><span>wrapperElement</span></span><span class="meta type annotation ts"><span class="keyword operator type annotation ts"><span>:</span></span><span>&nbsp;</span><span class="entity name type ts"><span>HTMLDivElement</span></span></span><span class="punctuation separator parameter ts"><span>,</span></span></span></span></span></div><div class="line"><span class="source ts"><span class="meta function ts"><span class="meta parameters ts"><span>&nbsp;&nbsp;</span><span class="variable parameter ts"><span>currentIndex</span></span><span class="meta type annotation ts"><span class="keyword operator type annotation ts"><span>:</span></span><span>&nbsp;</span><span class="support type primitive ts"><span>number</span></span></span></span></span></span></div><div class="line"><span class="source ts"><span class="meta function ts"><span class="meta parameters ts"><span class="punctuation definition parameters end ts"><span>)</span></span></span><span>&nbsp;</span><span class="meta block ts"><span class="punctuation definition block ts"><span>{</span></span></span></span></span></div><div class="line"><span class="source ts"><span class="meta function ts"><span class="meta block ts"><span>&nbsp;&nbsp;</span><span class="meta var expr ts"><span class="storage type ts"><span>let</span></span><span>&nbsp;</span><span class="meta var-single-variable expr ts"><span class="meta definition variable ts variable other readwrite ts"><span>startX</span></span><span>&nbsp;</span></span><span class="keyword operator assignment ts"><span>=</span></span><span>&nbsp;</span><span class="constant numeric decimal ts"><span>0</span></span></span><span class="punctuation terminator statement ts"><span>;</span></span></span></span></span></div><div class="line"><span class="source ts"><span class="meta function ts"><span class="meta block ts"><span>&nbsp;</span></span></span></span></div><div class="line"><span class="source ts"><span class="meta function ts"><span class="meta block ts"><span>&nbsp;&nbsp;</span><span class="keyword control conditional ts"><span>if</span></span><span>&nbsp;</span><span class="meta brace round ts"><span>(</span></span><span class="variable other readwrite ts"><span>currentIndex</span></span><span>&nbsp;</span><span class="keyword operator relational ts"><span>&gt;</span></span><span>&nbsp;</span><span class="keyword operator arithmetic ts"><span>-</span></span><span class="constant numeric decimal ts"><span>1</span></span><span class="meta brace round ts"><span>)</span></span><span>&nbsp;</span><span class="meta block ts"><span class="punctuation definition block ts"><span>{</span></span></span></span></span></span></div><div class="line"><span class="source ts"><span class="meta function ts"><span class="meta block ts"><span class="meta block ts"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="meta var expr ts"><span class="storage type ts"><span>const</span></span><span>&nbsp;</span><span class="meta var-single-variable expr ts"><span class="meta definition variable ts variable other readwrite ts"><span>wrapperWidth</span></span><span>&nbsp;</span></span><span class="keyword operator assignment ts"><span>=</span></span><span>&nbsp;</span><span class="variable other object ts"><span>wrapperElement</span></span><span class="punctuation accessor ts"><span>.</span></span><span class="variable other property ts"><span>offsetWidth</span></span></span><span class="punctuation terminator statement ts"><span>;</span></span></span></span></span></span></div><div class="line"><span class="source ts"><span class="meta function ts"><span class="meta block ts"><span class="meta block ts"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="meta var expr ts"><span class="storage type ts"><span>const</span></span><span>&nbsp;</span><span class="meta var-single-variable expr ts"><span class="meta definition variable ts variable other readwrite ts"><span>wrapperMidPos</span></span><span>&nbsp;</span></span><span class="keyword operator assignment ts"><span>=</span></span><span>&nbsp;</span><span class="variable other readwrite ts"><span>wrapperWidth</span></span><span>&nbsp;</span><span class="keyword operator arithmetic ts"><span>/</span></span><span>&nbsp;</span><span class="constant numeric decimal ts"><span>2</span></span></span><span class="punctuation terminator statement ts"><span>;</span></span></span></span></span></span></div><div class="line"><span class="source ts"><span class="meta function ts"><span class="meta block ts"><span class="meta block ts"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="meta var expr ts"><span class="storage type ts"><span>const</span></span><span>&nbsp;</span><span class="meta var-single-variable expr ts"><span class="meta definition variable ts variable other readwrite ts"><span>wrapperLeftOffset</span></span><span>&nbsp;</span></span><span class="keyword operator assignment ts"><span>=</span></span><span>&nbsp;</span><span class="variable other object ts"><span>wrapperElement</span></span><span class="punctuation accessor ts"><span>.</span></span><span class="variable other property ts"><span>offsetLeft</span></span></span><span class="punctuation terminator statement ts"><span>;</span></span></span></span></span></span></div><div class="line"><span class="source ts"><span class="meta function ts"><span class="meta block ts"><span class="meta block ts"><span>&nbsp;</span></span></span></span></span></div><div class="line"><span class="source ts"><span class="meta function ts"><span class="meta block ts"><span class="meta block ts"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="meta var expr ts"><span class="storage type ts"><span>const</span></span><span>&nbsp;</span><span class="meta var-single-variable expr ts"><span class="meta definition variable ts variable other readwrite ts"><span>$elemCurrentMenu</span></span><span>&nbsp;</span></span><span class="keyword operator assignment ts"><span>=</span></span><span>&nbsp;</span><span class="variable other object ts"><span>wrapperElement</span></span><span class="punctuation accessor ts"><span>.</span></span><span class="variable other property ts"><span>children</span></span><span class="meta array literal ts"><span class="meta brace square ts"><span>[</span></span><span class="constant numeric decimal ts"><span>0</span></span><span class="meta brace square ts"><span>]</span></span></span><span class="punctuation accessor ts"><span>.</span></span><span class="variable other property ts"><span>children</span></span><span class="meta array literal ts"><span class="meta brace square ts"><span>[</span></span></span></span></span></span></span></span></div><div class="line"><span class="source ts"><span class="meta function ts"><span class="meta block ts"><span class="meta block ts"><span class="meta var expr ts"><span class="meta array literal ts"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="variable other readwrite ts"><span>currentIndex</span></span></span></span></span></span></span></span></div><div class="line"><span class="source ts"><span class="meta function ts"><span class="meta block ts"><span class="meta block ts"><span class="meta var expr ts"><span class="meta array literal ts"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="meta brace square ts"><span>]</span></span></span><span>&nbsp;</span><span class="keyword control as ts"><span>as</span></span><span>&nbsp;</span><span class="entity name type ts"><span>HTMLLIElement</span></span></span><span class="punctuation terminator statement ts"><span>;</span></span><span>&nbsp;</span><span class="comment line double-slash ts"><span class="punctuation definition comment ts"><span>//</span></span><span>&nbsp;div&nbsp;&gt;&nbsp;ul&nbsp;&gt;&nbsp;li를&nbsp;구하기&nbsp;위해서...</span></span></span></span></span></span></div><div class="line"><span class="source ts"><span class="meta function ts"><span class="meta block ts"><span class="meta block ts"><span class="punctuation whitespace comment leading ts"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="comment line double-slash ts"><span class="punctuation definition comment ts"><span>//</span></span><span>&nbsp;여기에&nbsp;if&nbsp;분기를&nbsp;추가하면&nbsp;더&nbsp;좋을&nbsp;듯&nbsp;싶습니다.</span></span></span></span></span></span></div><div class="line"><span class="source ts"><span class="meta function ts"><span class="meta block ts"><span class="meta block ts"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="meta var expr ts"><span class="storage type ts"><span>const</span></span><span>&nbsp;</span><span class="meta var-single-variable expr ts"><span class="meta definition variable ts variable other readwrite ts"><span>$elemMenuWrapperWidth</span></span><span>&nbsp;</span></span><span class="keyword operator assignment ts"><span>=</span></span><span>&nbsp;</span><span class="meta brace round ts"><span>(</span></span><span class="variable other readwrite ts"><span>wrapperElement</span></span></span></span></span></span></span></div><div class="line"><span class="source ts"><span class="meta function ts"><span class="meta block ts"><span class="meta block ts"><span class="meta var expr ts"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="punctuation accessor ts"><span>.</span></span><span class="variable other property ts"><span>children</span></span><span class="meta array literal ts"><span class="meta brace square ts"><span>[</span></span><span class="constant numeric decimal ts"><span>0</span></span><span class="meta brace square ts"><span>]</span></span></span><span>&nbsp;</span><span class="keyword control as ts"><span>as</span></span><span>&nbsp;</span><span class="entity name type ts"><span>HTMLUListElement</span></span><span class="meta brace round ts"><span>)</span></span><span class="punctuation accessor ts"><span>.</span></span><span class="variable other property ts"><span>offsetWidth</span></span></span><span class="punctuation terminator statement ts"><span>;</span></span></span></span></span></span></div><div class="line"><span class="source ts"><span class="meta function ts"><span class="meta block ts"><span class="meta block ts"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="meta var expr ts"><span class="storage type ts"><span>const</span></span><span>&nbsp;</span><span class="meta var-single-variable expr ts"><span class="meta definition variable ts variable other readwrite ts"><span>currenttMidWidth</span></span><span>&nbsp;</span></span><span class="keyword operator assignment ts"><span>=</span></span><span>&nbsp;</span><span class="variable other object ts"><span>$elemCurrentMenu</span></span><span class="punctuation accessor ts"><span>.</span></span><span class="variable other property ts"><span>offsetWidth</span></span><span>&nbsp;</span><span class="keyword operator arithmetic ts"><span>/</span></span><span>&nbsp;</span><span class="constant numeric decimal ts"><span>2</span></span></span><span class="punctuation terminator statement ts"><span>;</span></span></span></span></span></span></div><div class="line"><span class="source ts"><span class="meta function ts"><span class="meta block ts"><span class="meta block ts"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="meta var expr ts"><span class="storage type ts"><span>const</span></span><span>&nbsp;</span><span class="meta var-single-variable expr ts"><span class="meta definition variable ts variable other readwrite ts"><span>currentLeftOffset</span></span><span>&nbsp;</span></span><span class="keyword operator assignment ts"><span>=</span></span><span>&nbsp;</span><span class="variable other object ts"><span>$elemCurrentMenu</span></span><span class="punctuation accessor ts"><span>.</span></span><span class="variable other property ts"><span>offsetLeft</span></span></span><span class="punctuation terminator statement ts"><span>;</span></span></span></span></span></span></div><div class="line"><span class="source ts"><span class="meta function ts"><span class="meta block ts"><span class="meta block ts"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="meta var expr ts"><span class="storage type ts"><span>const</span></span><span>&nbsp;</span><span class="meta var-single-variable expr ts"><span class="meta definition variable ts variable other readwrite ts"><span>maxWidth</span></span><span>&nbsp;</span></span><span class="keyword operator assignment ts"><span>=</span></span><span>&nbsp;</span><span class="variable other readwrite ts"><span>$elemMenuWrapperWidth</span></span><span>&nbsp;</span><span class="keyword operator arithmetic ts"><span>-</span></span><span>&nbsp;</span><span class="variable other readwrite ts"><span>wrapperWidth</span></span></span><span class="punctuation terminator statement ts"><span>;</span></span></span></span></span></span></div><div class="line"><span class="source ts"><span class="meta function ts"><span class="meta block ts"><span class="meta block ts"><span>&nbsp;</span></span></span></span></span></div><div class="line"><span class="source ts"><span class="meta function ts"><span class="meta block ts"><span class="meta block ts"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="variable other readwrite ts"><span>startX</span></span><span>&nbsp;</span><span class="keyword operator assignment ts"><span>=</span></span></span></span></span></span></div><div class="line"><span class="source ts"><span class="meta function ts"><span class="meta block ts"><span class="meta block ts"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="variable other readwrite ts"><span>wrapperLeftOffset</span></span><span>&nbsp;</span><span class="keyword operator arithmetic ts"><span>-</span></span><span>&nbsp;</span><span class="variable other readwrite ts"><span>currentLeftOffset</span></span><span>&nbsp;</span><span class="keyword operator arithmetic ts"><span>+</span></span><span>&nbsp;</span><span class="variable other readwrite ts"><span>wrapperMidPos</span></span><span>&nbsp;</span><span class="keyword operator arithmetic ts"><span>-</span></span><span>&nbsp;</span><span class="variable other readwrite ts"><span>currenttMidWidth</span></span><span class="punctuation terminator statement ts"><span>;</span></span></span></span></span></span></div><div class="line"><span class="source ts"><span class="meta function ts"><span class="meta block ts"><span class="meta block ts"><span>&nbsp;</span></span></span></span></span></div><div class="line"><span class="source ts"><span class="meta function ts"><span class="meta block ts"><span class="meta block ts"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control conditional ts"><span>if</span></span><span>&nbsp;</span><span class="meta brace round ts"><span>(</span></span><span class="variable other readwrite ts"><span>startX</span></span><span>&nbsp;</span><span class="keyword operator relational ts"><span>&gt;</span></span><span>&nbsp;</span><span class="constant numeric decimal ts"><span>0</span></span><span class="meta brace round ts"><span>)</span></span><span>&nbsp;</span><span class="meta block ts"><span class="punctuation definition block ts"><span>{</span></span></span></span></span></span></span></div><div class="line"><span class="source ts"><span class="meta function ts"><span class="meta block ts"><span class="meta block ts"><span class="meta block ts"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="variable other readwrite ts"><span>startX</span></span><span>&nbsp;</span><span class="keyword operator assignment ts"><span>=</span></span><span>&nbsp;</span><span class="constant numeric decimal ts"><span>0</span></span><span class="punctuation terminator statement ts"><span>;</span></span></span></span></span></span></span></div><div class="line"><span class="source ts"><span class="meta function ts"><span class="meta block ts"><span class="meta block ts"><span class="meta block ts"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="punctuation definition block ts"><span>}</span></span></span><span>&nbsp;</span><span class="keyword control conditional ts"><span>else</span></span><span>&nbsp;</span><span class="keyword control conditional ts"><span>if</span></span><span>&nbsp;</span><span class="meta brace round ts"><span>(</span></span><span class="variable other readwrite ts"><span>startX</span></span><span>&nbsp;</span><span class="keyword operator relational ts"><span>&lt;</span></span><span>&nbsp;</span><span class="keyword operator arithmetic ts"><span>-</span></span><span class="variable other readwrite ts"><span>maxWidth</span></span><span class="meta brace round ts"><span>)</span></span><span>&nbsp;</span><span class="meta block ts"><span class="punctuation definition block ts"><span>{</span></span></span></span></span></span></span></div><div class="line"><span class="source ts"><span class="meta function ts"><span class="meta block ts"><span class="meta block ts"><span class="meta block ts"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="variable other readwrite ts"><span>startX</span></span><span>&nbsp;</span><span class="keyword operator assignment ts"><span>=</span></span><span>&nbsp;</span><span class="keyword operator arithmetic ts"><span>-</span></span><span class="variable other readwrite ts"><span>maxWidth</span></span><span class="punctuation terminator statement ts"><span>;</span></span></span></span></span></span></span></div><div class="line"><span class="source ts"><span class="meta function ts"><span class="meta block ts"><span class="meta block ts"><span class="meta block ts"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="punctuation definition block ts"><span>}</span></span></span></span></span></span></span></div><div class="line"><span class="source ts"><span class="meta function ts"><span class="meta block ts"><span class="meta block ts"><span>&nbsp;&nbsp;</span><span class="punctuation definition block ts"><span>}</span></span></span></span></span></span></div><div class="line"><span class="source ts"><span class="meta function ts"><span class="meta block ts"><span>&nbsp;</span></span></span></span></div><div class="line"><span class="source ts"><span class="meta function ts"><span class="meta block ts"><span>&nbsp;&nbsp;</span><span class="keyword control flow ts"><span>return</span></span><span>&nbsp;</span><span class="variable other readwrite ts"><span>startX</span></span><span class="punctuation terminator statement ts"><span>;</span></span></span></span></span></div><div class="line"><span class="source ts"><span class="meta function ts"><span class="meta block ts"><span class="punctuation definition block ts"><span>}</span></span></span></span></span></div></pre>\n<p>코드에서 계산하는 것은 다음과 같습니다.</p>\n<ol>\n<li>wrapper element의 가운데 위치를 구합니다.</li>\n<li>wrapper의 children에서 해당 index의 element를 구합니다. (target element)</li>\n<li>wrapper element 의 offset left 값과 target element 의 offset left 의 차이를 구합니다. (wrapper element에서 부터 target element가 얼마만큼 떨어져 있는지 알기 위해서)</li>\n<li>wrapper element의 중간 값에 target element left 값이 얼마만큼 다가가야 하는지 구합니다.</li>\n<li>targetl element의 width의 반값 만큼 다시 이동을 시켜줍니다.</li>\n</ol>\n<h2>커스텀 훅</h2>\n<p>iscroll을 관리 하는 커스텀 훅을 만들어 보았습니다.</p>\n<pre class="editor editor-colors"><div class="line"><span class="source ts"><span class="meta import ts"><span class="keyword control import ts"><span>import</span></span><span>&nbsp;</span><span class="variable other readwrite alias ts"><span>React</span></span><span class="punctuation separator comma ts"><span>,</span></span><span>&nbsp;</span><span class="meta block ts"><span class="punctuation definition block ts"><span>{</span></span><span>&nbsp;</span><span class="variable other readwrite alias ts"><span>useEffect</span></span><span class="punctuation separator comma ts"><span>,</span></span><span>&nbsp;</span><span class="variable other readwrite alias ts"><span>useRef</span></span><span>&nbsp;</span><span class="punctuation definition block ts"><span>}</span></span></span><span>&nbsp;</span><span class="keyword control from ts"><span>from</span></span><span>&nbsp;</span><span class="string quoted double ts"><span class="punctuation definition string begin ts"><span>&quot;</span></span><span>react</span><span class="punctuation definition string end ts"><span>&quot;</span></span></span></span><span class="punctuation terminator statement ts"><span>;</span></span></span></div><div class="line"><span class="source ts"><span class="meta import ts"><span class="keyword control import ts"><span>import</span></span><span>&nbsp;</span><span class="variable other readwrite alias ts"><span>IScroll</span></span><span>&nbsp;</span><span class="keyword control from ts"><span>from</span></span><span>&nbsp;</span><span class="string quoted double ts"><span class="punctuation definition string begin ts"><span>&quot;</span></span><span>iscroll</span><span class="punctuation definition string end ts"><span>&quot;</span></span></span></span><span class="punctuation terminator statement ts"><span>;</span></span></span></div><div class="line"><span class="source ts"><span class="meta import ts"><span class="keyword control import ts"><span>import</span></span><span>&nbsp;</span><span class="meta block ts"><span class="punctuation definition block ts"><span>{</span></span><span>&nbsp;</span><span class="variable other readwrite alias ts"><span>scrollMoveTo</span></span><span>&nbsp;</span><span class="punctuation definition block ts"><span>}</span></span></span><span>&nbsp;</span><span class="keyword control from ts"><span>from</span></span><span>&nbsp;</span><span class="string quoted double ts"><span class="punctuation definition string begin ts"><span>&quot;</span></span><span>utils</span><span class="punctuation definition string end ts"><span>&quot;</span></span></span></span><span class="punctuation terminator statement ts"><span>;</span></span></span></div><div class="line"><span class="source ts"><span>&nbsp;</span></span></div><div class="line"><span class="source ts"><span class="meta function ts"><span class="storage type function ts"><span>function</span></span><span>&nbsp;</span><span class="meta definition function ts entity name function ts"><span>useIScroll</span></span><span class="meta parameters ts"><span class="punctuation definition parameters begin ts"><span>(</span></span></span></span></span></div><div class="line"><span class="source ts"><span class="meta function ts"><span class="meta parameters ts"><span>&nbsp;&nbsp;</span><span class="variable parameter ts"><span>ref</span></span><span class="meta type annotation ts"><span class="keyword operator type annotation ts"><span>:</span></span><span>&nbsp;</span><span class="entity name type module ts"><span>React</span></span><span class="punctuation accessor ts"><span>.</span></span><span class="entity name type ts"><span>RefObject</span></span><span class="meta type parameters ts"><span class="punctuation definition typeparameters begin ts"><span>&lt;</span></span><span class="entity name type ts"><span>HTMLDivElement</span></span><span class="punctuation definition typeparameters end ts"><span>&gt;</span></span></span></span><span class="punctuation separator parameter ts"><span>,</span></span></span></span></span></div><div class="line"><span class="source ts"><span class="meta function ts"><span class="meta parameters ts"><span>&nbsp;&nbsp;</span><span class="variable parameter ts"><span>currentIndex</span></span><span class="meta type annotation ts"><span class="keyword operator type annotation ts"><span>:</span></span><span>&nbsp;</span><span class="support type primitive ts"><span>number</span></span></span></span></span></span></div><div class="line"><span class="source ts"><span class="meta function ts"><span class="meta parameters ts"><span class="punctuation definition parameters end ts"><span>)</span></span></span><span>&nbsp;</span><span class="meta block ts"><span class="punctuation definition block ts"><span>{</span></span></span></span></span></div><div class="line"><span class="source ts"><span class="meta function ts"><span class="meta block ts"><span>&nbsp;&nbsp;</span><span class="meta var expr ts"><span class="storage type ts"><span>const</span></span><span>&nbsp;</span><span class="meta var-single-variable expr ts"><span class="meta definition variable ts variable other readwrite ts"><span>iScroll</span></span><span>&nbsp;</span></span><span class="keyword operator assignment ts"><span>=</span></span><span>&nbsp;</span><span class="meta function-call ts"><span class="entity name function ts"><span>useRef</span></span></span><span class="meta type parameters ts"><span class="punctuation definition typeparameters begin ts"><span>&lt;</span></span><span class="entity name type ts"><span>IScroll</span></span><span>&nbsp;</span><span class="keyword operator type ts"><span>|</span></span><span>&nbsp;</span><span class="support type builtin ts"><span>null</span></span><span class="punctuation definition typeparameters end ts"><span>&gt;</span></span></span><span class="meta brace round ts"><span>(</span></span><span class="constant language null ts"><span>null</span></span><span class="meta brace round ts"><span>)</span></span></span><span class="punctuation terminator statement ts"><span>;</span></span></span></span></span></div><div class="line"><span class="source ts"><span class="meta function ts"><span class="meta block ts"><span>&nbsp;&nbsp;</span><span class="meta var expr ts"><span class="storage type ts"><span>const</span></span><span>&nbsp;</span><span class="meta var-single-variable expr ts"><span class="meta definition variable ts variable other readwrite ts"><span>initIndex</span></span><span>&nbsp;</span></span><span class="keyword operator assignment ts"><span>=</span></span><span>&nbsp;</span><span class="meta function-call ts"><span class="entity name function ts"><span>useRef</span></span></span><span class="meta type parameters ts"><span class="punctuation definition typeparameters begin ts"><span>&lt;</span></span><span class="support type primitive ts"><span>number</span></span><span class="punctuation definition typeparameters end ts"><span>&gt;</span></span></span><span class="meta brace round ts"><span>(</span></span><span class="variable other readwrite ts"><span>currentIndex</span></span><span class="meta brace round ts"><span>)</span></span></span><span class="punctuation terminator statement ts"><span>;</span></span></span></span></span></div><div class="line"><span class="source ts"><span class="meta function ts"><span class="meta block ts"><span>&nbsp;</span></span></span></span></div><div class="line"><span class="source ts"><span class="meta function ts"><span class="meta block ts"><span>&nbsp;&nbsp;</span><span class="meta function-call ts"><span class="entity name function ts"><span>useEffect</span></span></span><span class="meta brace round ts"><span>(</span></span><span class="meta arrow ts"><span class="meta parameters ts"><span class="punctuation definition parameters begin ts"><span>(</span></span><span class="punctuation definition parameters end ts"><span>)</span></span></span><span>&nbsp;</span><span class="storage type function arrow ts"><span>=&gt;</span></span><span>&nbsp;</span><span class="meta block ts"><span class="punctuation definition block ts"><span>{</span></span></span></span></span></span></span></div><div class="line"><span class="source ts"><span class="meta function ts"><span class="meta block ts"><span class="meta arrow ts"><span class="meta block ts"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control conditional ts"><span>if</span></span><span>&nbsp;</span><span class="meta brace round ts"><span>(</span></span><span class="keyword operator logical ts"><span>!</span></span><span class="variable other object ts"><span>iScroll</span></span><span class="punctuation accessor ts"><span>.</span></span><span class="support variable property dom ts"><span>current</span></span><span class="meta brace round ts"><span>)</span></span><span>&nbsp;</span><span class="meta block ts"><span class="punctuation definition block ts"><span>{</span></span></span></span></span></span></span></span></div><div class="line"><span class="source ts"><span class="meta function ts"><span class="meta block ts"><span class="meta arrow ts"><span class="meta block ts"><span class="meta block ts"><span class="punctuation whitespace comment leading ts"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="comment line double-slash ts"><span class="punctuation definition comment ts"><span>//</span></span><span>&nbsp;wrapper&nbsp;width</span></span></span></span></span></span></span></span></div><div class="line"><span class="source ts"><span class="meta function ts"><span class="meta block ts"><span class="meta arrow ts"><span class="meta block ts"><span class="meta block ts"><span class="punctuation whitespace comment leading ts"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="comment line double-slash ts"><span class="punctuation definition comment ts"><span>//</span></span><span>&nbsp;console.dir(ref.current);</span></span></span></span></span></span></span></span></div><div class="line"><span class="source ts"><span class="meta function ts"><span class="meta block ts"><span class="meta arrow ts"><span class="meta block ts"><span class="meta block ts"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control conditional ts"><span>if</span></span><span>&nbsp;</span><span class="meta brace round ts"><span>(</span></span><span class="variable other object ts"><span>ref</span></span><span class="punctuation accessor ts"><span>.</span></span><span class="support variable property dom ts"><span>current</span></span><span class="meta brace round ts"><span>)</span></span><span>&nbsp;</span><span class="meta block ts"><span class="punctuation definition block ts"><span>{</span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source ts"><span class="meta function ts"><span class="meta block ts"><span class="meta arrow ts"><span class="meta block ts"><span class="meta block ts"><span class="meta block ts"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="meta var expr ts"><span class="storage type ts"><span>const</span></span><span>&nbsp;</span><span class="meta var-single-variable expr ts"><span class="meta definition variable ts variable other readwrite ts"><span>wrapperElement</span></span><span>&nbsp;</span></span><span class="keyword operator assignment ts"><span>=</span></span><span>&nbsp;</span><span class="variable other object ts"><span>ref</span></span><span class="punctuation accessor ts"><span>.</span></span><span class="support variable property dom ts"><span>current</span></span></span><span class="punctuation terminator statement ts"><span>;</span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source ts"><span class="meta function ts"><span class="meta block ts"><span class="meta arrow ts"><span class="meta block ts"><span class="meta block ts"><span class="meta block ts"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="meta var expr ts"><span class="storage type ts"><span>const</span></span><span>&nbsp;</span><span class="meta var-single-variable expr ts"><span class="meta definition variable ts variable other readwrite ts"><span>wrapperId</span></span><span>&nbsp;</span></span><span class="keyword operator assignment ts"><span>=</span></span><span>&nbsp;</span><span class="variable other object ts"><span>wrapperElement</span></span><span class="punctuation accessor ts"><span>.</span></span><span class="support variable property dom ts"><span>id</span></span></span><span class="punctuation terminator statement ts"><span>;</span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source ts"><span class="meta function ts"><span class="meta block ts"><span class="meta arrow ts"><span class="meta block ts"><span class="meta block ts"><span class="meta block ts"><span>&nbsp;</span></span></span></span></span></span></span></span></div><div class="line"><span class="source ts"><span class="meta function ts"><span class="meta block ts"><span class="meta arrow ts"><span class="meta block ts"><span class="meta block ts"><span class="meta block ts"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="meta var expr ts"><span class="storage type ts"><span>const</span></span><span>&nbsp;</span><span class="meta var-single-variable expr ts"><span class="meta definition variable ts variable other readwrite ts"><span>startX</span></span><span>&nbsp;</span></span><span class="keyword operator assignment ts"><span>=</span></span><span>&nbsp;</span><span class="meta function-call ts"><span class="entity name function ts"><span>scrollMoveTo</span></span></span><span class="meta brace round ts"><span>(</span></span><span class="variable other readwrite ts"><span>wrapperElement</span></span><span class="punctuation separator comma ts"><span>,</span></span><span>&nbsp;</span><span class="variable other object ts"><span>initIndex</span></span><span class="punctuation accessor ts"><span>.</span></span><span class="support variable property dom ts"><span>current</span></span><span class="meta brace round ts"><span>)</span></span></span><span class="punctuation terminator statement ts"><span>;</span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source ts"><span class="meta function ts"><span class="meta block ts"><span class="meta arrow ts"><span class="meta block ts"><span class="meta block ts"><span class="meta block ts"><span>&nbsp;</span></span></span></span></span></span></span></span></div><div class="line"><span class="source ts"><span class="meta function ts"><span class="meta block ts"><span class="meta arrow ts"><span class="meta block ts"><span class="meta block ts"><span class="meta block ts"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="variable other object ts"><span>iScroll</span></span><span class="punctuation accessor ts"><span>.</span></span><span class="support variable property dom ts"><span>current</span></span><span>&nbsp;</span><span class="keyword operator assignment ts"><span>=</span></span><span>&nbsp;</span><span class="new expr ts"><span class="keyword operator new ts"><span>new</span></span><span>&nbsp;</span><span class="entity name type ts"><span>IScroll</span></span><span class="meta brace round ts"><span>(</span></span><span class="string template ts"><span class="punctuation definition string template begin ts"><span>`</span></span><span>#</span><span class="meta template expression ts"><span class="punctuation definition template-expression begin ts"><span>${</span></span><span class="meta embedded line ts"><span class="variable other readwrite ts"><span>wrapperId</span></span></span><span class="punctuation definition template-expression end ts"><span>}</span></span></span><span class="punctuation definition string template end ts"><span>`</span></span></span><span class="punctuation separator comma ts"><span>,</span></span><span>&nbsp;</span><span class="meta objectliteral ts"><span class="punctuation definition block ts"><span>{</span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source ts"><span class="meta function ts"><span class="meta block ts"><span class="meta arrow ts"><span class="meta block ts"><span class="meta block ts"><span class="meta block ts"><span class="new expr ts"><span class="meta objectliteral ts"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="meta object member ts"><span class="meta object-literal key ts"><span>scrollX</span></span><span class="meta object-literal key ts punctuation separator key-value ts"><span>:</span></span><span>&nbsp;</span><span class="constant language boolean true ts"><span>true</span></span></span><span class="punctuation separator comma ts"><span>,</span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source ts"><span class="meta function ts"><span class="meta block ts"><span class="meta arrow ts"><span class="meta block ts"><span class="meta block ts"><span class="meta block ts"><span class="new expr ts"><span class="meta objectliteral ts"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="meta object member ts"><span class="variable other readwrite ts"><span>startX</span></span></span><span class="punctuation separator comma ts"><span>,</span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source ts"><span class="meta function ts"><span class="meta block ts"><span class="meta arrow ts"><span class="meta block ts"><span class="meta block ts"><span class="meta block ts"><span class="new expr ts"><span class="meta objectliteral ts"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="meta object member ts"><span class="meta object-literal key ts"><span>scrollY</span></span><span class="meta object-literal key ts punctuation separator key-value ts"><span>:</span></span><span>&nbsp;</span><span class="constant language boolean false ts"><span>false</span></span></span><span class="punctuation separator comma ts"><span>,</span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source ts"><span class="meta function ts"><span class="meta block ts"><span class="meta arrow ts"><span class="meta block ts"><span class="meta block ts"><span class="meta block ts"><span class="new expr ts"><span class="meta objectliteral ts"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="meta object member ts"><span class="meta object-literal key ts"><span>disablePointer</span></span><span class="meta object-literal key ts punctuation separator key-value ts"><span>:</span></span><span>&nbsp;</span><span class="constant language boolean true ts"><span>true</span></span></span><span class="punctuation separator comma ts"><span>,</span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source ts"><span class="meta function ts"><span class="meta block ts"><span class="meta arrow ts"><span class="meta block ts"><span class="meta block ts"><span class="meta block ts"><span class="new expr ts"><span class="meta objectliteral ts"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="meta object member ts"><span class="meta object-literal key ts"><span>disableTouch</span></span><span class="meta object-literal key ts punctuation separator key-value ts"><span>:</span></span><span>&nbsp;</span><span class="constant language boolean false ts"><span>false</span></span></span><span class="punctuation separator comma ts"><span>,</span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source ts"><span class="meta function ts"><span class="meta block ts"><span class="meta arrow ts"><span class="meta block ts"><span class="meta block ts"><span class="meta block ts"><span class="new expr ts"><span class="meta objectliteral ts"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="meta object member ts"><span class="meta object-literal key ts"><span>disableMouse</span></span><span class="meta object-literal key ts punctuation separator key-value ts"><span>:</span></span><span>&nbsp;</span><span class="constant language boolean false ts"><span>false</span></span></span><span class="punctuation separator comma ts"><span>,</span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source ts"><span class="meta function ts"><span class="meta block ts"><span class="meta arrow ts"><span class="meta block ts"><span class="meta block ts"><span class="meta block ts"><span class="new expr ts"><span class="meta objectliteral ts"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="meta object member ts"><span class="meta object-literal key ts"><span>preventDefault</span></span><span class="meta object-literal key ts punctuation separator key-value ts"><span>:</span></span><span>&nbsp;</span><span class="constant language boolean false ts"><span>false</span></span></span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source ts"><span class="meta function ts"><span class="meta block ts"><span class="meta arrow ts"><span class="meta block ts"><span class="meta block ts"><span class="meta block ts"><span class="new expr ts"><span class="meta objectliteral ts"><span class="meta object member ts"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="punctuation definition block ts"><span>}</span></span></span><span class="meta brace round ts"><span>)</span></span></span><span class="punctuation terminator statement ts"><span>;</span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source ts"><span class="meta function ts"><span class="meta block ts"><span class="meta arrow ts"><span class="meta block ts"><span class="meta block ts"><span class="meta block ts"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="punctuation definition block ts"><span>}</span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source ts"><span class="meta function ts"><span class="meta block ts"><span class="meta arrow ts"><span class="meta block ts"><span class="meta block ts"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="punctuation definition block ts"><span>}</span></span></span></span></span></span></span></span></div><div class="line"><span class="source ts"><span class="meta function ts"><span class="meta block ts"><span class="meta arrow ts"><span class="meta block ts"><span>&nbsp;</span></span></span></span></span></span></div><div class="line"><span class="source ts"><span class="meta function ts"><span class="meta block ts"><span class="meta arrow ts"><span class="meta block ts"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control flow ts"><span>return</span></span><span class="meta arrow ts"><span>&nbsp;</span><span class="meta parameters ts"><span class="punctuation definition parameters begin ts"><span>(</span></span><span class="punctuation definition parameters end ts"><span>)</span></span></span><span>&nbsp;</span><span class="storage type function arrow ts"><span>=&gt;</span></span><span>&nbsp;</span><span class="meta block ts"><span class="punctuation definition block ts"><span>{</span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source ts"><span class="meta function ts"><span class="meta block ts"><span class="meta arrow ts"><span class="meta block ts"><span class="meta arrow ts"><span class="meta block ts"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control conditional ts"><span>if</span></span><span>&nbsp;</span><span class="meta brace round ts"><span>(</span></span><span class="variable other object ts"><span>iScroll</span></span><span class="punctuation accessor ts"><span>.</span></span><span class="support variable property dom ts"><span>current</span></span><span class="meta brace round ts"><span>)</span></span><span>&nbsp;</span><span class="meta block ts"><span class="punctuation definition block ts"><span>{</span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source ts"><span class="meta function ts"><span class="meta block ts"><span class="meta arrow ts"><span class="meta block ts"><span class="meta arrow ts"><span class="meta block ts"><span class="meta block ts"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="meta function-call ts"><span class="variable other object ts"><span>iScroll</span></span><span class="punctuation accessor ts"><span>.</span></span><span class="support variable property dom ts"><span>current</span></span><span class="punctuation accessor ts"><span>.</span></span><span class="entity name function ts"><span>destroy</span></span></span><span class="meta brace round ts"><span>(</span><span>)</span></span><span class="punctuation terminator statement ts"><span>;</span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source ts"><span class="meta function ts"><span class="meta block ts"><span class="meta arrow ts"><span class="meta block ts"><span class="meta arrow ts"><span class="meta block ts"><span class="meta block ts"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="variable other object ts"><span>iScroll</span></span><span class="punctuation accessor ts"><span>.</span></span><span class="support variable property dom ts"><span>current</span></span><span>&nbsp;</span><span class="keyword operator assignment ts"><span>=</span></span><span>&nbsp;</span><span class="constant language null ts"><span>null</span></span><span class="punctuation terminator statement ts"><span>;</span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source ts"><span class="meta function ts"><span class="meta block ts"><span class="meta arrow ts"><span class="meta block ts"><span class="meta arrow ts"><span class="meta block ts"><span class="meta block ts"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="punctuation definition block ts"><span>}</span></span></span></span></span></span></span></span></span></span></div><div class="line"><span class="source ts"><span class="meta function ts"><span class="meta block ts"><span class="meta arrow ts"><span class="meta block ts"><span class="meta arrow ts"><span class="meta block ts"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="punctuation definition block ts"><span>}</span></span></span></span><span class="punctuation terminator statement ts"><span>;</span></span></span></span></span></span></span></div><div class="line"><span class="source ts"><span class="meta function ts"><span class="meta block ts"><span class="meta arrow ts"><span class="meta block ts"><span>&nbsp;&nbsp;</span><span class="punctuation definition block ts"><span>}</span></span></span></span><span class="punctuation separator comma ts"><span>,</span></span><span>&nbsp;</span><span class="meta array literal ts"><span class="meta brace square ts"><span>[</span></span><span class="variable other readwrite ts"><span>ref</span></span><span class="meta brace square ts"><span>]</span></span></span><span class="meta brace round ts"><span>)</span></span><span class="punctuation terminator statement ts"><span>;</span></span></span></span></span></div><div class="line"><span class="source ts"><span class="meta function ts"><span class="meta block ts"><span>&nbsp;</span></span></span></span></div><div class="line"><span class="source ts"><span class="meta function ts"><span class="meta block ts"><span>&nbsp;&nbsp;</span><span class="keyword control flow ts"><span>return</span></span><span>&nbsp;</span><span class="variable other object ts"><span>iScroll</span></span><span class="punctuation accessor ts"><span>.</span></span><span class="support variable property dom ts"><span>current</span></span><span class="punctuation terminator statement ts"><span>;</span></span></span></span></span></div><div class="line"><span class="source ts"><span class="meta function ts"><span class="meta block ts"><span class="punctuation definition block ts"><span>}</span></span></span></span></span></div><div class="line"><span class="source ts"><span>&nbsp;</span></span></div><div class="line"><span class="source ts"><span class="meta export default ts"><span class="keyword control export ts"><span>export</span></span><span>&nbsp;</span><span class="keyword control default ts"><span>default</span></span><span>&nbsp;</span><span class="variable other readwrite ts"><span>useIScroll</span></span></span><span class="punctuation terminator statement ts"><span>;</span></span></span></div></pre>\n<p>위 코드에서 주의 할 점은 <code>useEffect</code> 시에 <code>new IScroll</code> 가 마운트시에 한번만 호출 할 수 있도록 변하는 값 (여기서는 <code>currentIndex</code>) 을 useEffect의 디펜던시로 넣어 두면 안된다는 점이였습니다.</p>\n<p>그래서 <code>currentIndex</code> 값을 받아서 <code>useRef</code> 로 초반 값으로 넣어두고 변하지 않도록 처리 했습니다.</p>',
frontmatter:{title:"hello-iScroll",date:"April 04, 2020"}}},pathContext:{slug:"/hello-iscroll/"}}}});
//# sourceMappingURL=path---hello-iscroll-4e02dc8e6aa9db654538.js.map