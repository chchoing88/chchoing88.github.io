{"version":3,"sources":["webpack:///path---hello-webpack-0e285b607382ee417f2f.js","webpack:///./.cache/json/hello-webpack.json"],"names":["webpackJsonp","528","module","exports","data","site","siteMetadata","title","author","markdownRemark","id","html","frontmatter","date","pathContext","slug"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,MAAQC,cAAgBC,MAAA,kBAAAC,OAAA,cAAgDC,gBAAmBC,GAAA,+HAAAC,KAAA;AAAw7oDC,aAAqDL,MAAA,gBAAAM,KAAA,uBAAqDC,aAAgBC,KAAA","file":"path---hello-webpack-0e285b607382ee417f2f.js","sourcesContent":["webpackJsonp([160582500480188],{\n\n/***/ 528:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"title\":\"Merlin Tec Blog\",\"author\":\"merlin.ho\"}},\"markdownRemark\":{\"id\":\"/Users/merlin.ho/Documents/workspace/ho_blog/gatsby-blog/src/pages/hello-webpack/index.md absPath of file >>> MarkdownRemark\",\"html\":\"<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code><span class=\\\"token comment\\\">/**\\n * merlin webpack test init\\n */</span>\\n<span class=\\\"token keyword\\\">var</span> webpack <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'webpack'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">const</span> path <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'path'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\nmodule<span class=\\\"token punctuation\\\">.</span>exports <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token comment\\\">// 파일을 읽어들이기 시작하는 부분.</span>\\n  entry<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n    app<span class=\\\"token punctuation\\\">:</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'./src/a.js'</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token string\\\">'./src/b.js'</span><span class=\\\"token punctuation\\\">]</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  output<span class=\\\"token punctuation\\\">:</span><span class=\\\"token punctuation\\\">{</span>\\n    path<span class=\\\"token punctuation\\\">:</span> path<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">resolve</span><span class=\\\"token punctuation\\\">(</span>__dirname<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'dist'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token comment\\\">// output으로 나올 파일이 저장될 경로..</span>\\n    filename<span class=\\\"token punctuation\\\">:</span><span class=\\\"token string\\\">'[name].js'</span><span class=\\\"token punctuation\\\">,</span>\\n    publicPath<span class=\\\"token punctuation\\\">:</span><span class=\\\"token string\\\">'/'</span> <span class=\\\"token comment\\\">//파일들이 위치할 서버 상의 경로..</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  \\n  module<span class=\\\"token punctuation\\\">:</span><span class=\\\"token punctuation\\\">{</span>\\n    rules<span class=\\\"token punctuation\\\">:</span><span class=\\\"token punctuation\\\">[</span>\\n      <span class=\\\"token punctuation\\\">{</span>\\n        test<span class=\\\"token punctuation\\\">:</span><span class=\\\"token regex\\\">/\\\\.jsx?$/</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token comment\\\">// 정규식조건에 부합하는 파일들을 loader에 지정한 로더가 컴파일 해줍니다...</span>\\n        loader<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'babel-loader'</span><span class=\\\"token punctuation\\\">,</span>\\n        options<span class=\\\"token punctuation\\\">:</span><span class=\\\"token punctuation\\\">{</span>\\n          presets<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'es2015'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'stage-0'</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n        exclude<span class=\\\"token punctuation\\\">:</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'./node_modules'</span><span class=\\\"token punctuation\\\">]</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token punctuation\\\">{</span>\\n        test<span class=\\\"token punctuation\\\">:</span><span class=\\\"token regex\\\">/\\\\.css$/</span><span class=\\\"token punctuation\\\">,</span>\\n        use<span class=\\\"token punctuation\\\">:</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'style-loader'</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token string\\\">'css-loader'</span><span class=\\\"token punctuation\\\">]</span> <span class=\\\"token comment\\\">// loader로 써도 된다... css-loader로 처리한뒤 그것을 style-loader로 한번 더 처리.</span>\\n      <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">]</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  plugins<span class=\\\"token punctuation\\\">:</span><span class=\\\"token punctuation\\\">[</span>\\n    <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">webpack<span class=\\\"token punctuation\\\">.</span>optimize<span class=\\\"token punctuation\\\">.</span>UglifyJsPlugin</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> <span class=\\\"token comment\\\">// 웹팩 3버젼 이하에선 uglifyjs-webpack-plugin 을 v0.4.6 사용하고 있지만 최신 v1.0.0을 사용하려면 따로 플러그인을 설치해주어야 한다. https://webpack.js.org/plugins/uglifyjs-webpack-plugin/ 참고</span>\\n      sourceMap<span class=\\\"token punctuation\\\">:</span><span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">,</span>\\n      compress<span class=\\\"token punctuation\\\">:</span><span class=\\\"token punctuation\\\">{</span>\\n        warnings<span class=\\\"token punctuation\\\">:</span><span class=\\\"token boolean\\\">true</span>\\n      <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">webpack<span class=\\\"token punctuation\\\">.</span>DefinePlugin</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> <span class=\\\"token comment\\\">// 전역 상수를 생성하고 컴파일 단계에서 치환되어서 해석된다.</span>\\n    <span class=\\\"token string\\\">'process.env.NODE_ENV'</span><span class=\\\"token punctuation\\\">:</span> JSON<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">stringify</span><span class=\\\"token punctuation\\\">(</span>process<span class=\\\"token punctuation\\\">.</span>env<span class=\\\"token punctuation\\\">.</span>NODE_ENV<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">webpack<span class=\\\"token punctuation\\\">.</span>EnvironmentPlugin</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'NODE_ENV'</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token comment\\\">// 위와 같은 구문이다. definePlugin 의 process.env 설정의 단축으로 사용한다고 보면 된다. 매개변수에 object 도 지원한다. </span>\\n  <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n  resolve<span class=\\\"token punctuation\\\">:</span><span class=\\\"token punctuation\\\">{</span>\\n    modules<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'node_modules'</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n    extensions<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'.js'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'.json'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'.jsx'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'.css'</span><span class=\\\"token punctuation\\\">]</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<h2>기본 개념</h2>\\n<h3>Modules</h3>\\n<ul>\\n<li>\\n<p><a href=\\\"https://en.wikipedia.org/wiki/Modular_programming\\\">modular programming</a> 에 따르면 개발자들은 프로그램을 모듈이라고 불리우는 기능성들을 분리해서 프로그램을 만든다.</p>\\n</li>\\n<li>\\n<p>각각의 모듈들은 전체 프로그램에서 아주 작은 파트를 담당하며 코드확인, 디버깅 , 테스팅에 용이하다.\\n잘짜여진 모듈들은 solid abstraction 과 캡슐화가 잘되어있고 그로인해 모듈은 전체 어플리케이션 안에서 긴밀한 디자인을 가지고 명료한 목적을 띄고 있다.</p>\\n</li>\\n</ul>\\n<h3>resolve</h3>\\n<ul>\\n<li>resolve 옵션은 모듈들이 어떻게 해석될지를 변경하는 옵션이다. 웹팩은 합리적인 디폴트값을 지니고 있지만 그것은 변경이 가능하다.\\n웹팩에는 resolver라는 라이브러리가 있는데 이것은 모듈의 위치를 잡아주는데 도움을 준다. 모듈들은 require 문이나 import문으로 다른 모듈들을 불러올수 있다</li>\\n</ul>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code><span class=\\\"token comment\\\">// 모듈들 내부에서 </span>\\n<span class=\\\"token keyword\\\">import</span> foo <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'path/to/module'</span>\\n<span class=\\\"token comment\\\">// or</span>\\n<span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'path/to/module'</span><span class=\\\"token punctuation\\\">)</span>\\n</code></pre>\\n      </div>\\n<ul>\\n<li>이때 resolver가 웹펙에 해당 모듈의 코드 위치를 매번 번들할때마다 찾아주게 된다.\\n웹팩은 <a href=\\\"https://github.com/webpack/enhanced-resolve\\\">enhanced-resolve</a> 를 사용해서 모듈을 번들링하는 동안 파일 경로의 문제를 해결해준다.</li>\\n</ul>\\n<h3>Entry</h3>\\n<ul>\\n<li>\\n<p>entry point 지시자는 webpack이 entry point의 내부 의존성을 파악하고 번들링의 시작점이 된다. 이 시작점을 들어간 후에 웹팩은 의존성이 있는 다른 모듈들과 라이브러리들을 인지하게 된다.</p>\\n</li>\\n<li>\\n<p>모든 의존성은 프로세스를 거친후에 번들이라는 불리우는 파일로 내 뱉어지게 된다.\\nwebpack config에서 entry라는 속성으로 설정을 할 수 있다.</p>\\n</li>\\n</ul>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code>module<span class=\\\"token punctuation\\\">.</span>exports <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n    entry <span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'./path/to/my/entry/file.js'</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<h3>Output</h3>\\n<ul>\\n<li>output 속성은 웹펙이 번들을 내 뱉어지는 장소를 가리킨다. </li>\\n<li>output 필드 안에 구체적인 옵션들을 설정 할 수 있다.</li>\\n</ul>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code><span class=\\\"token keyword\\\">const</span> path <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'path'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\nmodule<span class=\\\"token punctuation\\\">.</span>exports <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n    entry <span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'./path/to/my/entry/file.js'</span><span class=\\\"token punctuation\\\">,</span>\\n    output <span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n        path <span class=\\\"token punctuation\\\">:</span> path<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">resolve</span><span class=\\\"token punctuation\\\">(</span>__dirname<span class=\\\"token punctuation\\\">,</span><span class=\\\"token string\\\">'dist'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n        filename <span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'my-first-webpack.bundle.js'</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<ul>\\n<li>\\n<p>여기서 path.resolve 는 해당 참조.\\n<a href=\\\"https://nodejs.org/docs/latest/api/path.html#path_path_resolve_paths\\\">https://nodejs.org/docs/latest/api/path.html#path<em>path</em>resolve_paths</a></p>\\n</li>\\n<li>\\n<p>여기서 output.path 와 output.filename 은 웹팩에게 번들의 이름과 번들이 어디에 방출될 것인지를 설정하는 부분이다.</p>\\n</li>\\n</ul>\\n<h3>Loaders</h3>\\n<ul>\\n<li>Loader는 웹팩이 자바스크립트 파일 뿐만 아니라 더 많은것들을 진행 할 수 있게 만들어 줍니다. </li>\\n<li>웹팩 로더는 app에 걸려있는 dependency를 포함해 모든 타입의 파일들을 모듈로 변화시킵니다.</li>\\n<li>로더는 test 프로퍼티와 use 프로퍼티를 지닙니다.</li>\\n<li>test 프로퍼티는 어떤 파일 또는 파일들을 변화시킬것인지를 use 프로퍼티는 어떤 로더를 이용해서 변화시킬건지를 설정하는 부분입니다.</li>\\n</ul>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code><span class=\\\"token keyword\\\">const</span> path <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'path'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> config <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n  entry<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'./path/to/my/entry/file.js'</span><span class=\\\"token punctuation\\\">,</span>\\n  output<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n    path<span class=\\\"token punctuation\\\">:</span> path<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">resolve</span><span class=\\\"token punctuation\\\">(</span>__dirname<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'dist'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n    filename<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'my-first-webpack.bundle.js'</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  module<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n    rules<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n      <span class=\\\"token punctuation\\\">{</span> test<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token regex\\\">/\\\\.txt$/</span><span class=\\\"token punctuation\\\">,</span> use<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'raw-loader'</span> <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">]</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\nmodule<span class=\\\"token punctuation\\\">.</span>exports <span class=\\\"token operator\\\">=</span> config<span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<ul>\\n<li>위에서 rules 프로퍼티는 2가지 이상의 프로퍼티들을 가질 때 사용합니다. </li>\\n<li>이것은 웹팩에게 이렇게 말하는것과 같은 원리 입니다.</li>\\n</ul>\\n<blockquote>\\n<p>“웹팩 컴파일러야 경로를 돌아다니면서 .txt파일을 만나거든 raw-loader를 사용해서 변화 시켜줘라 번들되기 전에~”</p>\\n</blockquote>\\n<h3>Plugins</h3>\\n<ul>\\n<li>\\n<p>loader는 확실한 타입만 변화시켜주는 반면 플러그인은 더 넓은 일에 효력을 발휘 할 수 있다. 플러그인의 영향력은 번들 최적화 및 축소 부터 환경과 유사한 변수 정의까지 다양합니다. 따라서 다양한 업무를 해결하는데 사용할 수 있습니다.</p>\\n</li>\\n<li>\\n<p>플러그인을 사용하려면 require()를 추가해야합니다. 여러 목적으로 여러번 사용할 수 있기에 new 를 사용해서 인스턴스를 생성해주어야 합니다.</p>\\n</li>\\n</ul>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code><span class=\\\"token keyword\\\">const</span> HtmlWebpackPlugin <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'html-webpack-plugin'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">//installed via npm</span>\\n<span class=\\\"token keyword\\\">const</span> webpack <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'webpack'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">//to access built-in plugins</span>\\n<span class=\\\"token keyword\\\">const</span> path <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'path'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> config <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n  entry<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'./path/to/my/entry/file.js'</span><span class=\\\"token punctuation\\\">,</span>\\n  output<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n    path<span class=\\\"token punctuation\\\">:</span> path<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">resolve</span><span class=\\\"token punctuation\\\">(</span>__dirname<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'dist'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n    filename<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'my-first-webpack.bundle.js'</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  module<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n    rules<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n      <span class=\\\"token punctuation\\\">{</span> test<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token regex\\\">/\\\\.txt$/</span><span class=\\\"token punctuation\\\">,</span> use<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'raw-loader'</span> <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">]</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  plugins<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n    <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">webpack<span class=\\\"token punctuation\\\">.</span>optimize<span class=\\\"token punctuation\\\">.</span>UglifyJsPlugin</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">HtmlWebpackPlugin</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>template<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'./src/index.html'</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token punctuation\\\">]</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\nmodule<span class=\\\"token punctuation\\\">.</span>exports <span class=\\\"token operator\\\">=</span> config<span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<h2>번들된 녀석을 파해쳐 보자</h2>\\n<p>기본적으로 즉시 실행 함수를 사용하고 있다. (function(){})();\\nfunction 안에는 초기화, 모듈 캐시 및 공개멤버 설정, 모듈의 실행을 하는 함수의 정의\\n인자로는 각 모듈들을 배열에 담아 전달한다.</p>\\n<p>간단하게 아래와 같은 파일 구조를 지니고 있다고 가정하자.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code><span class=\\\"token comment\\\">// a.js</span>\\n<span class=\\\"token keyword\\\">import</span> b <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'./b'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span>c<span class=\\\"token punctuation\\\">,</span>wtf<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'./c'</span><span class=\\\"token punctuation\\\">;</span>\\n\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'a'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token function\\\">b</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token function\\\">c</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>wtf<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// b.js</span>\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> <span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">{</span>console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'b'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span><span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token comment\\\">// c.js</span>\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">c</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">{</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'c'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token keyword\\\">const</span> wtf <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">'wtf'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token punctuation\\\">{</span>wtf<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<p>webpack은 어떤 모양으로 번들링을 만들까???</p>\\n<ol>\\n<li>각각의 모듈을 배열에 담아 인자로 넘긴다.</li>\\n</ol>\\n<p>참고로 아래 문법은 바벨로 돌렸을때 나오는 문법이다.\\n웹팩 2 부턴 바벨 없이도 import / export를 지원한다.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code>    <span class=\\\"token punctuation\\\">[</span>\\n        <span class=\\\"token comment\\\">// 0 번째 ( 시작점 )</span>\\n        <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span>module<span class=\\\"token punctuation\\\">,</span> exports<span class=\\\"token punctuation\\\">,</span> __webpack_require__<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n            module<span class=\\\"token punctuation\\\">.</span>exports <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">__webpack_require__</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n        <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n        \\n        <span class=\\\"token comment\\\">// 1 번째 </span>\\n        <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span>module<span class=\\\"token punctuation\\\">,</span> exports<span class=\\\"token punctuation\\\">,</span> __webpack_require__<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n\\n            <span class=\\\"token string\\\">\\\"use strict\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n           \\n           <span class=\\\"token comment\\\">// 아래 문장은 기본적으로 import 문을 바벨이 해석했을때 나올 수 있는 문장이다.</span>\\n           <span class=\\\"token comment\\\">// import b from './b';</span>\\n           <span class=\\\"token comment\\\">// 0번째 꺼 등록후 실행 하면 installModules에 export 정보를 업데이트 그후 인스톨된 모듈안에 exports를 리턴.. 이것은 곧 b.js 안에 있는 export 된 아이를 가져오는 것.</span>\\n            <span class=\\\"token keyword\\\">var</span> _b <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">__webpack_require__</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token keyword\\\">var</span> _b2 <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">_interopRequireDefault</span><span class=\\\"token punctuation\\\">(</span>_b<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token keyword\\\">var</span> _c <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">__webpack_require__</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n            <span class=\\\"token comment\\\">// 바벨이 해석한 객체인가..그렇지 않다면 default 프로퍼티 값으로 설정하자. 아래에서 default로 실행하기 때문...</span>\\n            <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">_interopRequireDefault</span><span class=\\\"token punctuation\\\">(</span>obj<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token keyword\\\">return</span> obj <span class=\\\"token operator\\\">&amp;&amp;</span> obj<span class=\\\"token punctuation\\\">.</span>__esModule <span class=\\\"token operator\\\">?</span> obj <span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token keyword\\\">default</span><span class=\\\"token punctuation\\\">:</span> obj <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token punctuation\\\">}</span>\\n\\n            console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'a'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n            <span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">,</span> _b2<span class=\\\"token punctuation\\\">.</span><span class=\\\"token keyword\\\">default</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n            <span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">,</span> _c<span class=\\\"token punctuation\\\">.</span>c<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n            console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>_c<span class=\\\"token punctuation\\\">.</span>wtf<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n            \\n        <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token comment\\\">// 2번째</span>\\n        <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span>module<span class=\\\"token punctuation\\\">,</span> exports<span class=\\\"token punctuation\\\">,</span> __webpack_require__<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n            \\n            <span class=\\\"token comment\\\">// 아래 문장은 바벨이 기본적으로 export default function(){ console.log('b')} 문장을 만났을때 해석하는 문장..</span>\\n            <span class=\\\"token string\\\">\\\"use strict\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n            Object<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">defineProperty</span><span class=\\\"token punctuation\\\">(</span>exports<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">\\\"__esModule\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span>\\n                value<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span>\\n            <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n            <span class=\\\"token comment\\\">// 이 부분은 installedModules 의 exports 에 설정되고 exports는 리턴 된다.</span>\\n            exports<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function-variable function\\\">default</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n            console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'b'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n         <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token comment\\\">// 3번째</span>\\n         <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span>module<span class=\\\"token punctuation\\\">,</span> exports<span class=\\\"token punctuation\\\">,</span> __webpack_require__<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n\\n            <span class=\\\"token string\\\">\\\"use strict\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n\\n            Object<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">defineProperty</span><span class=\\\"token punctuation\\\">(</span>exports<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">\\\"__esModule\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span>\\n                value<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span>\\n            <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n            exports<span class=\\\"token punctuation\\\">.</span>c <span class=\\\"token operator\\\">=</span> c<span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">c</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n                console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'c'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token punctuation\\\">}</span>\\n            <span class=\\\"token keyword\\\">var</span> wtf <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">'wtf'</span><span class=\\\"token punctuation\\\">;</span>\\n            exports<span class=\\\"token punctuation\\\">.</span>wtf <span class=\\\"token operator\\\">=</span> wtf<span class=\\\"token punctuation\\\">;</span>\\n\\n        <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token punctuation\\\">]</span>\\n</code></pre>\\n      </div>\\n<p>참고로 바벨 없이도 웹팩에서 import / export 를 해석 해준다.</p>\\n<p>공부 겸 봐두자.</p>\\n<p>아래 코드는 바벨 없이 웹팩만 돌렸을 때 나오는 코드 스타일 이다.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code><span class=\\\"token punctuation\\\">[</span>\\n<span class=\\\"token comment\\\">/* 0 */</span>\\n<span class=\\\"token comment\\\">/***/</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span>module<span class=\\\"token punctuation\\\">,</span> exports<span class=\\\"token punctuation\\\">,</span> __webpack_require__<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n\\nmodule<span class=\\\"token punctuation\\\">.</span>exports <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">__webpack_require__</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n\\n<span class=\\\"token comment\\\">/***/</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token comment\\\">/* 1 */</span>\\n<span class=\\\"token comment\\\">/***/</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span>module<span class=\\\"token punctuation\\\">,</span> __webpack_exports__<span class=\\\"token punctuation\\\">,</span> __webpack_require__<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n\\n<span class=\\\"token string\\\">\\\"use strict\\\"</span><span class=\\\"token punctuation\\\">;</span>\\nObject<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">defineProperty</span><span class=\\\"token punctuation\\\">(</span>__webpack_exports__<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">\\\"__esModule\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span> value<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">/* harmony import */</span> <span class=\\\"token keyword\\\">var</span> __WEBPACK_IMPORTED_MODULE_0__b__ <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">__webpack_require__</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">/* harmony import */</span> <span class=\\\"token keyword\\\">var</span> __WEBPACK_IMPORTED_MODULE_1__c__ <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">__webpack_require__</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">/**\\n * Created by merlin.ho on 2017. 5. 31..\\n */</span>\\n\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'a'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token function\\\">Object</span><span class=\\\"token punctuation\\\">(</span>__WEBPACK_IMPORTED_MODULE_0__b__<span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">\\\"a\\\"</span> <span class=\\\"token comment\\\">/* default */</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token function\\\">Object</span><span class=\\\"token punctuation\\\">(</span>__WEBPACK_IMPORTED_MODULE_1__c__<span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">\\\"a\\\"</span> <span class=\\\"token comment\\\">/* c */</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>__WEBPACK_IMPORTED_MODULE_1__c__<span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">\\\"b\\\"</span> <span class=\\\"token comment\\\">/* wtf */</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">/***/</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token comment\\\">/* 2 */</span>\\n<span class=\\\"token comment\\\">/***/</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span>module<span class=\\\"token punctuation\\\">,</span> __webpack_exports__<span class=\\\"token punctuation\\\">,</span> __webpack_require__<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n\\n<span class=\\\"token string\\\">\\\"use strict\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">/**\\n * Created by merlin.ho on 2017. 5. 31..\\n */</span>\\n<span class=\\\"token comment\\\">/* harmony default export */</span> __webpack_exports__<span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">\\\"a\\\"</span><span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">{</span>console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'b'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">/***/</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token comment\\\">/* 3 */</span>\\n<span class=\\\"token comment\\\">/***/</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span>module<span class=\\\"token punctuation\\\">,</span> __webpack_exports__<span class=\\\"token punctuation\\\">,</span> __webpack_require__<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n\\n<span class=\\\"token string\\\">\\\"use strict\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">/* harmony export (immutable) */</span> __webpack_exports__<span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">\\\"a\\\"</span><span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> c<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">/* harmony export (binding) */</span> __webpack_require__<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">d</span><span class=\\\"token punctuation\\\">(</span>__webpack_exports__<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">\\\"b\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token keyword\\\">return</span> wtf<span class=\\\"token punctuation\\\">;</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">c</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">{</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'c'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token keyword\\\">const</span> wtf <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">'wtf'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">/***/</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">]</span>\\n</code></pre>\\n      </div>\\n<ol start=\\\"2\\\">\\n<li>배열에 담긴 모듈들을 modules로 웹팩이 만든 함수에 넘긴다.</li>\\n</ol>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code><span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span>modules<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">{</span> <span class=\\\"token comment\\\">// 그 배열을 modules로 받는다.</span>\\n        <span class=\\\"token keyword\\\">var</span> installedModules <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// 모듈 캐싱처리를 위한 곳</span>\\n        <span class=\\\"token operator\\\">...</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">[</span>\\n    <span class=\\\"token comment\\\">//위에서 만든 모듈들을 모아논 배열</span>\\n<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span>\\n</code></pre>\\n      </div>\\n<ol start=\\\"3\\\">\\n<li>웹팩이 만든 함수안에는 웹팩용 __webpack_require__ 함수를 만든다. 이 함수는 모듈 아이디를 받는다.</li>\\n</ol>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code><span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">__webpack_require__</span><span class=\\\"token punctuation\\\">(</span>moduleId<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token operator\\\">...</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<ol start=\\\"4\\\">\\n<li>기존에 캐싱되어있던 모듈이 있다면 그 모듈의 exports 를 return 시킨다.</li>\\n</ol>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code><span class=\\\"token keyword\\\">if</span><span class=\\\"token punctuation\\\">(</span>installedModules<span class=\\\"token punctuation\\\">[</span>moduleId<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n\\t<span class=\\\"token keyword\\\">return</span> installedModules<span class=\\\"token punctuation\\\">[</span>moduleId<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">.</span>exports<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<ol start=\\\"5\\\">\\n<li>캐싱된 모듈이 없다면 새로운 모듈을 만들고 cache 안에 집어 넣는다.</li>\\n</ol>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code><span class=\\\"token keyword\\\">var</span> module <span class=\\\"token operator\\\">=</span> installedModules<span class=\\\"token punctuation\\\">[</span>moduleId<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n\\ti<span class=\\\"token punctuation\\\">:</span> moduleId<span class=\\\"token punctuation\\\">,</span>\\n\\tl<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">,</span>\\n\\texports<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<ol start=\\\"6\\\">\\n<li>만들어진 모듈을 실행 시킨다. call 사용</li>\\n</ol>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code>modules<span class=\\\"token punctuation\\\">[</span>moduleId<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">call</span><span class=\\\"token punctuation\\\">(</span>module<span class=\\\"token punctuation\\\">.</span>exports<span class=\\\"token punctuation\\\">,</span> module<span class=\\\"token punctuation\\\">,</span> module<span class=\\\"token punctuation\\\">.</span>exports<span class=\\\"token punctuation\\\">,</span> __webpack_require__<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<ol start=\\\"7\\\">\\n<li>호출이 다 이뤄졌다면 l 플래그를 true로 설정</li>\\n</ol>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code><span class=\\\"token comment\\\">// Flag the module as loaded</span>\\nmodule<span class=\\\"token punctuation\\\">.</span>l <span class=\\\"token operator\\\">=</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<ol start=\\\"8\\\">\\n<li>마지막으로 해당 모듈의 exports를 리턴시킨다.</li>\\n</ol>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code><span class=\\\"token comment\\\">// Return the exports of the module</span>\\n<span class=\\\"token keyword\\\">return</span> module<span class=\\\"token punctuation\\\">.</span>exports<span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<p>이 <strong>webpack_require</strong> 함수도 객체이기에 여러 프로퍼티가 존재한다.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code><span class=\\\"token comment\\\">// expose the modules object (__webpack_modules__)</span>\\n__webpack_require__<span class=\\\"token punctuation\\\">.</span>m <span class=\\\"token operator\\\">=</span> modules<span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// expose the module cache</span>\\n__webpack_require__<span class=\\\"token punctuation\\\">.</span>c <span class=\\\"token operator\\\">=</span> installedModules<span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// identity function for calling harmony imports with the correct context</span>\\n__webpack_require__<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function-variable function\\\">i</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span>value<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token keyword\\\">return</span> value<span class=\\\"token punctuation\\\">;</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// define getter function for harmony exports</span>\\n<span class=\\\"token comment\\\">// exports에 {name} 프로퍼티가 없으면 해당 {name} 으로 프로퍼티를 설정 get 설정은 해당 프로퍼티를 호출 했을때 getter 함수를 호출해서 나온 리턴값으로 얻게된다. </span>\\n<span class=\\\"token comment\\\">// 접근자 프로퍼티 셋팅</span>\\n__webpack_require__<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function-variable function\\\">d</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span>exports<span class=\\\"token punctuation\\\">,</span> name<span class=\\\"token punctuation\\\">,</span> getter<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">if</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token operator\\\">!</span>__webpack_require__<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">o</span><span class=\\\"token punctuation\\\">(</span>exports<span class=\\\"token punctuation\\\">,</span> name<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        Object<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">defineProperty</span><span class=\\\"token punctuation\\\">(</span>exports<span class=\\\"token punctuation\\\">,</span> name<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span>\\n            configurable<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token comment\\\">// 프로퍼티가 delete 통해 삭제를 할수없고 속성을 바꿀수 없다.</span>\\n            enumerable<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token comment\\\">// for-in 루프에서 해당 프로퍼티를 반환할수 있다.</span>\\n            <span class=\\\"token keyword\\\">get</span><span class=\\\"token punctuation\\\">:</span> getter <span class=\\\"token comment\\\">// 접근자 프로퍼티는 getter와 setting 함수로 구성된다.</span>\\n        <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// getDefaultExport function for compatibility with non-harmony modules</span>\\n<span class=\\\"token comment\\\">// 모듈을 받아서 getter 함수를 설정하고 getter 함수에 a 프로퍼티를 설정한다.</span>\\n<span class=\\\"token comment\\\">// 모듈이 installed가 되었다면 getDefault 아니면 getMouduleExports 를 getter로 셋팅 후 'a' 프로퍼티를 생성하고 반환..</span>\\n<span class=\\\"token comment\\\">// getDefault.a 은 module['default'] 반환</span>\\n<span class=\\\"token comment\\\">// getMouduleExports.a 은 module 반환</span>\\n__webpack_require__<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function-variable function\\\">n</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span>module<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">var</span> getter <span class=\\\"token operator\\\">=</span> module <span class=\\\"token operator\\\">&amp;&amp;</span> module<span class=\\\"token punctuation\\\">.</span>__esModule <span class=\\\"token operator\\\">?</span>\\n        <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">getDefault</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token keyword\\\">return</span> module<span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'default'</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token punctuation\\\">:</span>\\n        <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">getModuleExports</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token keyword\\\">return</span> module<span class=\\\"token punctuation\\\">;</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n    __webpack_require__<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">d</span><span class=\\\"token punctuation\\\">(</span>getter<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'a'</span><span class=\\\"token punctuation\\\">,</span> getter<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">return</span> getter<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// Object.prototype.hasOwnProperty.call</span>\\n__webpack_require__<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function-variable function\\\">o</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span>object<span class=\\\"token punctuation\\\">,</span> property<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token keyword\\\">return</span> Object<span class=\\\"token punctuation\\\">.</span>prototype<span class=\\\"token punctuation\\\">.</span>hasOwnProperty<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">call</span><span class=\\\"token punctuation\\\">(</span>object<span class=\\\"token punctuation\\\">,</span> property<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// __webpack_public_path__</span>\\n__webpack_require__<span class=\\\"token punctuation\\\">.</span>p <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">\\\"\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// Load entry module and return exports</span>\\n<span class=\\\"token comment\\\">// 실행 , 2 번째 모듈이 가지고 있는 module의 exports를 리턴</span>\\n<span class=\\\"token keyword\\\">return</span> <span class=\\\"token function\\\">__webpack_require__</span><span class=\\\"token punctuation\\\">(</span>__webpack_require__<span class=\\\"token punctuation\\\">.</span>s <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\",\"frontmatter\":{\"title\":\"Hello webpack\",\"date\":\"February 01, 2018\"}}},\"pathContext\":{\"slug\":\"/hello-webpack/\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---hello-webpack-0e285b607382ee417f2f.js","module.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"title\":\"Merlin Tec Blog\",\"author\":\"merlin.ho\"}},\"markdownRemark\":{\"id\":\"/Users/merlin.ho/Documents/workspace/ho_blog/gatsby-blog/src/pages/hello-webpack/index.md absPath of file >>> MarkdownRemark\",\"html\":\"<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code><span class=\\\"token comment\\\">/**\\n * merlin webpack test init\\n */</span>\\n<span class=\\\"token keyword\\\">var</span> webpack <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'webpack'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">const</span> path <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'path'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\nmodule<span class=\\\"token punctuation\\\">.</span>exports <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token comment\\\">// 파일을 읽어들이기 시작하는 부분.</span>\\n  entry<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n    app<span class=\\\"token punctuation\\\">:</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'./src/a.js'</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token string\\\">'./src/b.js'</span><span class=\\\"token punctuation\\\">]</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  output<span class=\\\"token punctuation\\\">:</span><span class=\\\"token punctuation\\\">{</span>\\n    path<span class=\\\"token punctuation\\\">:</span> path<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">resolve</span><span class=\\\"token punctuation\\\">(</span>__dirname<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'dist'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token comment\\\">// output으로 나올 파일이 저장될 경로..</span>\\n    filename<span class=\\\"token punctuation\\\">:</span><span class=\\\"token string\\\">'[name].js'</span><span class=\\\"token punctuation\\\">,</span>\\n    publicPath<span class=\\\"token punctuation\\\">:</span><span class=\\\"token string\\\">'/'</span> <span class=\\\"token comment\\\">//파일들이 위치할 서버 상의 경로..</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  \\n  module<span class=\\\"token punctuation\\\">:</span><span class=\\\"token punctuation\\\">{</span>\\n    rules<span class=\\\"token punctuation\\\">:</span><span class=\\\"token punctuation\\\">[</span>\\n      <span class=\\\"token punctuation\\\">{</span>\\n        test<span class=\\\"token punctuation\\\">:</span><span class=\\\"token regex\\\">/\\\\.jsx?$/</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token comment\\\">// 정규식조건에 부합하는 파일들을 loader에 지정한 로더가 컴파일 해줍니다...</span>\\n        loader<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'babel-loader'</span><span class=\\\"token punctuation\\\">,</span>\\n        options<span class=\\\"token punctuation\\\">:</span><span class=\\\"token punctuation\\\">{</span>\\n          presets<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'es2015'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'stage-0'</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n        exclude<span class=\\\"token punctuation\\\">:</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'./node_modules'</span><span class=\\\"token punctuation\\\">]</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token punctuation\\\">{</span>\\n        test<span class=\\\"token punctuation\\\">:</span><span class=\\\"token regex\\\">/\\\\.css$/</span><span class=\\\"token punctuation\\\">,</span>\\n        use<span class=\\\"token punctuation\\\">:</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'style-loader'</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token string\\\">'css-loader'</span><span class=\\\"token punctuation\\\">]</span> <span class=\\\"token comment\\\">// loader로 써도 된다... css-loader로 처리한뒤 그것을 style-loader로 한번 더 처리.</span>\\n      <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">]</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  plugins<span class=\\\"token punctuation\\\">:</span><span class=\\\"token punctuation\\\">[</span>\\n    <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">webpack<span class=\\\"token punctuation\\\">.</span>optimize<span class=\\\"token punctuation\\\">.</span>UglifyJsPlugin</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> <span class=\\\"token comment\\\">// 웹팩 3버젼 이하에선 uglifyjs-webpack-plugin 을 v0.4.6 사용하고 있지만 최신 v1.0.0을 사용하려면 따로 플러그인을 설치해주어야 한다. https://webpack.js.org/plugins/uglifyjs-webpack-plugin/ 참고</span>\\n      sourceMap<span class=\\\"token punctuation\\\">:</span><span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">,</span>\\n      compress<span class=\\\"token punctuation\\\">:</span><span class=\\\"token punctuation\\\">{</span>\\n        warnings<span class=\\\"token punctuation\\\">:</span><span class=\\\"token boolean\\\">true</span>\\n      <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">webpack<span class=\\\"token punctuation\\\">.</span>DefinePlugin</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> <span class=\\\"token comment\\\">// 전역 상수를 생성하고 컴파일 단계에서 치환되어서 해석된다.</span>\\n    <span class=\\\"token string\\\">'process.env.NODE_ENV'</span><span class=\\\"token punctuation\\\">:</span> JSON<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">stringify</span><span class=\\\"token punctuation\\\">(</span>process<span class=\\\"token punctuation\\\">.</span>env<span class=\\\"token punctuation\\\">.</span>NODE_ENV<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">webpack<span class=\\\"token punctuation\\\">.</span>EnvironmentPlugin</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'NODE_ENV'</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token comment\\\">// 위와 같은 구문이다. definePlugin 의 process.env 설정의 단축으로 사용한다고 보면 된다. 매개변수에 object 도 지원한다. </span>\\n  <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n  resolve<span class=\\\"token punctuation\\\">:</span><span class=\\\"token punctuation\\\">{</span>\\n    modules<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'node_modules'</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n    extensions<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'.js'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'.json'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'.jsx'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'.css'</span><span class=\\\"token punctuation\\\">]</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<h2>기본 개념</h2>\\n<h3>Modules</h3>\\n<ul>\\n<li>\\n<p><a href=\\\"https://en.wikipedia.org/wiki/Modular_programming\\\">modular programming</a> 에 따르면 개발자들은 프로그램을 모듈이라고 불리우는 기능성들을 분리해서 프로그램을 만든다.</p>\\n</li>\\n<li>\\n<p>각각의 모듈들은 전체 프로그램에서 아주 작은 파트를 담당하며 코드확인, 디버깅 , 테스팅에 용이하다.\\n잘짜여진 모듈들은 solid abstraction 과 캡슐화가 잘되어있고 그로인해 모듈은 전체 어플리케이션 안에서 긴밀한 디자인을 가지고 명료한 목적을 띄고 있다.</p>\\n</li>\\n</ul>\\n<h3>resolve</h3>\\n<ul>\\n<li>resolve 옵션은 모듈들이 어떻게 해석될지를 변경하는 옵션이다. 웹팩은 합리적인 디폴트값을 지니고 있지만 그것은 변경이 가능하다.\\n웹팩에는 resolver라는 라이브러리가 있는데 이것은 모듈의 위치를 잡아주는데 도움을 준다. 모듈들은 require 문이나 import문으로 다른 모듈들을 불러올수 있다</li>\\n</ul>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code><span class=\\\"token comment\\\">// 모듈들 내부에서 </span>\\n<span class=\\\"token keyword\\\">import</span> foo <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'path/to/module'</span>\\n<span class=\\\"token comment\\\">// or</span>\\n<span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'path/to/module'</span><span class=\\\"token punctuation\\\">)</span>\\n</code></pre>\\n      </div>\\n<ul>\\n<li>이때 resolver가 웹펙에 해당 모듈의 코드 위치를 매번 번들할때마다 찾아주게 된다.\\n웹팩은 <a href=\\\"https://github.com/webpack/enhanced-resolve\\\">enhanced-resolve</a> 를 사용해서 모듈을 번들링하는 동안 파일 경로의 문제를 해결해준다.</li>\\n</ul>\\n<h3>Entry</h3>\\n<ul>\\n<li>\\n<p>entry point 지시자는 webpack이 entry point의 내부 의존성을 파악하고 번들링의 시작점이 된다. 이 시작점을 들어간 후에 웹팩은 의존성이 있는 다른 모듈들과 라이브러리들을 인지하게 된다.</p>\\n</li>\\n<li>\\n<p>모든 의존성은 프로세스를 거친후에 번들이라는 불리우는 파일로 내 뱉어지게 된다.\\nwebpack config에서 entry라는 속성으로 설정을 할 수 있다.</p>\\n</li>\\n</ul>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code>module<span class=\\\"token punctuation\\\">.</span>exports <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n    entry <span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'./path/to/my/entry/file.js'</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<h3>Output</h3>\\n<ul>\\n<li>output 속성은 웹펙이 번들을 내 뱉어지는 장소를 가리킨다. </li>\\n<li>output 필드 안에 구체적인 옵션들을 설정 할 수 있다.</li>\\n</ul>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code><span class=\\\"token keyword\\\">const</span> path <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'path'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\nmodule<span class=\\\"token punctuation\\\">.</span>exports <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n    entry <span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'./path/to/my/entry/file.js'</span><span class=\\\"token punctuation\\\">,</span>\\n    output <span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n        path <span class=\\\"token punctuation\\\">:</span> path<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">resolve</span><span class=\\\"token punctuation\\\">(</span>__dirname<span class=\\\"token punctuation\\\">,</span><span class=\\\"token string\\\">'dist'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n        filename <span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'my-first-webpack.bundle.js'</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<ul>\\n<li>\\n<p>여기서 path.resolve 는 해당 참조.\\n<a href=\\\"https://nodejs.org/docs/latest/api/path.html#path_path_resolve_paths\\\">https://nodejs.org/docs/latest/api/path.html#path<em>path</em>resolve_paths</a></p>\\n</li>\\n<li>\\n<p>여기서 output.path 와 output.filename 은 웹팩에게 번들의 이름과 번들이 어디에 방출될 것인지를 설정하는 부분이다.</p>\\n</li>\\n</ul>\\n<h3>Loaders</h3>\\n<ul>\\n<li>Loader는 웹팩이 자바스크립트 파일 뿐만 아니라 더 많은것들을 진행 할 수 있게 만들어 줍니다. </li>\\n<li>웹팩 로더는 app에 걸려있는 dependency를 포함해 모든 타입의 파일들을 모듈로 변화시킵니다.</li>\\n<li>로더는 test 프로퍼티와 use 프로퍼티를 지닙니다.</li>\\n<li>test 프로퍼티는 어떤 파일 또는 파일들을 변화시킬것인지를 use 프로퍼티는 어떤 로더를 이용해서 변화시킬건지를 설정하는 부분입니다.</li>\\n</ul>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code><span class=\\\"token keyword\\\">const</span> path <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'path'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> config <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n  entry<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'./path/to/my/entry/file.js'</span><span class=\\\"token punctuation\\\">,</span>\\n  output<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n    path<span class=\\\"token punctuation\\\">:</span> path<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">resolve</span><span class=\\\"token punctuation\\\">(</span>__dirname<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'dist'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n    filename<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'my-first-webpack.bundle.js'</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  module<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n    rules<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n      <span class=\\\"token punctuation\\\">{</span> test<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token regex\\\">/\\\\.txt$/</span><span class=\\\"token punctuation\\\">,</span> use<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'raw-loader'</span> <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">]</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\nmodule<span class=\\\"token punctuation\\\">.</span>exports <span class=\\\"token operator\\\">=</span> config<span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<ul>\\n<li>위에서 rules 프로퍼티는 2가지 이상의 프로퍼티들을 가질 때 사용합니다. </li>\\n<li>이것은 웹팩에게 이렇게 말하는것과 같은 원리 입니다.</li>\\n</ul>\\n<blockquote>\\n<p>“웹팩 컴파일러야 경로를 돌아다니면서 .txt파일을 만나거든 raw-loader를 사용해서 변화 시켜줘라 번들되기 전에~”</p>\\n</blockquote>\\n<h3>Plugins</h3>\\n<ul>\\n<li>\\n<p>loader는 확실한 타입만 변화시켜주는 반면 플러그인은 더 넓은 일에 효력을 발휘 할 수 있다. 플러그인의 영향력은 번들 최적화 및 축소 부터 환경과 유사한 변수 정의까지 다양합니다. 따라서 다양한 업무를 해결하는데 사용할 수 있습니다.</p>\\n</li>\\n<li>\\n<p>플러그인을 사용하려면 require()를 추가해야합니다. 여러 목적으로 여러번 사용할 수 있기에 new 를 사용해서 인스턴스를 생성해주어야 합니다.</p>\\n</li>\\n</ul>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code><span class=\\\"token keyword\\\">const</span> HtmlWebpackPlugin <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'html-webpack-plugin'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">//installed via npm</span>\\n<span class=\\\"token keyword\\\">const</span> webpack <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'webpack'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">//to access built-in plugins</span>\\n<span class=\\\"token keyword\\\">const</span> path <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'path'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> config <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n  entry<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'./path/to/my/entry/file.js'</span><span class=\\\"token punctuation\\\">,</span>\\n  output<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n    path<span class=\\\"token punctuation\\\">:</span> path<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">resolve</span><span class=\\\"token punctuation\\\">(</span>__dirname<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'dist'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n    filename<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'my-first-webpack.bundle.js'</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  module<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n    rules<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n      <span class=\\\"token punctuation\\\">{</span> test<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token regex\\\">/\\\\.txt$/</span><span class=\\\"token punctuation\\\">,</span> use<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'raw-loader'</span> <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">]</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  plugins<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n    <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">webpack<span class=\\\"token punctuation\\\">.</span>optimize<span class=\\\"token punctuation\\\">.</span>UglifyJsPlugin</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">HtmlWebpackPlugin</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>template<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'./src/index.html'</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token punctuation\\\">]</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\nmodule<span class=\\\"token punctuation\\\">.</span>exports <span class=\\\"token operator\\\">=</span> config<span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<h2>번들된 녀석을 파해쳐 보자</h2>\\n<p>기본적으로 즉시 실행 함수를 사용하고 있다. (function(){})();\\nfunction 안에는 초기화, 모듈 캐시 및 공개멤버 설정, 모듈의 실행을 하는 함수의 정의\\n인자로는 각 모듈들을 배열에 담아 전달한다.</p>\\n<p>간단하게 아래와 같은 파일 구조를 지니고 있다고 가정하자.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code><span class=\\\"token comment\\\">// a.js</span>\\n<span class=\\\"token keyword\\\">import</span> b <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'./b'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span>c<span class=\\\"token punctuation\\\">,</span>wtf<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'./c'</span><span class=\\\"token punctuation\\\">;</span>\\n\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'a'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token function\\\">b</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token function\\\">c</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>wtf<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// b.js</span>\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> <span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">{</span>console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'b'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span><span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token comment\\\">// c.js</span>\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">c</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">{</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'c'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token keyword\\\">const</span> wtf <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">'wtf'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token punctuation\\\">{</span>wtf<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<p>webpack은 어떤 모양으로 번들링을 만들까???</p>\\n<ol>\\n<li>각각의 모듈을 배열에 담아 인자로 넘긴다.</li>\\n</ol>\\n<p>참고로 아래 문법은 바벨로 돌렸을때 나오는 문법이다.\\n웹팩 2 부턴 바벨 없이도 import / export를 지원한다.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code>    <span class=\\\"token punctuation\\\">[</span>\\n        <span class=\\\"token comment\\\">// 0 번째 ( 시작점 )</span>\\n        <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span>module<span class=\\\"token punctuation\\\">,</span> exports<span class=\\\"token punctuation\\\">,</span> __webpack_require__<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n            module<span class=\\\"token punctuation\\\">.</span>exports <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">__webpack_require__</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n        <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n        \\n        <span class=\\\"token comment\\\">// 1 번째 </span>\\n        <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span>module<span class=\\\"token punctuation\\\">,</span> exports<span class=\\\"token punctuation\\\">,</span> __webpack_require__<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n\\n            <span class=\\\"token string\\\">\\\"use strict\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n           \\n           <span class=\\\"token comment\\\">// 아래 문장은 기본적으로 import 문을 바벨이 해석했을때 나올 수 있는 문장이다.</span>\\n           <span class=\\\"token comment\\\">// import b from './b';</span>\\n           <span class=\\\"token comment\\\">// 0번째 꺼 등록후 실행 하면 installModules에 export 정보를 업데이트 그후 인스톨된 모듈안에 exports를 리턴.. 이것은 곧 b.js 안에 있는 export 된 아이를 가져오는 것.</span>\\n            <span class=\\\"token keyword\\\">var</span> _b <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">__webpack_require__</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token keyword\\\">var</span> _b2 <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">_interopRequireDefault</span><span class=\\\"token punctuation\\\">(</span>_b<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token keyword\\\">var</span> _c <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">__webpack_require__</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n            <span class=\\\"token comment\\\">// 바벨이 해석한 객체인가..그렇지 않다면 default 프로퍼티 값으로 설정하자. 아래에서 default로 실행하기 때문...</span>\\n            <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">_interopRequireDefault</span><span class=\\\"token punctuation\\\">(</span>obj<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token keyword\\\">return</span> obj <span class=\\\"token operator\\\">&amp;&amp;</span> obj<span class=\\\"token punctuation\\\">.</span>__esModule <span class=\\\"token operator\\\">?</span> obj <span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token keyword\\\">default</span><span class=\\\"token punctuation\\\">:</span> obj <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token punctuation\\\">}</span>\\n\\n            console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'a'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n            <span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">,</span> _b2<span class=\\\"token punctuation\\\">.</span><span class=\\\"token keyword\\\">default</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n            <span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">,</span> _c<span class=\\\"token punctuation\\\">.</span>c<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n            console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>_c<span class=\\\"token punctuation\\\">.</span>wtf<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n            \\n        <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token comment\\\">// 2번째</span>\\n        <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span>module<span class=\\\"token punctuation\\\">,</span> exports<span class=\\\"token punctuation\\\">,</span> __webpack_require__<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n            \\n            <span class=\\\"token comment\\\">// 아래 문장은 바벨이 기본적으로 export default function(){ console.log('b')} 문장을 만났을때 해석하는 문장..</span>\\n            <span class=\\\"token string\\\">\\\"use strict\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n            Object<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">defineProperty</span><span class=\\\"token punctuation\\\">(</span>exports<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">\\\"__esModule\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span>\\n                value<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span>\\n            <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n            <span class=\\\"token comment\\\">// 이 부분은 installedModules 의 exports 에 설정되고 exports는 리턴 된다.</span>\\n            exports<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function-variable function\\\">default</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n            console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'b'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n         <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token comment\\\">// 3번째</span>\\n         <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span>module<span class=\\\"token punctuation\\\">,</span> exports<span class=\\\"token punctuation\\\">,</span> __webpack_require__<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n\\n            <span class=\\\"token string\\\">\\\"use strict\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n\\n            Object<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">defineProperty</span><span class=\\\"token punctuation\\\">(</span>exports<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">\\\"__esModule\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span>\\n                value<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span>\\n            <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n            exports<span class=\\\"token punctuation\\\">.</span>c <span class=\\\"token operator\\\">=</span> c<span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">c</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n                console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'c'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token punctuation\\\">}</span>\\n            <span class=\\\"token keyword\\\">var</span> wtf <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">'wtf'</span><span class=\\\"token punctuation\\\">;</span>\\n            exports<span class=\\\"token punctuation\\\">.</span>wtf <span class=\\\"token operator\\\">=</span> wtf<span class=\\\"token punctuation\\\">;</span>\\n\\n        <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token punctuation\\\">]</span>\\n</code></pre>\\n      </div>\\n<p>참고로 바벨 없이도 웹팩에서 import / export 를 해석 해준다.</p>\\n<p>공부 겸 봐두자.</p>\\n<p>아래 코드는 바벨 없이 웹팩만 돌렸을 때 나오는 코드 스타일 이다.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code><span class=\\\"token punctuation\\\">[</span>\\n<span class=\\\"token comment\\\">/* 0 */</span>\\n<span class=\\\"token comment\\\">/***/</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span>module<span class=\\\"token punctuation\\\">,</span> exports<span class=\\\"token punctuation\\\">,</span> __webpack_require__<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n\\nmodule<span class=\\\"token punctuation\\\">.</span>exports <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">__webpack_require__</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n\\n<span class=\\\"token comment\\\">/***/</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token comment\\\">/* 1 */</span>\\n<span class=\\\"token comment\\\">/***/</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span>module<span class=\\\"token punctuation\\\">,</span> __webpack_exports__<span class=\\\"token punctuation\\\">,</span> __webpack_require__<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n\\n<span class=\\\"token string\\\">\\\"use strict\\\"</span><span class=\\\"token punctuation\\\">;</span>\\nObject<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">defineProperty</span><span class=\\\"token punctuation\\\">(</span>__webpack_exports__<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">\\\"__esModule\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span> value<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">/* harmony import */</span> <span class=\\\"token keyword\\\">var</span> __WEBPACK_IMPORTED_MODULE_0__b__ <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">__webpack_require__</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">/* harmony import */</span> <span class=\\\"token keyword\\\">var</span> __WEBPACK_IMPORTED_MODULE_1__c__ <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">__webpack_require__</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">/**\\n * Created by merlin.ho on 2017. 5. 31..\\n */</span>\\n\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'a'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token function\\\">Object</span><span class=\\\"token punctuation\\\">(</span>__WEBPACK_IMPORTED_MODULE_0__b__<span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">\\\"a\\\"</span> <span class=\\\"token comment\\\">/* default */</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token function\\\">Object</span><span class=\\\"token punctuation\\\">(</span>__WEBPACK_IMPORTED_MODULE_1__c__<span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">\\\"a\\\"</span> <span class=\\\"token comment\\\">/* c */</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>__WEBPACK_IMPORTED_MODULE_1__c__<span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">\\\"b\\\"</span> <span class=\\\"token comment\\\">/* wtf */</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">/***/</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token comment\\\">/* 2 */</span>\\n<span class=\\\"token comment\\\">/***/</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span>module<span class=\\\"token punctuation\\\">,</span> __webpack_exports__<span class=\\\"token punctuation\\\">,</span> __webpack_require__<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n\\n<span class=\\\"token string\\\">\\\"use strict\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">/**\\n * Created by merlin.ho on 2017. 5. 31..\\n */</span>\\n<span class=\\\"token comment\\\">/* harmony default export */</span> __webpack_exports__<span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">\\\"a\\\"</span><span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">{</span>console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'b'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">/***/</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token comment\\\">/* 3 */</span>\\n<span class=\\\"token comment\\\">/***/</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span>module<span class=\\\"token punctuation\\\">,</span> __webpack_exports__<span class=\\\"token punctuation\\\">,</span> __webpack_require__<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n\\n<span class=\\\"token string\\\">\\\"use strict\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">/* harmony export (immutable) */</span> __webpack_exports__<span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">\\\"a\\\"</span><span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> c<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">/* harmony export (binding) */</span> __webpack_require__<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">d</span><span class=\\\"token punctuation\\\">(</span>__webpack_exports__<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">\\\"b\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token keyword\\\">return</span> wtf<span class=\\\"token punctuation\\\">;</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">c</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">{</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'c'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token keyword\\\">const</span> wtf <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">'wtf'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">/***/</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">]</span>\\n</code></pre>\\n      </div>\\n<ol start=\\\"2\\\">\\n<li>배열에 담긴 모듈들을 modules로 웹팩이 만든 함수에 넘긴다.</li>\\n</ol>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code><span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span>modules<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">{</span> <span class=\\\"token comment\\\">// 그 배열을 modules로 받는다.</span>\\n        <span class=\\\"token keyword\\\">var</span> installedModules <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// 모듈 캐싱처리를 위한 곳</span>\\n        <span class=\\\"token operator\\\">...</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">[</span>\\n    <span class=\\\"token comment\\\">//위에서 만든 모듈들을 모아논 배열</span>\\n<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span>\\n</code></pre>\\n      </div>\\n<ol start=\\\"3\\\">\\n<li>웹팩이 만든 함수안에는 웹팩용 __webpack_require__ 함수를 만든다. 이 함수는 모듈 아이디를 받는다.</li>\\n</ol>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code><span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">__webpack_require__</span><span class=\\\"token punctuation\\\">(</span>moduleId<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token operator\\\">...</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<ol start=\\\"4\\\">\\n<li>기존에 캐싱되어있던 모듈이 있다면 그 모듈의 exports 를 return 시킨다.</li>\\n</ol>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code><span class=\\\"token keyword\\\">if</span><span class=\\\"token punctuation\\\">(</span>installedModules<span class=\\\"token punctuation\\\">[</span>moduleId<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n\\t<span class=\\\"token keyword\\\">return</span> installedModules<span class=\\\"token punctuation\\\">[</span>moduleId<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">.</span>exports<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<ol start=\\\"5\\\">\\n<li>캐싱된 모듈이 없다면 새로운 모듈을 만들고 cache 안에 집어 넣는다.</li>\\n</ol>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code><span class=\\\"token keyword\\\">var</span> module <span class=\\\"token operator\\\">=</span> installedModules<span class=\\\"token punctuation\\\">[</span>moduleId<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n\\ti<span class=\\\"token punctuation\\\">:</span> moduleId<span class=\\\"token punctuation\\\">,</span>\\n\\tl<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">,</span>\\n\\texports<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<ol start=\\\"6\\\">\\n<li>만들어진 모듈을 실행 시킨다. call 사용</li>\\n</ol>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code>modules<span class=\\\"token punctuation\\\">[</span>moduleId<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">call</span><span class=\\\"token punctuation\\\">(</span>module<span class=\\\"token punctuation\\\">.</span>exports<span class=\\\"token punctuation\\\">,</span> module<span class=\\\"token punctuation\\\">,</span> module<span class=\\\"token punctuation\\\">.</span>exports<span class=\\\"token punctuation\\\">,</span> __webpack_require__<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<ol start=\\\"7\\\">\\n<li>호출이 다 이뤄졌다면 l 플래그를 true로 설정</li>\\n</ol>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code><span class=\\\"token comment\\\">// Flag the module as loaded</span>\\nmodule<span class=\\\"token punctuation\\\">.</span>l <span class=\\\"token operator\\\">=</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<ol start=\\\"8\\\">\\n<li>마지막으로 해당 모듈의 exports를 리턴시킨다.</li>\\n</ol>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code><span class=\\\"token comment\\\">// Return the exports of the module</span>\\n<span class=\\\"token keyword\\\">return</span> module<span class=\\\"token punctuation\\\">.</span>exports<span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<p>이 <strong>webpack_require</strong> 함수도 객체이기에 여러 프로퍼티가 존재한다.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code><span class=\\\"token comment\\\">// expose the modules object (__webpack_modules__)</span>\\n__webpack_require__<span class=\\\"token punctuation\\\">.</span>m <span class=\\\"token operator\\\">=</span> modules<span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// expose the module cache</span>\\n__webpack_require__<span class=\\\"token punctuation\\\">.</span>c <span class=\\\"token operator\\\">=</span> installedModules<span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// identity function for calling harmony imports with the correct context</span>\\n__webpack_require__<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function-variable function\\\">i</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span>value<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token keyword\\\">return</span> value<span class=\\\"token punctuation\\\">;</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// define getter function for harmony exports</span>\\n<span class=\\\"token comment\\\">// exports에 {name} 프로퍼티가 없으면 해당 {name} 으로 프로퍼티를 설정 get 설정은 해당 프로퍼티를 호출 했을때 getter 함수를 호출해서 나온 리턴값으로 얻게된다. </span>\\n<span class=\\\"token comment\\\">// 접근자 프로퍼티 셋팅</span>\\n__webpack_require__<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function-variable function\\\">d</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span>exports<span class=\\\"token punctuation\\\">,</span> name<span class=\\\"token punctuation\\\">,</span> getter<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">if</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token operator\\\">!</span>__webpack_require__<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">o</span><span class=\\\"token punctuation\\\">(</span>exports<span class=\\\"token punctuation\\\">,</span> name<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        Object<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">defineProperty</span><span class=\\\"token punctuation\\\">(</span>exports<span class=\\\"token punctuation\\\">,</span> name<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span>\\n            configurable<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token comment\\\">// 프로퍼티가 delete 통해 삭제를 할수없고 속성을 바꿀수 없다.</span>\\n            enumerable<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token comment\\\">// for-in 루프에서 해당 프로퍼티를 반환할수 있다.</span>\\n            <span class=\\\"token keyword\\\">get</span><span class=\\\"token punctuation\\\">:</span> getter <span class=\\\"token comment\\\">// 접근자 프로퍼티는 getter와 setting 함수로 구성된다.</span>\\n        <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// getDefaultExport function for compatibility with non-harmony modules</span>\\n<span class=\\\"token comment\\\">// 모듈을 받아서 getter 함수를 설정하고 getter 함수에 a 프로퍼티를 설정한다.</span>\\n<span class=\\\"token comment\\\">// 모듈이 installed가 되었다면 getDefault 아니면 getMouduleExports 를 getter로 셋팅 후 'a' 프로퍼티를 생성하고 반환..</span>\\n<span class=\\\"token comment\\\">// getDefault.a 은 module['default'] 반환</span>\\n<span class=\\\"token comment\\\">// getMouduleExports.a 은 module 반환</span>\\n__webpack_require__<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function-variable function\\\">n</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span>module<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">var</span> getter <span class=\\\"token operator\\\">=</span> module <span class=\\\"token operator\\\">&amp;&amp;</span> module<span class=\\\"token punctuation\\\">.</span>__esModule <span class=\\\"token operator\\\">?</span>\\n        <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">getDefault</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token keyword\\\">return</span> module<span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'default'</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token punctuation\\\">:</span>\\n        <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">getModuleExports</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token keyword\\\">return</span> module<span class=\\\"token punctuation\\\">;</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n    __webpack_require__<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">d</span><span class=\\\"token punctuation\\\">(</span>getter<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'a'</span><span class=\\\"token punctuation\\\">,</span> getter<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">return</span> getter<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// Object.prototype.hasOwnProperty.call</span>\\n__webpack_require__<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function-variable function\\\">o</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span>object<span class=\\\"token punctuation\\\">,</span> property<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token keyword\\\">return</span> Object<span class=\\\"token punctuation\\\">.</span>prototype<span class=\\\"token punctuation\\\">.</span>hasOwnProperty<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">call</span><span class=\\\"token punctuation\\\">(</span>object<span class=\\\"token punctuation\\\">,</span> property<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// __webpack_public_path__</span>\\n__webpack_require__<span class=\\\"token punctuation\\\">.</span>p <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">\\\"\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// Load entry module and return exports</span>\\n<span class=\\\"token comment\\\">// 실행 , 2 번째 모듈이 가지고 있는 module의 exports를 리턴</span>\\n<span class=\\\"token keyword\\\">return</span> <span class=\\\"token function\\\">__webpack_require__</span><span class=\\\"token punctuation\\\">(</span>__webpack_require__<span class=\\\"token punctuation\\\">.</span>s <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\",\"frontmatter\":{\"title\":\"Hello webpack\",\"date\":\"February 01, 2018\"}}},\"pathContext\":{\"slug\":\"/hello-webpack/\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/hello-webpack.json\n// module id = 528\n// module chunks = 160582500480188"],"sourceRoot":""}