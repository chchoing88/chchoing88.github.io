webpackJsonp([0x81b8806e4260],{530:function(e,t){e.exports={data:{site:{siteMetadata:{title:"Merlin Tec Blog"}},allMarkdownRemark:{edges:[{node:{excerpt:"javascript promise 를 만들어보자. 동기 javascript 비동기를 다루는데 쓰이는 Promise 라는 객체가 있다. Promise 를 다루는 방법은 많지만 실제로이 객체가 어떤 방식으로 움직이는지 그 구조를 파악하면서 Promise…",fields:{slug:"/make-promise/"},frontmatter:{date:"27 July, 2018",title:"make promise"}}},{node:{excerpt:"intro 공통모듈을 한 repo 에서 관리 하는 시도를 해보자. 여러 npm 패키지를 하나의 github repo 에서 관리하자. 즉, monorepo 를 구축해서 공통모듈을 관리하는 환경을 만들자. monorepo 의 이점 lint 나 build…",fields:{slug:"/experience-monorepo/"},frontmatter:{date:"13 July, 2018",title:"experience monorepo"}}},{node:{excerpt:"…",fields:{slug:"/hello-oop/"},frontmatter:{date:"25 April, 2018",title:"hello OOP"}}},{node:{excerpt:"패턴 연습을 위한 기본 다지기 일급 객체인 함수를 잘 다루자 함수를 인자로 받거나 함수를 리턴한다. 이것은 즉, 함수가 high order function 임을 인지한다. 위의 getX 와 getY를 그냥 getX() / getY…",fields:{slug:"/javascript-basic1/"},frontmatter:{date:"05 April, 2018",title:"Javascript-Basic1"}}},{node:{excerpt:"게으른 평가 call-by-need 라고도 불리는 이 전략 방법은 ( 반대는 call-by-name ) 값이 실제로 필요할때 평가를 하는것이다. 또한 반복적인 평가를 피하기 위해서 한번 평가해둔 자료는 기억해 둔다.(memoization…",fields:{slug:"/lazy-evaluation/"},frontmatter:{date:"05 April, 2018",title:"lazy evaluation"}}},{node:{excerpt:"Intro flow 는 자바스크립트의 스태틱한 타입들을 체크해주는 도구이다. flow 는 코드가 변경되는 동안 빠른 피드백을 줍니다. flow 는 타입을 추론할 수 있습니다.  install 바벨을 이용해서 flow…",fields:{slug:"/hello-flow/"},frontmatter:{date:"29 March, 2018",title:"hello-flow"}}},{node:{excerpt:"",fields:{slug:"/hello-express/"},frontmatter:{date:"16 March, 2018",title:"hello-express"}}},{node:{excerpt:"web Server web server 는 요청 과 응답의 연속이다. web browser에 web page주소를 입력(요청) 하면 입력한 주소에 맞는 웹 페이지(응답) 을 제공한다.  요청은 요청하는 url , 요청하는 방식 (ex. get,post…",fields:{slug:"/hello-webServer/"},frontmatter:{date:"15 March, 2018",title:"hello-webServer"}}},{node:{excerpt:"Intro 기존에 돌아가는 서버를 바라보는 dev proxy server를 띄워 부분적으로 react component를 개발하는 환경을 만들어보자. 그러기 위해서 사용하는 개발서버 webpack dev config…",fields:{slug:"/webpack-config/"},frontmatter:{date:"14 March, 2018",title:"webpack config"}}},{node:{excerpt:"Intro…",fields:{slug:"/hello-monad/"},frontmatter:{date:"13 February, 2018",title:"hello monad"}}},{node:{excerpt:"기본 개념 Modules modular programming…",fields:{slug:"/hello-webpack/"},frontmatter:{date:"01 February, 2018",title:"Hello webpack"}}},{node:{excerpt:"intro React 리엑트를 처음 마주해보자.\n해당 정리 내용의 출처는 \n https://www.youtube.com/watch?v=GEoNiUcVwjE&list=PL9FpF z-xR GMujql3S_XGV2SpdfDBkeC…",fields:{slug:"/hello-react/"},frontmatter:{date:"31 January, 2018",title:"Hello React"}}},{node:{excerpt:"Docker Depolyment blue-green 배포 개념 로드발란서를 앞단에 하나를 두고 v1 버젼인 블루(가칭) 라는 앱을 띄운다. 그러다가 나는 v…",fields:{slug:"/docker-depolyment/"},frontmatter:{date:"20 January, 2018",title:"Docker Depolyment"}}},{node:{excerpt:"Docker term What is Docker? 소프트웨어를 containerization(컨테이너화) 한 플랫폼. ( 웹서비스 컨테이너 , 디비 컨테이너 따로 담는다고 하면 서로 isolation…",fields:{slug:"/hello-docker/"},frontmatter:{date:"09 January, 2018",title:"Hello Docker"}}}]}},pathContext:{}}}});
//# sourceMappingURL=path---index-10660169ea4589850ff9.js.map