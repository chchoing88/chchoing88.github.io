{"version":3,"sources":["webpack:///path---hello-rebass-622e91016a0655e8f674.js","webpack:///./.cache/json/hello-rebass.json"],"names":["webpackJsonp","512","module","exports","data","site","siteMetadata","title","author","markdownRemark","id","html","frontmatter","date","pathContext","slug"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,MAAQC,cAAgBC,MAAA,kBAAAC,OAAA,cAAgDC,gBAAmBC,GAAA,8HAAAC,KAAA;AAA65oDC,aAAuzCL,MAAA,eAAAM,KAAA,oBAAiDC,aAAgBC,KAAA","file":"path---hello-rebass-622e91016a0655e8f674.js","sourcesContent":["webpackJsonp([106302953868833],{\n\n/***/ 512:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"title\":\"Merlin Tec Blog\",\"author\":\"merlin.ho\"}},\"markdownRemark\":{\"id\":\"/Users/merlin.ho/Documents/workspace/ho_blog/gatsby-blog/src/pages/hello-rebass/index.md absPath of file >>> MarkdownRemark\",\"html\":\"<p>이번 프로젝트에 rebass 라는 <code>React primitive ui component build with styled system</code> 이라는 라이브러리를 사용해보고 정보와 사용 느낀점을 남깁니다.</p>\\n<h2>rebass 란</h2>\\n<p>React에서 사용할 수 있는 UI 원시 컴포넌트들을 지원하는 라이브러리로써 기존의 <code>css-in-js</code> 라이브러리에 <code>styled-system</code>을 이용해서 만들어져 있습니다.</p>\\n<p>즉, css-in-js에 이런 <code>styled-system</code>을 믹싱해서 원시 컴포넌트를 미리 만들어 둔 것이 <code>rebass</code> 입니다.</p>\\n<p>css-in-js : styled-component , @emotion</p>\\n<h2>css-in-js (styled-component, @emotion) 장점</h2>\\n<p>여기서는 별도의 css-in-js 들을 설명하진 않겠습니다. 대신 장점 몇 가지를 나열해 보겠습니다.</p>\\n<ol>\\n<li>셀렉터의 스코프가 전역이 아닙니다. 이 말은, 셀렉터가 겹칠일이 없다는 것입니다.</li>\\n<li>sass 문법을 사용할 수 있습니다. 즉, ’&#x26;’ 단어로 현재 컴포넌트를 나타낼 수 있고 이걸로 부모 , 형재 등등의 선택자들을 셀렉팅 할 수 있습니다.</li>\\n<li>React Context API를 이용해 theme를 적용할 수 있습니다.</li>\\n<li>다이나믹하게 스타일링을 적용할 수 있습니다. 컴포넌트에 props를 전달해서 동적으로 스타일을 정의 할 수 있습니다. 또한 js 특정 값에 따라서 스타일을 쉽게 정의 내릴 수 있습니다.</li>\\n</ol>\\n<p>무엇보다도 컴포넌트 베이스 디자인을 할 수 있고 작은 독립적인 단위로 UI 분할을 하는데 도움을 줍니다.</p>\\n<p>한곳 또한 한 페이지 이상 또는 자주 사용된다면 특정 스타일 또는 디자인을 갖고 있다면 클래스를 만들고 어플리케이션의 다른 영역에서 그 클래스를 사용하는 것보다 하나의 스타일된 컴포넌트를 만들고 특정 컴포넌트를 사용하는 것이 중복된 css를 줄이고 color 또는 공간을 조정하는 것 같은 UI를 약간 변경하는 데 필요한 시간을 줄입니다.  </p>\\n<h2>styled-system 이란</h2>\\n<p><code>Styled System</code>은 <code>constraint-based design system principles</code>에 영향을 받아 비주얼 디자인의 특정 영역 내에서 디자인 제약 스케일을 관리하기 위한 솔루션 입니다.</p>\\n<blockquote>\\n<p>“디자인 시스템은 기본적으로 디자인과 코드로 구현 된 규칙, 제약 조건 및 원칙의 모음입니다.” -Sylvee L.-\\n‘디자인 시스템’이란, 서비스를 만드는데 사용한 공통 컬러, 서체, 인터랙션, 각종 정책 및 규정에 관한 모든 컴포넌트를 정리해놓은 것을 뜻합니다. -배재민 디자이너-</p>\\n</blockquote>\\n<p>예를 들면 폰트의 사이즈, 여백의 사이즈, 컬러, 기타 다른 시각적인 속성들을 theme object로 관리 할 수 있도록 도와줍니다. 이제는 구체적인 디자인 시스템을 포함하는 theme.js 를 사용해서 컴포넌트의 props를 셋팅해주게 됩니다.</p>\\n<p>또한 일관된 스타일을 적용 할 때 올바른 작업을 쉽게 수행 할 수있는 API를 제공하도록 합니다.</p>\\n<h2>rebass 장점</h2>\\n<p><code>rebass</code>는 <code>system-styled</code> 장점을 더욱 간단히 이용 하는 것이라, 아래 장점들은 <code>styled-system</code>의 장점이 되기도 합니다.</p>\\n<ol>\\n<li>가장 작고 견고한 Component 들을 제공합니다.</li>\\n</ol>\\n<p>  컴포넌트 개발시에 기본적으로 제공하는 (Box, Text, Image.. 등등의 컴포넌트를 미리 제공해 줍니다.)</p>\\n<pre class=\\\"editor editor-colors\\\"><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"meta import ts\\\"><span class=\\\"keyword control import ts\\\"><span>import</span></span><span>&nbsp;</span><span class=\\\"meta block ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>{</span></span><span class=\\\"variable other readwrite alias ts\\\"><span>Box</span></span><span class=\\\"punctuation separator comma ts\\\"><span>,</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite alias ts\\\"><span>Text</span></span><span class=\\\"punctuation separator comma ts\\\"><span>,</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite alias ts\\\"><span>Image</span></span><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span><span>&nbsp;</span><span class=\\\"keyword control from ts\\\"><span>from</span></span><span>&nbsp;</span><span class=\\\"string quoted single ts\\\"><span class=\\\"punctuation definition string begin ts\\\"><span>&#39;</span></span><span>rebass</span><span class=\\\"punctuation definition string end ts\\\"><span>&#39;</span></span></span></span></span></div></pre>\\n<ol start=\\\"2\\\">\\n<li>일관 된 컴포넌트의 props 개발</li>\\n</ol>\\n<p>  다음 유지보수시 서로 다른 개발자가 작성한 컴포넌트가 아래의 예시와 같다고 했을 때</p>\\n<pre class=\\\"editor editor-colors\\\"><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"keyword operator relational ts\\\"><span>&lt;</span></span><span class=\\\"variable other readwrite ts\\\"><span>CustomButton1</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>type</span></span><span class=\\\"keyword operator assignment ts\\\"><span>=</span></span><span class=\\\"string quoted double ts\\\"><span class=\\\"punctuation definition string begin ts\\\"><span>&quot;</span></span><span>thin</span><span class=\\\"punctuation definition string end ts\\\"><span>&quot;</span></span></span><span class=\\\"keyword operator arithmetic ts\\\"><span>/</span></span><span class=\\\"keyword operator relational ts\\\"><span>&gt;</span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"keyword operator relational ts\\\"><span>&lt;</span></span><span class=\\\"variable other readwrite ts\\\"><span>CustomButton2</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>thin</span></span><span class=\\\"keyword operator arithmetic ts\\\"><span>/</span></span><span class=\\\"keyword operator relational ts\\\"><span>&gt;</span></span></span></div></pre>\\n<p>  다양한 API 형식을 지니는 컴포넌트를 제작할 수 있으며 이는 곧 또다른 유지보수시 큰 시간을 들이게 됩니다.</p>\\n<p>  반면 rebass를 사용한다면 새롭게 props 를 만들 필요가 없을 뿐더러 다른 개발자가 보아도 쉽게 이해 할 수 있습니다.</p>\\n<pre class=\\\"editor editor-colors\\\"><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"keyword operator relational ts\\\"><span>&lt;</span></span><span class=\\\"variable other readwrite ts\\\"><span>CustomButton1</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>p</span></span><span class=\\\"keyword operator assignment ts\\\"><span>=</span></span><span class=\\\"meta objectliteral ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>{</span></span><span>2</span><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span><span>&nbsp;</span><span class=\\\"keyword operator arithmetic ts\\\"><span>/</span></span><span class=\\\"keyword operator relational ts\\\"><span>&gt;</span></span><span>&nbsp;</span><span class=\\\"comment line double-slash ts\\\"><span class=\\\"punctuation definition comment ts\\\"><span>//</span></span><span>&nbsp;padding&nbsp;이&nbsp;테마의&nbsp;scale의&nbsp;2번째&nbsp;값을&nbsp;적용한다.</span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"keyword operator relational ts\\\"><span>&lt;</span></span><span class=\\\"variable other readwrite ts\\\"><span>CustomButton2</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>p</span></span><span class=\\\"keyword operator assignment ts\\\"><span>=</span></span><span class=\\\"meta objectliteral ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>{</span></span><span>3</span><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span><span>&nbsp;</span><span class=\\\"keyword operator arithmetic ts\\\"><span>/</span></span><span class=\\\"keyword operator relational ts\\\"><span>&gt;</span></span><span>&nbsp;</span><span class=\\\"comment line double-slash ts\\\"><span class=\\\"punctuation definition comment ts\\\"><span>//</span></span><span>&nbsp;padding&nbsp;이&nbsp;테마의&nbsp;scale의&nbsp;3번째&nbsp;값을&nbsp;적용한다.</span></span></span></div></pre>\\n<ol start=\\\"3\\\">\\n<li>테마를 우선순위로 사용하면서 일관된 스타일을 유지</li>\\n</ol>\\n<p>  css-in-js 에서도 테마를 지원하지만 기본적으로 우선시 되지는 않습니다. 하지만 rebass 컴포넌트는 테마를 우선 적용하도록 되어있습니다.</p>\\n<ol start=\\\"4\\\">\\n<li>확장성이 용이</li>\\n</ol>\\n<p>  css-in-js에서 사용하도록 하는 <code>styled()</code> 로 확장하는 컴포넌트는 기존 컴포넌트의 API가 복잡할수록 예측 가능하도록 확장하기가 어렵습니다. 반면 rebass로 확장을 하는 경우에는 예측 가능하도록 설계가 되어 있습니다.</p>\\n<pre class=\\\"editor editor-colors\\\"><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"meta import ts\\\"><span class=\\\"keyword control import ts\\\"><span>import</span></span><span>&nbsp;</span><span class=\\\"meta block ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>{</span></span><span class=\\\"variable other readwrite alias ts\\\"><span>Button</span></span><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span><span>&nbsp;</span><span class=\\\"keyword control from ts\\\"><span>from</span></span><span>&nbsp;</span><span class=\\\"string quoted single ts\\\"><span class=\\\"punctuation definition string begin ts\\\"><span>&#39;</span></span><span>rebass</span><span class=\\\"punctuation definition string end ts\\\"><span>&#39;</span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span>&nbsp;&nbsp;</span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"meta function ts\\\"><span class=\\\"storage type function ts\\\"><span>function</span></span><span>&nbsp;</span><span class=\\\"meta definition function ts entity name function ts\\\"><span>CustomButton</span></span><span class=\\\"meta parameters ts\\\"><span class=\\\"punctuation definition parameters begin ts\\\"><span>(</span></span><span class=\\\"punctuation definition parameters end ts\\\"><span>)</span></span></span><span>&nbsp;</span><span class=\\\"meta block ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>{</span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"keyword control flow ts\\\"><span>return</span></span><span class=\\\"cast expr ts\\\"><span>&nbsp;</span><span class=\\\"meta brace angle ts\\\"><span>&lt;</span></span><span class=\\\"entity name type ts\\\"><span>Button</span></span><span>&nbsp;</span><span class=\\\"entity name type ts\\\"><span>sx</span></span><span>=</span><span class=\\\"meta object type ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>{</span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"cast expr ts\\\"><span class=\\\"meta object type ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"meta field declaration ts\\\"><span class=\\\"meta definition property ts variable object property ts\\\"><span>color</span></span><span class=\\\"meta type annotation ts\\\"><span class=\\\"keyword operator type annotation ts\\\"><span>:</span></span><span>&nbsp;</span><span class=\\\"string quoted single ts\\\"><span class=\\\"punctuation definition string begin ts\\\"><span>&#39;</span></span><span>point</span><span class=\\\"punctuation definition string end ts\\\"><span>&#39;</span></span></span><span>&nbsp;</span></span><span class=\\\"comment line double-slash ts\\\"><span class=\\\"punctuation definition comment ts\\\"><span>//</span></span><span>&nbsp;theme에&nbsp;포인트&nbsp;컬러</span></span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"cast expr ts\\\"><span class=\\\"meta object type ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span><span>&nbsp;/</span><span class=\\\"meta brace angle ts\\\"><span>&gt;</span></span><span>&nbsp;</span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span>&nbsp;&nbsp;</span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"keyword operator relational ts\\\"><span>&lt;</span></span><span class=\\\"variable other readwrite ts\\\"><span>CustomButton</span></span><span>&nbsp;</span><span class=\\\"keyword operator arithmetic ts\\\"><span>/</span></span><span class=\\\"keyword operator relational ts\\\"><span>&gt;</span></span><span>&nbsp;</span><span class=\\\"comment line double-slash ts\\\"><span class=\\\"punctuation definition comment ts\\\"><span>//</span></span><span>&nbsp;일반적으로&nbsp;color는&nbsp;point&nbsp;컬러</span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"keyword operator relational ts\\\"><span>&lt;</span></span><span class=\\\"variable other readwrite ts\\\"><span>CustomButton</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>color</span></span><span class=\\\"keyword operator assignment ts\\\"><span>=</span></span><span class=\\\"meta objectliteral ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>{</span></span><span class=\\\"meta object member ts meta object-literal key ts\\\"><span class=\\\"string quoted single ts\\\"><span class=\\\"punctuation definition string begin ts\\\"><span>&#39;</span></span><span>red</span><span class=\\\"punctuation definition string end ts\\\"><span>&#39;</span></span></span><span>}&nbsp;/&gt;&nbsp;//&nbsp;red&nbsp;color로&nbsp;수정</span></span></span></span></div></pre>\\n<h2>추후 theme를 잘 쓰기 위한 노력</h2>\\n<p>스타일에 대한 적절한 추상화 작업이 필요합니다. 최대한 추상화로 정의 내릴 수 있는 디자인은 모두 theme에 녹여내는 작업이 필요 합니다.</p>\\n<p>디자인을 보고 더 이상 쪼갤 수 없는 스타일 요소들을 분류하고 한 스타일 요소에 최대 n개가 넘지 않는 선에서 추상화를 시킵니다.</p>\\n<p>ex) borderRadius 의 경우 smallRadius, mediumRadius, largeRadius</p>\\n<p>이렇게 theme.js 에 디자인 명세를 작성하면 페이지에 들어가는 컴포넌트들은 될 수 있으면 이 명세에 따르도록 만듭니다.\\n피치 못할 경우에는 각 컴포넌트에서 필요한 스타일을 추가 및 오버라이딩 해서 적용합니다.</p>\\n<ol>\\n<li>디자인 가이드로 준 수치는 모두 theme.js 로 설정해 둔다.</li>\\n<li>theme에 있는 수치들은 sx props로 셋팅한다.</li>\\n<li>보통은 atoms 단위에 있는 컴포넌트는 sx로 셋팅한다. ( 다른 컴포넌트에서 확장시 css props로 확장 )</li>\\n<li>moleculos 이상부터는 공간부분을 대부분 theme에서 가져다 쓴다.</li>\\n<li>나머지는 css로 사용하되 json 또는 styled-component의 css helper를 이용하면 간단하게 이용할 수 있을 듯 싶다.</li>\\n</ol>\\n<h2>rebass + typescript</h2>\\n<p>rebass와 typecript를 함께 썼을때 이슈로는 다음과 같습니다.</p>\\n<p>rebass는 css-in-js를 <code>@emotion</code> 기반으로 사용하고 <code>styled-system</code>을 사용하는 것으로 github에서 보았습니다.</p>\\n<pre class=\\\"editor editor-colors\\\"><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"meta import ts\\\"><span class=\\\"keyword control import ts\\\"><span>import</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite alias ts\\\"><span>styled</span></span><span>&nbsp;</span><span class=\\\"keyword control from ts\\\"><span>from</span></span><span>&nbsp;</span><span class=\\\"string quoted single ts\\\"><span class=\\\"punctuation definition string begin ts\\\"><span>&#39;</span></span><span>@emotion/styled</span><span class=\\\"punctuation definition string end ts\\\"><span>&#39;</span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span>&nbsp;&nbsp;</span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"meta var expr ts\\\"><span class=\\\"keyword control export ts\\\"><span>export</span></span><span>&nbsp;</span><span class=\\\"storage type ts\\\"><span>const</span></span><span>&nbsp;</span><span class=\\\"meta var-single-variable expr ts\\\"><span class=\\\"meta definition variable ts variable other readwrite ts\\\"><span>Box</span></span><span>&nbsp;</span></span><span class=\\\"keyword operator assignment ts\\\"><span>=</span></span><span>&nbsp;</span><span class=\\\"meta function-call ts\\\"><span class=\\\"entity name function ts\\\"><span>styled</span></span></span><span class=\\\"meta brace round ts\\\"><span>(</span></span><span class=\\\"string quoted single ts\\\"><span class=\\\"punctuation definition string begin ts\\\"><span>&#39;</span></span><span>div</span><span class=\\\"punctuation definition string end ts\\\"><span>&#39;</span></span></span><span class=\\\"punctuation separator comma ts\\\"><span>,</span></span><span>&nbsp;</span><span class=\\\"meta objectliteral ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>{</span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta var expr ts\\\"><span class=\\\"meta objectliteral ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"meta object member ts\\\"><span class=\\\"variable other readwrite ts\\\"><span>shouldForwardProp</span></span><span>&nbsp;</span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta var expr ts\\\"><span class=\\\"meta objectliteral ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span><span class=\\\"meta brace round ts\\\"><span>)</span><span>(</span></span><span class=\\\"meta objectliteral ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>{</span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta var expr ts\\\"><span class=\\\"meta objectliteral ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"meta object member ts\\\"><span class=\\\"meta object-literal key ts\\\"><span>boxSizing</span></span><span class=\\\"meta object-literal key ts punctuation separator key-value ts\\\"><span>:</span></span><span>&nbsp;</span><span class=\\\"string quoted single ts\\\"><span class=\\\"punctuation definition string begin ts\\\"><span>&#39;</span></span><span>border-box</span><span class=\\\"punctuation definition string end ts\\\"><span>&#39;</span></span></span></span><span class=\\\"punctuation separator comma ts\\\"><span>,</span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta var expr ts\\\"><span class=\\\"meta objectliteral ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"meta object member ts\\\"><span class=\\\"meta object-literal key ts\\\"><span>margin</span></span><span class=\\\"meta object-literal key ts punctuation separator key-value ts\\\"><span>:</span></span><span>&nbsp;</span><span class=\\\"constant numeric decimal ts\\\"><span>0</span></span></span><span class=\\\"punctuation separator comma ts\\\"><span>,</span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta var expr ts\\\"><span class=\\\"meta objectliteral ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"meta object member ts\\\"><span class=\\\"meta object-literal key ts\\\"><span>minWidth</span></span><span class=\\\"meta object-literal key ts punctuation separator key-value ts\\\"><span>:</span></span><span>&nbsp;</span><span class=\\\"constant numeric decimal ts\\\"><span>0</span></span></span><span class=\\\"punctuation separator comma ts\\\"><span>,</span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta var expr ts\\\"><span class=\\\"meta objectliteral ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span><span class=\\\"punctuation separator comma ts\\\"><span>,</span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta var expr ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>base</span></span><span class=\\\"punctuation separator comma ts\\\"><span>,</span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta var expr ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>variant</span></span><span class=\\\"punctuation separator comma ts\\\"><span>,</span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta var expr ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>sx</span></span><span class=\\\"punctuation separator comma ts\\\"><span>,</span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta var expr ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"meta arrow ts\\\"><span class=\\\"variable parameter ts\\\"><span>props</span></span><span>&nbsp;</span><span class=\\\"storage type function arrow ts\\\"><span>=&gt;</span></span><span>&nbsp;</span></span><span class=\\\"variable other object ts\\\"><span>props</span></span><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"variable other property ts\\\"><span>css</span></span><span class=\\\"punctuation separator comma ts\\\"><span>,</span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta var expr ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"meta function-call ts\\\"><span class=\\\"entity name function ts\\\"><span>compose</span></span></span><span class=\\\"meta brace round ts\\\"><span>(</span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta var expr ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>space</span></span><span class=\\\"punctuation separator comma ts\\\"><span>,</span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta var expr ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>layout</span></span><span class=\\\"punctuation separator comma ts\\\"><span>,</span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta var expr ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>typography</span></span><span class=\\\"punctuation separator comma ts\\\"><span>,</span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta var expr ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>color</span></span><span class=\\\"punctuation separator comma ts\\\"><span>,</span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta var expr ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>flexbox</span></span><span class=\\\"punctuation separator comma ts\\\"><span>,</span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta var expr ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"meta brace round ts\\\"><span>)</span></span><span class=\\\"punctuation separator comma ts\\\"><span>,</span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta var expr ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"meta brace round ts\\\"><span>)</span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span>&nbsp;&nbsp;</span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"meta interface ts\\\"><span class=\\\"storage type interface ts\\\"><span>interface</span></span><span>&nbsp;</span><span class=\\\"entity name type interface ts\\\"><span>BoxKnownProps</span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta interface ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"storage modifier ts\\\"><span>extends</span></span><span>&nbsp;</span><span class=\\\"entity other inherited-class ts\\\"><span>BaseProps</span></span><span class=\\\"punctuation separator comma ts\\\"><span>,</span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta interface ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"entity name type module ts\\\"><span>StyledSystem</span></span><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"entity other inherited-class ts\\\"><span>SpaceProps</span></span><span class=\\\"punctuation separator comma ts\\\"><span>,</span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta interface ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"entity name type module ts\\\"><span>StyledSystem</span></span><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"entity other inherited-class ts\\\"><span>LayoutProps</span></span><span class=\\\"punctuation separator comma ts\\\"><span>,</span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta interface ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"entity name type module ts\\\"><span>StyledSystem</span></span><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"entity other inherited-class ts\\\"><span>FontSizeProps</span></span><span class=\\\"punctuation separator comma ts\\\"><span>,</span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta interface ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"entity name type module ts\\\"><span>StyledSystem</span></span><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"entity other inherited-class ts\\\"><span>ColorProps</span></span><span class=\\\"punctuation separator comma ts\\\"><span>,</span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta interface ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"entity name type module ts\\\"><span>StyledSystem</span></span><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"entity other inherited-class ts\\\"><span>FlexProps</span></span><span class=\\\"punctuation separator comma ts\\\"><span>,</span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta interface ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"entity name type module ts\\\"><span>StyledSystem</span></span><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"entity other inherited-class ts\\\"><span>OrderProps</span></span><span class=\\\"punctuation separator comma ts\\\"><span>,</span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta interface ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"entity name type module ts\\\"><span>StyledSystem</span></span><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"entity other inherited-class ts\\\"><span>AlignSelfProps</span></span><span class=\\\"punctuation separator comma ts\\\"><span>,</span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta interface ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"entity other inherited-class ts\\\"><span>SxProps</span></span><span>&nbsp;</span><span class=\\\"punctuation definition block ts\\\"><span>{</span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta interface ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"meta field declaration ts\\\"><span class=\\\"meta definition property ts variable object property ts\\\"><span>variant</span></span><span class=\\\"keyword operator optional ts\\\"><span>?</span></span><span class=\\\"meta type annotation ts\\\"><span class=\\\"keyword operator type annotation ts\\\"><span>:</span></span><span>&nbsp;</span><span class=\\\"entity name type module ts\\\"><span>StyledSystem</span></span><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"entity name type ts\\\"><span>ResponsiveValue</span></span><span class=\\\"meta type parameters ts\\\"><span class=\\\"punctuation definition typeparameters begin ts\\\"><span>&lt;</span></span><span class=\\\"support type primitive ts\\\"><span>string</span></span><span class=\\\"punctuation definition typeparameters end ts\\\"><span>&gt;</span></span></span></span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta interface ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"meta field declaration ts\\\"><span class=\\\"meta definition property ts variable object property ts\\\"><span>tx</span></span><span class=\\\"keyword operator optional ts\\\"><span>?</span></span><span class=\\\"meta type annotation ts\\\"><span class=\\\"keyword operator type annotation ts\\\"><span>:</span></span><span>&nbsp;</span><span class=\\\"support type primitive ts\\\"><span>string</span></span></span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta interface ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"meta interface ts\\\"><span class=\\\"keyword control export ts\\\"><span>export</span></span><span>&nbsp;</span><span class=\\\"storage type interface ts\\\"><span>interface</span></span><span>&nbsp;</span><span class=\\\"entity name type interface ts\\\"><span>BoxProps</span></span><span>&nbsp;</span><span class=\\\"storage modifier ts\\\"><span>extends</span></span><span>&nbsp;</span><span class=\\\"entity other inherited-class ts\\\"><span>BoxKnownProps</span></span><span class=\\\"punctuation separator comma ts\\\"><span>,</span></span><span>&nbsp;</span><span class=\\\"entity other inherited-class ts\\\"><span>Omit</span></span><span class=\\\"meta type parameters ts\\\"><span class=\\\"punctuation definition typeparameters begin ts\\\"><span>&lt;</span></span><span class=\\\"entity name type module ts\\\"><span>React</span></span><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"entity name type ts\\\"><span>HTMLProps</span></span><span class=\\\"meta type parameters ts\\\"><span class=\\\"punctuation definition typeparameters begin ts\\\"><span>&lt;</span></span><span class=\\\"entity name type ts\\\"><span>HTMLDivElement</span></span><span class=\\\"punctuation definition typeparameters end ts\\\"><span>&gt;</span></span></span><span class=\\\"punctuation separator comma ts\\\"><span>,</span></span><span>&nbsp;</span><span class=\\\"keyword operator expression keyof ts\\\"><span>keyof</span></span><span>&nbsp;</span><span class=\\\"entity name type ts\\\"><span>BoxKnownProps</span></span><span class=\\\"punctuation definition typeparameters end ts\\\"><span>&gt;</span></span></span><span>&nbsp;</span><span class=\\\"punctuation definition block ts\\\"><span>{</span><span>}</span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"meta var expr ts\\\"><span class=\\\"keyword control export ts\\\"><span>export</span></span><span>&nbsp;</span><span class=\\\"storage type ts\\\"><span>const</span></span><span>&nbsp;</span><span class=\\\"meta var-single-variable expr ts\\\"><span class=\\\"meta definition variable ts variable other readwrite ts\\\"><span>Box</span></span><span class=\\\"meta type annotation ts\\\"><span class=\\\"keyword operator type annotation ts\\\"><span>:</span></span><span>&nbsp;</span><span class=\\\"entity name type module ts\\\"><span>React</span></span><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"entity name type ts\\\"><span>FunctionComponent</span></span><span class=\\\"meta type parameters ts\\\"><span class=\\\"punctuation definition typeparameters begin ts\\\"><span>&lt;</span></span><span class=\\\"entity name type ts\\\"><span>BoxProps</span></span><span class=\\\"punctuation definition typeparameters end ts\\\"><span>&gt;</span></span></span></span></span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></div></pre>\\n<p>하지만 다른 컴포넌트에서 <code>@emotion/core</code>를 import 할 경우 css에 대한 충돌이 발생 합니다.</p>\\n<p><code>@emotion/core</code> 에서 사용하는 css type 은</p>\\n<pre class=\\\"editor editor-colors\\\"><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"storage modifier ts\\\"><span>declare</span></span><span>&nbsp;</span><span class=\\\"support variable object node ts\\\"><span>global</span></span><span>&nbsp;</span><span class=\\\"meta block ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>{</span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"meta namespace declaration ts\\\"><span class=\\\"storage type namespace ts\\\"><span>namespace</span></span><span>&nbsp;</span><span class=\\\"entity name type module ts\\\"><span>JSX</span></span><span>&nbsp;</span><span class=\\\"meta block ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>{</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta namespace declaration ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"comment block documentation ts\\\"><span class=\\\"punctuation definition comment ts\\\"><span>/**</span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta namespace declaration ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"comment block documentation ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;Do&nbsp;we&nbsp;need&nbsp;to&nbsp;modify&nbsp;`LibraryManagedAttributes`&nbsp;too,</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta namespace declaration ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"comment block documentation ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;to&nbsp;make&nbsp;`className`&nbsp;props&nbsp;optional&nbsp;when&nbsp;`css`&nbsp;props&nbsp;is&nbsp;specified?</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta namespace declaration ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"comment block documentation ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"punctuation definition comment ts\\\"><span>*/</span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta namespace declaration ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;</span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta namespace declaration ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"meta interface ts\\\"><span class=\\\"storage type interface ts\\\"><span>interface</span></span><span>&nbsp;</span><span class=\\\"entity name type interface ts\\\"><span>IntrinsicAttributes</span></span><span>&nbsp;</span><span class=\\\"punctuation definition block ts\\\"><span>{</span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta namespace declaration ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta interface ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"meta field declaration ts\\\"><span class=\\\"meta definition property ts variable object property ts\\\"><span>css</span></span><span class=\\\"keyword operator optional ts\\\"><span>?</span></span><span class=\\\"meta type annotation ts\\\"><span class=\\\"keyword operator type annotation ts\\\"><span>:</span></span><span>&nbsp;</span><span class=\\\"entity name type ts\\\"><span>InterpolationWithTheme</span></span><span class=\\\"meta type parameters ts\\\"><span class=\\\"punctuation definition typeparameters begin ts\\\"><span>&lt;</span></span><span class=\\\"support type primitive ts\\\"><span>any</span></span><span class=\\\"punctuation definition typeparameters end ts\\\"><span>&gt;</span></span></span></span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta namespace declaration ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta interface ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta namespace declaration ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span></span></div></pre>\\n<p>rebass 의 css type을 살펴보면</p>\\n<pre class=\\\"editor editor-colors\\\"><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"meta import ts\\\"><span class=\\\"keyword control import ts\\\"><span>import</span></span><span>&nbsp;</span><span class=\\\"constant language import-export-all ts\\\"><span>*</span></span><span>&nbsp;</span><span class=\\\"keyword control as ts\\\"><span>as</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite alias ts\\\"><span>StyledComponents</span></span><span>&nbsp;</span><span class=\\\"keyword control from ts\\\"><span>from</span></span><span>&nbsp;</span><span class=\\\"string quoted single ts\\\"><span class=\\\"punctuation definition string begin ts\\\"><span>&#39;</span></span><span>styled-components</span><span class=\\\"punctuation definition string end ts\\\"><span>&#39;</span></span></span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span>&nbsp;&nbsp;</span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"meta interface ts\\\"><span class=\\\"keyword control export ts\\\"><span>export</span></span><span>&nbsp;</span><span class=\\\"storage type interface ts\\\"><span>interface</span></span><span>&nbsp;</span><span class=\\\"entity name type interface ts\\\"><span>BaseProps</span></span><span>&nbsp;</span><span class=\\\"storage modifier ts\\\"><span>extends</span></span><span>&nbsp;</span><span class=\\\"entity name type module ts\\\"><span>React</span></span><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"entity other inherited-class ts\\\"><span>RefAttributes</span></span><span class=\\\"meta type parameters ts\\\"><span class=\\\"punctuation definition typeparameters begin ts\\\"><span>&lt;</span></span><span class=\\\"support type primitive ts\\\"><span>any</span></span><span class=\\\"punctuation definition typeparameters end ts\\\"><span>&gt;</span></span></span><span>&nbsp;</span><span class=\\\"punctuation definition block ts\\\"><span>{</span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta interface ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"meta field declaration ts\\\"><span class=\\\"meta definition property ts variable object property ts\\\"><span>as</span></span><span class=\\\"keyword operator optional ts\\\"><span>?</span></span><span class=\\\"meta type annotation ts\\\"><span class=\\\"keyword operator type annotation ts\\\"><span>:</span></span><span>&nbsp;</span><span class=\\\"entity name type module ts\\\"><span>React</span></span><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"entity name type ts\\\"><span>ElementType</span></span></span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta interface ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"meta field declaration ts\\\"><span class=\\\"meta definition property ts variable object property ts\\\"><span>css</span></span><span class=\\\"keyword operator optional ts\\\"><span>?</span></span><span class=\\\"meta type annotation ts\\\"><span class=\\\"keyword operator type annotation ts\\\"><span>:</span></span><span>&nbsp;</span><span class=\\\"entity name type module ts\\\"><span>StyledComponents</span></span><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"entity name type ts\\\"><span>CSSObject</span></span><span>&nbsp;</span><span class=\\\"keyword operator type ts\\\"><span>|</span></span><span>&nbsp;</span><span class=\\\"entity name type module ts\\\"><span>StyledComponents</span></span><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"entity name type ts\\\"><span>FlattenSimpleInterpolation</span></span><span>&nbsp;</span><span class=\\\"keyword operator type ts\\\"><span>|</span></span><span>&nbsp;</span><span class=\\\"support type primitive ts\\\"><span>string</span></span></span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta interface ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span></span></div></pre>\\n<p>여기서 rebass의 css props는 왜 StyledComponents 를 아직도 type으로 지정하는지는 아직 파악이 안됩니다.</p>\\n<h2>rebass 느낀점</h2>\\n<p>디자이너가 있다면 어느정도 디자인에 대한 <code>system</code>을 만들어 두고 시작하면 좀 더 손쉽게 쓸 수 있을거 같습니다.\\n여기서 디자인 <code>system</code>은 간단하게 디자인 가이드 정도 생각하면 될 듯 싶습니다.\\n스타일 어디까지를 테마로 뺴두어야 할지의 경계를 정하지 못한다면 theme.js가 자칫 의미가 없어질 수 있습니다.</p>\\n<p>장점을 정리해보면 다음과 같습니다.</p>\\n<ol>\\n<li>테마를 우선순위로</li>\\n<li>일관된 props ( 모양과 행동으로 구체적인 props를 갖는게 좋음.)</li>\\n<li>컴포넌트의 계층 구조를 손쉽게 생각할 수 있게 해줌.</li>\\n<li>컴포넌트 확장에 용이</li>\\n</ol>\\n<h3>아쉬웠던 점</h3>\\n<p>css-in-js 들에는 develop 할 경우 css 네이밍을 개발자가 정해놓은 룰에 따라서 네이밍을 붙여주기도 합니다.</p>\\n<p>특히 <code>@emotion</code> 에서는 <a href=\\\"https://emotion.sh/docs/babel-plugin-emotion\\\">https://emotion.sh/docs/babel-plugin-emotion</a> 를 사용하면 css 네이밍을 붙여줍니다.</p>\\n<p>이는 개발자 도구에서도 어느 컴포넌트에서 렌더링이 되었는지 한눈에 알아 볼 수 있습니다.</p>\\n<ul>\\n<li><code>rebass</code>에서 <code>@emotion/styled</code> 를 사용하고 있어서 위 플러그인을 사용함.</li>\\n</ul>\\n<p>하지만 <code>rebass</code> 에서는 다음의 경우에만 css 네이밍을 붙여 줍니다.</p>\\n<ol>\\n<li>props로 css 속성이 들어간 컴포넌트 : babel config에 정해진 룰대로 자동으로 css 네이밍을 붙여줍니다.</li>\\n<li>sx props 안에 label property가 존재하는 경우 : label의 값으로 css 네이밍을 붙여줍니다.</li>\\n</ol>\\n<h2>styled component로 비슷하게 만들어 보기</h2>\\n<p>추가적으로 테마를 사용하지 않을 경우에 styled component 모듈로도 이렇게 primitive UI Component를 만들어 볼 수 있을 것이다.</p>\\n<p>해서 한번 도전해 보았다.\\n쉬운 <code>Atom</code>의 <code>Box Component</code> 는 다음과 같이 만들 수 있을 꺼 같습니다.</p>\\n<pre class=\\\"editor editor-colors\\\"><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta import ts\\\"><span class=\\\"keyword control import ts\\\"><span>import</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite alias ts\\\"><span>React</span></span><span>&nbsp;</span><span class=\\\"keyword control from ts\\\"><span>from</span></span><span>&nbsp;</span><span class=\\\"string quoted double ts\\\"><span class=\\\"punctuation definition string begin ts\\\"><span>&quot;</span></span><span>react</span><span class=\\\"punctuation definition string end ts\\\"><span>&quot;</span></span></span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta import ts\\\"><span class=\\\"keyword control import ts\\\"><span>import</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite alias ts\\\"><span>styled</span></span><span class=\\\"punctuation separator comma ts\\\"><span>,</span></span><span>&nbsp;</span><span class=\\\"meta block ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>{</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite alias ts\\\"><span>FlattenSimpleInterpolation</span></span><span>&nbsp;</span><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span><span>&nbsp;</span><span class=\\\"keyword control from ts\\\"><span>from</span></span><span>&nbsp;</span><span class=\\\"string quoted double ts\\\"><span class=\\\"punctuation definition string begin ts\\\"><span>&quot;</span></span><span>styled-components</span><span class=\\\"punctuation definition string end ts\\\"><span>&quot;</span></span></span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span>&nbsp;</span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta type declaration ts\\\"><span class=\\\"storage type type ts\\\"><span>type</span></span><span>&nbsp;</span><span class=\\\"entity name type alias ts\\\"><span>BoxProps</span></span><span>&nbsp;</span><span class=\\\"keyword operator assignment ts\\\"><span>=</span></span><span>&nbsp;</span><span class=\\\"meta object type ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>{</span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta type declaration ts\\\"><span class=\\\"meta object type ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"meta field declaration ts\\\"><span class=\\\"meta definition property ts variable object property ts\\\"><span>children</span></span><span class=\\\"keyword operator optional ts\\\"><span>?</span></span><span class=\\\"meta type annotation ts\\\"><span class=\\\"keyword operator type annotation ts\\\"><span>:</span></span><span>&nbsp;</span><span class=\\\"entity name type module ts\\\"><span>React</span></span><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"entity name type ts\\\"><span>ReactNode</span></span></span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta type declaration ts\\\"><span class=\\\"meta object type ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"meta field declaration ts\\\"><span class=\\\"meta definition property ts variable object property ts\\\"><span>css</span></span><span class=\\\"keyword operator optional ts\\\"><span>?</span></span><span class=\\\"meta type annotation ts\\\"><span class=\\\"keyword operator type annotation ts\\\"><span>:</span></span><span>&nbsp;</span><span class=\\\"entity name type ts\\\"><span>FlattenSimpleInterpolation</span></span></span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta type declaration ts\\\"><span class=\\\"meta object type ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta type declaration ts\\\"><span class=\\\"storage type type ts\\\"><span>type</span></span><span>&nbsp;</span><span class=\\\"entity name type alias ts\\\"><span>BoxStyledProps</span></span><span>&nbsp;</span><span class=\\\"keyword operator assignment ts\\\"><span>=</span></span><span>&nbsp;</span><span class=\\\"meta object type ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>{</span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta type declaration ts\\\"><span class=\\\"meta object type ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"meta field declaration ts\\\"><span class=\\\"meta definition property ts variable object property ts\\\"><span>css</span></span><span class=\\\"keyword operator optional ts\\\"><span>?</span></span><span class=\\\"meta type annotation ts\\\"><span class=\\\"keyword operator type annotation ts\\\"><span>:</span></span><span>&nbsp;</span><span class=\\\"entity name type ts\\\"><span>FlattenSimpleInterpolation</span></span></span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta type declaration ts\\\"><span class=\\\"meta object type ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span>&nbsp;</span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta var expr ts\\\"><span class=\\\"storage type ts\\\"><span>const</span></span><span>&nbsp;</span><span class=\\\"meta var-single-variable expr ts\\\"><span class=\\\"meta definition variable ts variable other readwrite ts\\\"><span>BoxStyled</span></span><span>&nbsp;</span></span><span class=\\\"keyword operator assignment ts\\\"><span>=</span></span><span>&nbsp;</span><span class=\\\"variable other object ts\\\"><span>styled</span></span><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"variable other property ts\\\"><span>div</span></span><span class=\\\"keyword operator relational ts\\\"><span>&lt;</span></span><span class=\\\"variable other readwrite ts\\\"><span>BoxStyledProps</span></span><span class=\\\"keyword operator relational ts\\\"><span>&gt;</span></span><span class=\\\"string template ts\\\"><span class=\\\"punctuation definition string template begin ts\\\"><span>`</span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta var expr ts\\\"><span class=\\\"string template ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"meta template expression ts\\\"><span class=\\\"punctuation definition template-expression begin ts\\\"><span>${</span></span><span class=\\\"meta embedded line ts\\\"><span class=\\\"meta arrow ts\\\"><span class=\\\"variable parameter ts\\\"><span>props</span></span><span>&nbsp;</span><span class=\\\"storage type function arrow ts\\\"><span>=&gt;</span></span><span>&nbsp;</span></span><span class=\\\"meta brace round ts\\\"><span>(</span></span><span class=\\\"variable other object ts\\\"><span>props</span></span><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"variable other property ts\\\"><span>css</span></span><span>&nbsp;</span><span class=\\\"keyword operator ternary ts\\\"><span>?</span></span><span>&nbsp;</span><span class=\\\"variable other object ts\\\"><span>props</span></span><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"variable other property ts\\\"><span>css</span></span><span>&nbsp;</span><span class=\\\"keyword operator ternary ts\\\"><span>:</span></span><span>&nbsp;</span><span class=\\\"string quoted double ts\\\"><span class=\\\"punctuation definition string begin ts\\\"><span>&quot;</span></span><span class=\\\"punctuation definition string end ts\\\"><span>&quot;</span></span></span><span class=\\\"meta brace round ts\\\"><span>)</span></span></span><span class=\\\"punctuation definition template-expression end ts\\\"><span>}</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta var expr ts\\\"><span class=\\\"string template ts\\\"><span class=\\\"punctuation definition string template end ts\\\"><span>`</span></span></span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span>&nbsp;</span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"storage type function ts\\\"><span>function</span></span><span>&nbsp;</span><span class=\\\"meta definition function ts entity name function ts\\\"><span>Box</span></span><span class=\\\"meta parameters ts\\\"><span class=\\\"punctuation definition parameters begin ts\\\"><span>(</span></span><span class=\\\"meta parameter object-binding-pattern ts\\\"><span class=\\\"punctuation definition binding-pattern object ts\\\"><span>{</span></span><span>&nbsp;</span><span class=\\\"variable parameter ts\\\"><span>children</span></span><span class=\\\"punctuation separator comma ts\\\"><span>,</span></span><span>&nbsp;</span><span class=\\\"variable parameter ts\\\"><span>css</span></span><span>&nbsp;</span><span class=\\\"punctuation definition binding-pattern object ts\\\"><span>}</span></span></span><span class=\\\"meta type annotation ts\\\"><span class=\\\"keyword operator type annotation ts\\\"><span>:</span></span><span>&nbsp;</span><span class=\\\"entity name type ts\\\"><span>BoxProps</span></span></span><span class=\\\"punctuation definition parameters end ts\\\"><span>)</span></span></span><span>&nbsp;</span><span class=\\\"meta block ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>{</span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"keyword control flow ts\\\"><span>return</span></span><span class=\\\"cast expr ts\\\"><span>&nbsp;</span><span class=\\\"meta brace angle ts\\\"><span>&lt;</span></span><span class=\\\"entity name type ts\\\"><span>BoxStyled</span></span><span>&nbsp;</span><span class=\\\"entity name type ts\\\"><span>css</span></span><span>=</span><span class=\\\"meta object type ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>{</span></span><span class=\\\"entity name type ts\\\"><span>css</span></span><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span><span class=\\\"meta brace angle ts\\\"><span>&gt;</span></span></span><span class=\\\"meta block ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>{</span></span><span class=\\\"variable other readwrite ts\\\"><span>children</span></span><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span><span class=\\\"keyword operator relational ts\\\"><span>&lt;</span></span><span class=\\\"keyword operator arithmetic ts\\\"><span>/</span></span><span class=\\\"variable other readwrite ts\\\"><span>BoxStyled</span></span><span class=\\\"keyword operator relational ts\\\"><span>&gt;</span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span>&nbsp;</span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta export default ts\\\"><span class=\\\"keyword control export ts\\\"><span>export</span></span><span>&nbsp;</span><span class=\\\"keyword control default ts\\\"><span>default</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>Box</span></span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></div></pre>\\n<h2>참고</h2>\\n<p>styled-system 사용법 : <a href=\\\"https://varun.ca/styled-system/\\\">https://varun.ca/styled-system/</a></p>\\n<p>styled-component와 styled-system을 함께 사용했을때 이점 : <a href=\\\"https://medium.com/styled-components/build-better-component-libraries-with-styled-system-4951653d54ee\\\">https://medium.com/styled-components/build-better-component-libraries-with-styled-system-4951653d54ee</a></p>\\n<p>styled-system 신조 : <a href=\\\"https://jxnblk.com/blog/the-three-tenets-of-styled-system/\\\">https://jxnblk.com/blog/the-three-tenets-of-styled-system/</a></p>\\n<p>디자인 시스템 1 : <a href=\\\"https://medium.muz.li/what-is-a-design-system-1e43d19e7696\\\">https://medium.muz.li/what-is-a-design-system-1e43d19e7696</a></p>\\n<p>디자인 시스템 2 : <a href=\\\"https://medium.com/sketch-app-sources/design-system-principles-service-design-c3e439666b97\\\">https://medium.com/sketch-app-sources/design-system-principles-service-design-c3e439666b97</a></p>\\n<p>디자인 시스템 3 : <a href=\\\"https://medium.com/guleum/%EB%94%94%EC%9E%90%EC%9D%B8-%EC%8B%9C%EC%8A%A4%ED%85%9C%EC%9D%84-%EA%B5%AC%EC%84%B1%ED%95%98%EB%8A%94-%EB%B0%A9%EB%B2%95-beefa8214884\\\">https://medium.com/guleum/%EB%94%94%EC%9E%90%EC%9D%B8-%EC%8B%9C%EC%8A%A4%ED%85%9C%EC%9D%84-%EA%B5%AC%EC%84%B1%ED%95%98%EB%8A%94-%EB%B0%A9%EB%B2%95-beefa8214884</a></p>\",\"frontmatter\":{\"title\":\"Hello rebass\",\"date\":\"March 09, 2020\"}}},\"pathContext\":{\"slug\":\"/hello-rebass/\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---hello-rebass-622e91016a0655e8f674.js","module.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"title\":\"Merlin Tec Blog\",\"author\":\"merlin.ho\"}},\"markdownRemark\":{\"id\":\"/Users/merlin.ho/Documents/workspace/ho_blog/gatsby-blog/src/pages/hello-rebass/index.md absPath of file >>> MarkdownRemark\",\"html\":\"<p>이번 프로젝트에 rebass 라는 <code>React primitive ui component build with styled system</code> 이라는 라이브러리를 사용해보고 정보와 사용 느낀점을 남깁니다.</p>\\n<h2>rebass 란</h2>\\n<p>React에서 사용할 수 있는 UI 원시 컴포넌트들을 지원하는 라이브러리로써 기존의 <code>css-in-js</code> 라이브러리에 <code>styled-system</code>을 이용해서 만들어져 있습니다.</p>\\n<p>즉, css-in-js에 이런 <code>styled-system</code>을 믹싱해서 원시 컴포넌트를 미리 만들어 둔 것이 <code>rebass</code> 입니다.</p>\\n<p>css-in-js : styled-component , @emotion</p>\\n<h2>css-in-js (styled-component, @emotion) 장점</h2>\\n<p>여기서는 별도의 css-in-js 들을 설명하진 않겠습니다. 대신 장점 몇 가지를 나열해 보겠습니다.</p>\\n<ol>\\n<li>셀렉터의 스코프가 전역이 아닙니다. 이 말은, 셀렉터가 겹칠일이 없다는 것입니다.</li>\\n<li>sass 문법을 사용할 수 있습니다. 즉, ’&#x26;’ 단어로 현재 컴포넌트를 나타낼 수 있고 이걸로 부모 , 형재 등등의 선택자들을 셀렉팅 할 수 있습니다.</li>\\n<li>React Context API를 이용해 theme를 적용할 수 있습니다.</li>\\n<li>다이나믹하게 스타일링을 적용할 수 있습니다. 컴포넌트에 props를 전달해서 동적으로 스타일을 정의 할 수 있습니다. 또한 js 특정 값에 따라서 스타일을 쉽게 정의 내릴 수 있습니다.</li>\\n</ol>\\n<p>무엇보다도 컴포넌트 베이스 디자인을 할 수 있고 작은 독립적인 단위로 UI 분할을 하는데 도움을 줍니다.</p>\\n<p>한곳 또한 한 페이지 이상 또는 자주 사용된다면 특정 스타일 또는 디자인을 갖고 있다면 클래스를 만들고 어플리케이션의 다른 영역에서 그 클래스를 사용하는 것보다 하나의 스타일된 컴포넌트를 만들고 특정 컴포넌트를 사용하는 것이 중복된 css를 줄이고 color 또는 공간을 조정하는 것 같은 UI를 약간 변경하는 데 필요한 시간을 줄입니다.  </p>\\n<h2>styled-system 이란</h2>\\n<p><code>Styled System</code>은 <code>constraint-based design system principles</code>에 영향을 받아 비주얼 디자인의 특정 영역 내에서 디자인 제약 스케일을 관리하기 위한 솔루션 입니다.</p>\\n<blockquote>\\n<p>“디자인 시스템은 기본적으로 디자인과 코드로 구현 된 규칙, 제약 조건 및 원칙의 모음입니다.” -Sylvee L.-\\n‘디자인 시스템’이란, 서비스를 만드는데 사용한 공통 컬러, 서체, 인터랙션, 각종 정책 및 규정에 관한 모든 컴포넌트를 정리해놓은 것을 뜻합니다. -배재민 디자이너-</p>\\n</blockquote>\\n<p>예를 들면 폰트의 사이즈, 여백의 사이즈, 컬러, 기타 다른 시각적인 속성들을 theme object로 관리 할 수 있도록 도와줍니다. 이제는 구체적인 디자인 시스템을 포함하는 theme.js 를 사용해서 컴포넌트의 props를 셋팅해주게 됩니다.</p>\\n<p>또한 일관된 스타일을 적용 할 때 올바른 작업을 쉽게 수행 할 수있는 API를 제공하도록 합니다.</p>\\n<h2>rebass 장점</h2>\\n<p><code>rebass</code>는 <code>system-styled</code> 장점을 더욱 간단히 이용 하는 것이라, 아래 장점들은 <code>styled-system</code>의 장점이 되기도 합니다.</p>\\n<ol>\\n<li>가장 작고 견고한 Component 들을 제공합니다.</li>\\n</ol>\\n<p>  컴포넌트 개발시에 기본적으로 제공하는 (Box, Text, Image.. 등등의 컴포넌트를 미리 제공해 줍니다.)</p>\\n<pre class=\\\"editor editor-colors\\\"><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"meta import ts\\\"><span class=\\\"keyword control import ts\\\"><span>import</span></span><span>&nbsp;</span><span class=\\\"meta block ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>{</span></span><span class=\\\"variable other readwrite alias ts\\\"><span>Box</span></span><span class=\\\"punctuation separator comma ts\\\"><span>,</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite alias ts\\\"><span>Text</span></span><span class=\\\"punctuation separator comma ts\\\"><span>,</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite alias ts\\\"><span>Image</span></span><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span><span>&nbsp;</span><span class=\\\"keyword control from ts\\\"><span>from</span></span><span>&nbsp;</span><span class=\\\"string quoted single ts\\\"><span class=\\\"punctuation definition string begin ts\\\"><span>&#39;</span></span><span>rebass</span><span class=\\\"punctuation definition string end ts\\\"><span>&#39;</span></span></span></span></span></div></pre>\\n<ol start=\\\"2\\\">\\n<li>일관 된 컴포넌트의 props 개발</li>\\n</ol>\\n<p>  다음 유지보수시 서로 다른 개발자가 작성한 컴포넌트가 아래의 예시와 같다고 했을 때</p>\\n<pre class=\\\"editor editor-colors\\\"><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"keyword operator relational ts\\\"><span>&lt;</span></span><span class=\\\"variable other readwrite ts\\\"><span>CustomButton1</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>type</span></span><span class=\\\"keyword operator assignment ts\\\"><span>=</span></span><span class=\\\"string quoted double ts\\\"><span class=\\\"punctuation definition string begin ts\\\"><span>&quot;</span></span><span>thin</span><span class=\\\"punctuation definition string end ts\\\"><span>&quot;</span></span></span><span class=\\\"keyword operator arithmetic ts\\\"><span>/</span></span><span class=\\\"keyword operator relational ts\\\"><span>&gt;</span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"keyword operator relational ts\\\"><span>&lt;</span></span><span class=\\\"variable other readwrite ts\\\"><span>CustomButton2</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>thin</span></span><span class=\\\"keyword operator arithmetic ts\\\"><span>/</span></span><span class=\\\"keyword operator relational ts\\\"><span>&gt;</span></span></span></div></pre>\\n<p>  다양한 API 형식을 지니는 컴포넌트를 제작할 수 있으며 이는 곧 또다른 유지보수시 큰 시간을 들이게 됩니다.</p>\\n<p>  반면 rebass를 사용한다면 새롭게 props 를 만들 필요가 없을 뿐더러 다른 개발자가 보아도 쉽게 이해 할 수 있습니다.</p>\\n<pre class=\\\"editor editor-colors\\\"><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"keyword operator relational ts\\\"><span>&lt;</span></span><span class=\\\"variable other readwrite ts\\\"><span>CustomButton1</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>p</span></span><span class=\\\"keyword operator assignment ts\\\"><span>=</span></span><span class=\\\"meta objectliteral ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>{</span></span><span>2</span><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span><span>&nbsp;</span><span class=\\\"keyword operator arithmetic ts\\\"><span>/</span></span><span class=\\\"keyword operator relational ts\\\"><span>&gt;</span></span><span>&nbsp;</span><span class=\\\"comment line double-slash ts\\\"><span class=\\\"punctuation definition comment ts\\\"><span>//</span></span><span>&nbsp;padding&nbsp;이&nbsp;테마의&nbsp;scale의&nbsp;2번째&nbsp;값을&nbsp;적용한다.</span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"keyword operator relational ts\\\"><span>&lt;</span></span><span class=\\\"variable other readwrite ts\\\"><span>CustomButton2</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>p</span></span><span class=\\\"keyword operator assignment ts\\\"><span>=</span></span><span class=\\\"meta objectliteral ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>{</span></span><span>3</span><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span><span>&nbsp;</span><span class=\\\"keyword operator arithmetic ts\\\"><span>/</span></span><span class=\\\"keyword operator relational ts\\\"><span>&gt;</span></span><span>&nbsp;</span><span class=\\\"comment line double-slash ts\\\"><span class=\\\"punctuation definition comment ts\\\"><span>//</span></span><span>&nbsp;padding&nbsp;이&nbsp;테마의&nbsp;scale의&nbsp;3번째&nbsp;값을&nbsp;적용한다.</span></span></span></div></pre>\\n<ol start=\\\"3\\\">\\n<li>테마를 우선순위로 사용하면서 일관된 스타일을 유지</li>\\n</ol>\\n<p>  css-in-js 에서도 테마를 지원하지만 기본적으로 우선시 되지는 않습니다. 하지만 rebass 컴포넌트는 테마를 우선 적용하도록 되어있습니다.</p>\\n<ol start=\\\"4\\\">\\n<li>확장성이 용이</li>\\n</ol>\\n<p>  css-in-js에서 사용하도록 하는 <code>styled()</code> 로 확장하는 컴포넌트는 기존 컴포넌트의 API가 복잡할수록 예측 가능하도록 확장하기가 어렵습니다. 반면 rebass로 확장을 하는 경우에는 예측 가능하도록 설계가 되어 있습니다.</p>\\n<pre class=\\\"editor editor-colors\\\"><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"meta import ts\\\"><span class=\\\"keyword control import ts\\\"><span>import</span></span><span>&nbsp;</span><span class=\\\"meta block ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>{</span></span><span class=\\\"variable other readwrite alias ts\\\"><span>Button</span></span><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span><span>&nbsp;</span><span class=\\\"keyword control from ts\\\"><span>from</span></span><span>&nbsp;</span><span class=\\\"string quoted single ts\\\"><span class=\\\"punctuation definition string begin ts\\\"><span>&#39;</span></span><span>rebass</span><span class=\\\"punctuation definition string end ts\\\"><span>&#39;</span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span>&nbsp;&nbsp;</span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"meta function ts\\\"><span class=\\\"storage type function ts\\\"><span>function</span></span><span>&nbsp;</span><span class=\\\"meta definition function ts entity name function ts\\\"><span>CustomButton</span></span><span class=\\\"meta parameters ts\\\"><span class=\\\"punctuation definition parameters begin ts\\\"><span>(</span></span><span class=\\\"punctuation definition parameters end ts\\\"><span>)</span></span></span><span>&nbsp;</span><span class=\\\"meta block ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>{</span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"keyword control flow ts\\\"><span>return</span></span><span class=\\\"cast expr ts\\\"><span>&nbsp;</span><span class=\\\"meta brace angle ts\\\"><span>&lt;</span></span><span class=\\\"entity name type ts\\\"><span>Button</span></span><span>&nbsp;</span><span class=\\\"entity name type ts\\\"><span>sx</span></span><span>=</span><span class=\\\"meta object type ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>{</span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"cast expr ts\\\"><span class=\\\"meta object type ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"meta field declaration ts\\\"><span class=\\\"meta definition property ts variable object property ts\\\"><span>color</span></span><span class=\\\"meta type annotation ts\\\"><span class=\\\"keyword operator type annotation ts\\\"><span>:</span></span><span>&nbsp;</span><span class=\\\"string quoted single ts\\\"><span class=\\\"punctuation definition string begin ts\\\"><span>&#39;</span></span><span>point</span><span class=\\\"punctuation definition string end ts\\\"><span>&#39;</span></span></span><span>&nbsp;</span></span><span class=\\\"comment line double-slash ts\\\"><span class=\\\"punctuation definition comment ts\\\"><span>//</span></span><span>&nbsp;theme에&nbsp;포인트&nbsp;컬러</span></span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"cast expr ts\\\"><span class=\\\"meta object type ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span><span>&nbsp;/</span><span class=\\\"meta brace angle ts\\\"><span>&gt;</span></span><span>&nbsp;</span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span>&nbsp;&nbsp;</span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"keyword operator relational ts\\\"><span>&lt;</span></span><span class=\\\"variable other readwrite ts\\\"><span>CustomButton</span></span><span>&nbsp;</span><span class=\\\"keyword operator arithmetic ts\\\"><span>/</span></span><span class=\\\"keyword operator relational ts\\\"><span>&gt;</span></span><span>&nbsp;</span><span class=\\\"comment line double-slash ts\\\"><span class=\\\"punctuation definition comment ts\\\"><span>//</span></span><span>&nbsp;일반적으로&nbsp;color는&nbsp;point&nbsp;컬러</span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"keyword operator relational ts\\\"><span>&lt;</span></span><span class=\\\"variable other readwrite ts\\\"><span>CustomButton</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>color</span></span><span class=\\\"keyword operator assignment ts\\\"><span>=</span></span><span class=\\\"meta objectliteral ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>{</span></span><span class=\\\"meta object member ts meta object-literal key ts\\\"><span class=\\\"string quoted single ts\\\"><span class=\\\"punctuation definition string begin ts\\\"><span>&#39;</span></span><span>red</span><span class=\\\"punctuation definition string end ts\\\"><span>&#39;</span></span></span><span>}&nbsp;/&gt;&nbsp;//&nbsp;red&nbsp;color로&nbsp;수정</span></span></span></span></div></pre>\\n<h2>추후 theme를 잘 쓰기 위한 노력</h2>\\n<p>스타일에 대한 적절한 추상화 작업이 필요합니다. 최대한 추상화로 정의 내릴 수 있는 디자인은 모두 theme에 녹여내는 작업이 필요 합니다.</p>\\n<p>디자인을 보고 더 이상 쪼갤 수 없는 스타일 요소들을 분류하고 한 스타일 요소에 최대 n개가 넘지 않는 선에서 추상화를 시킵니다.</p>\\n<p>ex) borderRadius 의 경우 smallRadius, mediumRadius, largeRadius</p>\\n<p>이렇게 theme.js 에 디자인 명세를 작성하면 페이지에 들어가는 컴포넌트들은 될 수 있으면 이 명세에 따르도록 만듭니다.\\n피치 못할 경우에는 각 컴포넌트에서 필요한 스타일을 추가 및 오버라이딩 해서 적용합니다.</p>\\n<ol>\\n<li>디자인 가이드로 준 수치는 모두 theme.js 로 설정해 둔다.</li>\\n<li>theme에 있는 수치들은 sx props로 셋팅한다.</li>\\n<li>보통은 atoms 단위에 있는 컴포넌트는 sx로 셋팅한다. ( 다른 컴포넌트에서 확장시 css props로 확장 )</li>\\n<li>moleculos 이상부터는 공간부분을 대부분 theme에서 가져다 쓴다.</li>\\n<li>나머지는 css로 사용하되 json 또는 styled-component의 css helper를 이용하면 간단하게 이용할 수 있을 듯 싶다.</li>\\n</ol>\\n<h2>rebass + typescript</h2>\\n<p>rebass와 typecript를 함께 썼을때 이슈로는 다음과 같습니다.</p>\\n<p>rebass는 css-in-js를 <code>@emotion</code> 기반으로 사용하고 <code>styled-system</code>을 사용하는 것으로 github에서 보았습니다.</p>\\n<pre class=\\\"editor editor-colors\\\"><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"meta import ts\\\"><span class=\\\"keyword control import ts\\\"><span>import</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite alias ts\\\"><span>styled</span></span><span>&nbsp;</span><span class=\\\"keyword control from ts\\\"><span>from</span></span><span>&nbsp;</span><span class=\\\"string quoted single ts\\\"><span class=\\\"punctuation definition string begin ts\\\"><span>&#39;</span></span><span>@emotion/styled</span><span class=\\\"punctuation definition string end ts\\\"><span>&#39;</span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span>&nbsp;&nbsp;</span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"meta var expr ts\\\"><span class=\\\"keyword control export ts\\\"><span>export</span></span><span>&nbsp;</span><span class=\\\"storage type ts\\\"><span>const</span></span><span>&nbsp;</span><span class=\\\"meta var-single-variable expr ts\\\"><span class=\\\"meta definition variable ts variable other readwrite ts\\\"><span>Box</span></span><span>&nbsp;</span></span><span class=\\\"keyword operator assignment ts\\\"><span>=</span></span><span>&nbsp;</span><span class=\\\"meta function-call ts\\\"><span class=\\\"entity name function ts\\\"><span>styled</span></span></span><span class=\\\"meta brace round ts\\\"><span>(</span></span><span class=\\\"string quoted single ts\\\"><span class=\\\"punctuation definition string begin ts\\\"><span>&#39;</span></span><span>div</span><span class=\\\"punctuation definition string end ts\\\"><span>&#39;</span></span></span><span class=\\\"punctuation separator comma ts\\\"><span>,</span></span><span>&nbsp;</span><span class=\\\"meta objectliteral ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>{</span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta var expr ts\\\"><span class=\\\"meta objectliteral ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"meta object member ts\\\"><span class=\\\"variable other readwrite ts\\\"><span>shouldForwardProp</span></span><span>&nbsp;</span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta var expr ts\\\"><span class=\\\"meta objectliteral ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span><span class=\\\"meta brace round ts\\\"><span>)</span><span>(</span></span><span class=\\\"meta objectliteral ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>{</span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta var expr ts\\\"><span class=\\\"meta objectliteral ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"meta object member ts\\\"><span class=\\\"meta object-literal key ts\\\"><span>boxSizing</span></span><span class=\\\"meta object-literal key ts punctuation separator key-value ts\\\"><span>:</span></span><span>&nbsp;</span><span class=\\\"string quoted single ts\\\"><span class=\\\"punctuation definition string begin ts\\\"><span>&#39;</span></span><span>border-box</span><span class=\\\"punctuation definition string end ts\\\"><span>&#39;</span></span></span></span><span class=\\\"punctuation separator comma ts\\\"><span>,</span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta var expr ts\\\"><span class=\\\"meta objectliteral ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"meta object member ts\\\"><span class=\\\"meta object-literal key ts\\\"><span>margin</span></span><span class=\\\"meta object-literal key ts punctuation separator key-value ts\\\"><span>:</span></span><span>&nbsp;</span><span class=\\\"constant numeric decimal ts\\\"><span>0</span></span></span><span class=\\\"punctuation separator comma ts\\\"><span>,</span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta var expr ts\\\"><span class=\\\"meta objectliteral ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"meta object member ts\\\"><span class=\\\"meta object-literal key ts\\\"><span>minWidth</span></span><span class=\\\"meta object-literal key ts punctuation separator key-value ts\\\"><span>:</span></span><span>&nbsp;</span><span class=\\\"constant numeric decimal ts\\\"><span>0</span></span></span><span class=\\\"punctuation separator comma ts\\\"><span>,</span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta var expr ts\\\"><span class=\\\"meta objectliteral ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span><span class=\\\"punctuation separator comma ts\\\"><span>,</span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta var expr ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>base</span></span><span class=\\\"punctuation separator comma ts\\\"><span>,</span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta var expr ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>variant</span></span><span class=\\\"punctuation separator comma ts\\\"><span>,</span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta var expr ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>sx</span></span><span class=\\\"punctuation separator comma ts\\\"><span>,</span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta var expr ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"meta arrow ts\\\"><span class=\\\"variable parameter ts\\\"><span>props</span></span><span>&nbsp;</span><span class=\\\"storage type function arrow ts\\\"><span>=&gt;</span></span><span>&nbsp;</span></span><span class=\\\"variable other object ts\\\"><span>props</span></span><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"variable other property ts\\\"><span>css</span></span><span class=\\\"punctuation separator comma ts\\\"><span>,</span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta var expr ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"meta function-call ts\\\"><span class=\\\"entity name function ts\\\"><span>compose</span></span></span><span class=\\\"meta brace round ts\\\"><span>(</span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta var expr ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>space</span></span><span class=\\\"punctuation separator comma ts\\\"><span>,</span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta var expr ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>layout</span></span><span class=\\\"punctuation separator comma ts\\\"><span>,</span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta var expr ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>typography</span></span><span class=\\\"punctuation separator comma ts\\\"><span>,</span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta var expr ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>color</span></span><span class=\\\"punctuation separator comma ts\\\"><span>,</span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta var expr ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>flexbox</span></span><span class=\\\"punctuation separator comma ts\\\"><span>,</span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta var expr ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"meta brace round ts\\\"><span>)</span></span><span class=\\\"punctuation separator comma ts\\\"><span>,</span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta var expr ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"meta brace round ts\\\"><span>)</span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span>&nbsp;&nbsp;</span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"meta interface ts\\\"><span class=\\\"storage type interface ts\\\"><span>interface</span></span><span>&nbsp;</span><span class=\\\"entity name type interface ts\\\"><span>BoxKnownProps</span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta interface ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"storage modifier ts\\\"><span>extends</span></span><span>&nbsp;</span><span class=\\\"entity other inherited-class ts\\\"><span>BaseProps</span></span><span class=\\\"punctuation separator comma ts\\\"><span>,</span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta interface ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"entity name type module ts\\\"><span>StyledSystem</span></span><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"entity other inherited-class ts\\\"><span>SpaceProps</span></span><span class=\\\"punctuation separator comma ts\\\"><span>,</span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta interface ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"entity name type module ts\\\"><span>StyledSystem</span></span><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"entity other inherited-class ts\\\"><span>LayoutProps</span></span><span class=\\\"punctuation separator comma ts\\\"><span>,</span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta interface ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"entity name type module ts\\\"><span>StyledSystem</span></span><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"entity other inherited-class ts\\\"><span>FontSizeProps</span></span><span class=\\\"punctuation separator comma ts\\\"><span>,</span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta interface ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"entity name type module ts\\\"><span>StyledSystem</span></span><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"entity other inherited-class ts\\\"><span>ColorProps</span></span><span class=\\\"punctuation separator comma ts\\\"><span>,</span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta interface ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"entity name type module ts\\\"><span>StyledSystem</span></span><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"entity other inherited-class ts\\\"><span>FlexProps</span></span><span class=\\\"punctuation separator comma ts\\\"><span>,</span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta interface ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"entity name type module ts\\\"><span>StyledSystem</span></span><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"entity other inherited-class ts\\\"><span>OrderProps</span></span><span class=\\\"punctuation separator comma ts\\\"><span>,</span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta interface ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"entity name type module ts\\\"><span>StyledSystem</span></span><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"entity other inherited-class ts\\\"><span>AlignSelfProps</span></span><span class=\\\"punctuation separator comma ts\\\"><span>,</span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta interface ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"entity other inherited-class ts\\\"><span>SxProps</span></span><span>&nbsp;</span><span class=\\\"punctuation definition block ts\\\"><span>{</span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta interface ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"meta field declaration ts\\\"><span class=\\\"meta definition property ts variable object property ts\\\"><span>variant</span></span><span class=\\\"keyword operator optional ts\\\"><span>?</span></span><span class=\\\"meta type annotation ts\\\"><span class=\\\"keyword operator type annotation ts\\\"><span>:</span></span><span>&nbsp;</span><span class=\\\"entity name type module ts\\\"><span>StyledSystem</span></span><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"entity name type ts\\\"><span>ResponsiveValue</span></span><span class=\\\"meta type parameters ts\\\"><span class=\\\"punctuation definition typeparameters begin ts\\\"><span>&lt;</span></span><span class=\\\"support type primitive ts\\\"><span>string</span></span><span class=\\\"punctuation definition typeparameters end ts\\\"><span>&gt;</span></span></span></span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta interface ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"meta field declaration ts\\\"><span class=\\\"meta definition property ts variable object property ts\\\"><span>tx</span></span><span class=\\\"keyword operator optional ts\\\"><span>?</span></span><span class=\\\"meta type annotation ts\\\"><span class=\\\"keyword operator type annotation ts\\\"><span>:</span></span><span>&nbsp;</span><span class=\\\"support type primitive ts\\\"><span>string</span></span></span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta interface ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"meta interface ts\\\"><span class=\\\"keyword control export ts\\\"><span>export</span></span><span>&nbsp;</span><span class=\\\"storage type interface ts\\\"><span>interface</span></span><span>&nbsp;</span><span class=\\\"entity name type interface ts\\\"><span>BoxProps</span></span><span>&nbsp;</span><span class=\\\"storage modifier ts\\\"><span>extends</span></span><span>&nbsp;</span><span class=\\\"entity other inherited-class ts\\\"><span>BoxKnownProps</span></span><span class=\\\"punctuation separator comma ts\\\"><span>,</span></span><span>&nbsp;</span><span class=\\\"entity other inherited-class ts\\\"><span>Omit</span></span><span class=\\\"meta type parameters ts\\\"><span class=\\\"punctuation definition typeparameters begin ts\\\"><span>&lt;</span></span><span class=\\\"entity name type module ts\\\"><span>React</span></span><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"entity name type ts\\\"><span>HTMLProps</span></span><span class=\\\"meta type parameters ts\\\"><span class=\\\"punctuation definition typeparameters begin ts\\\"><span>&lt;</span></span><span class=\\\"entity name type ts\\\"><span>HTMLDivElement</span></span><span class=\\\"punctuation definition typeparameters end ts\\\"><span>&gt;</span></span></span><span class=\\\"punctuation separator comma ts\\\"><span>,</span></span><span>&nbsp;</span><span class=\\\"keyword operator expression keyof ts\\\"><span>keyof</span></span><span>&nbsp;</span><span class=\\\"entity name type ts\\\"><span>BoxKnownProps</span></span><span class=\\\"punctuation definition typeparameters end ts\\\"><span>&gt;</span></span></span><span>&nbsp;</span><span class=\\\"punctuation definition block ts\\\"><span>{</span><span>}</span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"meta var expr ts\\\"><span class=\\\"keyword control export ts\\\"><span>export</span></span><span>&nbsp;</span><span class=\\\"storage type ts\\\"><span>const</span></span><span>&nbsp;</span><span class=\\\"meta var-single-variable expr ts\\\"><span class=\\\"meta definition variable ts variable other readwrite ts\\\"><span>Box</span></span><span class=\\\"meta type annotation ts\\\"><span class=\\\"keyword operator type annotation ts\\\"><span>:</span></span><span>&nbsp;</span><span class=\\\"entity name type module ts\\\"><span>React</span></span><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"entity name type ts\\\"><span>FunctionComponent</span></span><span class=\\\"meta type parameters ts\\\"><span class=\\\"punctuation definition typeparameters begin ts\\\"><span>&lt;</span></span><span class=\\\"entity name type ts\\\"><span>BoxProps</span></span><span class=\\\"punctuation definition typeparameters end ts\\\"><span>&gt;</span></span></span></span></span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></div></pre>\\n<p>하지만 다른 컴포넌트에서 <code>@emotion/core</code>를 import 할 경우 css에 대한 충돌이 발생 합니다.</p>\\n<p><code>@emotion/core</code> 에서 사용하는 css type 은</p>\\n<pre class=\\\"editor editor-colors\\\"><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"storage modifier ts\\\"><span>declare</span></span><span>&nbsp;</span><span class=\\\"support variable object node ts\\\"><span>global</span></span><span>&nbsp;</span><span class=\\\"meta block ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>{</span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"meta namespace declaration ts\\\"><span class=\\\"storage type namespace ts\\\"><span>namespace</span></span><span>&nbsp;</span><span class=\\\"entity name type module ts\\\"><span>JSX</span></span><span>&nbsp;</span><span class=\\\"meta block ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>{</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta namespace declaration ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"comment block documentation ts\\\"><span class=\\\"punctuation definition comment ts\\\"><span>/**</span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta namespace declaration ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"comment block documentation ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;Do&nbsp;we&nbsp;need&nbsp;to&nbsp;modify&nbsp;`LibraryManagedAttributes`&nbsp;too,</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta namespace declaration ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"comment block documentation ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;to&nbsp;make&nbsp;`className`&nbsp;props&nbsp;optional&nbsp;when&nbsp;`css`&nbsp;props&nbsp;is&nbsp;specified?</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta namespace declaration ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"comment block documentation ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"punctuation definition comment ts\\\"><span>*/</span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta namespace declaration ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;</span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta namespace declaration ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"meta interface ts\\\"><span class=\\\"storage type interface ts\\\"><span>interface</span></span><span>&nbsp;</span><span class=\\\"entity name type interface ts\\\"><span>IntrinsicAttributes</span></span><span>&nbsp;</span><span class=\\\"punctuation definition block ts\\\"><span>{</span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta namespace declaration ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta interface ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"meta field declaration ts\\\"><span class=\\\"meta definition property ts variable object property ts\\\"><span>css</span></span><span class=\\\"keyword operator optional ts\\\"><span>?</span></span><span class=\\\"meta type annotation ts\\\"><span class=\\\"keyword operator type annotation ts\\\"><span>:</span></span><span>&nbsp;</span><span class=\\\"entity name type ts\\\"><span>InterpolationWithTheme</span></span><span class=\\\"meta type parameters ts\\\"><span class=\\\"punctuation definition typeparameters begin ts\\\"><span>&lt;</span></span><span class=\\\"support type primitive ts\\\"><span>any</span></span><span class=\\\"punctuation definition typeparameters end ts\\\"><span>&gt;</span></span></span></span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta namespace declaration ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta interface ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"meta namespace declaration ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span></span></div></pre>\\n<p>rebass 의 css type을 살펴보면</p>\\n<pre class=\\\"editor editor-colors\\\"><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"meta import ts\\\"><span class=\\\"keyword control import ts\\\"><span>import</span></span><span>&nbsp;</span><span class=\\\"constant language import-export-all ts\\\"><span>*</span></span><span>&nbsp;</span><span class=\\\"keyword control as ts\\\"><span>as</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite alias ts\\\"><span>StyledComponents</span></span><span>&nbsp;</span><span class=\\\"keyword control from ts\\\"><span>from</span></span><span>&nbsp;</span><span class=\\\"string quoted single ts\\\"><span class=\\\"punctuation definition string begin ts\\\"><span>&#39;</span></span><span>styled-components</span><span class=\\\"punctuation definition string end ts\\\"><span>&#39;</span></span></span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span>&nbsp;&nbsp;</span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"meta interface ts\\\"><span class=\\\"keyword control export ts\\\"><span>export</span></span><span>&nbsp;</span><span class=\\\"storage type interface ts\\\"><span>interface</span></span><span>&nbsp;</span><span class=\\\"entity name type interface ts\\\"><span>BaseProps</span></span><span>&nbsp;</span><span class=\\\"storage modifier ts\\\"><span>extends</span></span><span>&nbsp;</span><span class=\\\"entity name type module ts\\\"><span>React</span></span><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"entity other inherited-class ts\\\"><span>RefAttributes</span></span><span class=\\\"meta type parameters ts\\\"><span class=\\\"punctuation definition typeparameters begin ts\\\"><span>&lt;</span></span><span class=\\\"support type primitive ts\\\"><span>any</span></span><span class=\\\"punctuation definition typeparameters end ts\\\"><span>&gt;</span></span></span><span>&nbsp;</span><span class=\\\"punctuation definition block ts\\\"><span>{</span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta interface ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"meta field declaration ts\\\"><span class=\\\"meta definition property ts variable object property ts\\\"><span>as</span></span><span class=\\\"keyword operator optional ts\\\"><span>?</span></span><span class=\\\"meta type annotation ts\\\"><span class=\\\"keyword operator type annotation ts\\\"><span>:</span></span><span>&nbsp;</span><span class=\\\"entity name type module ts\\\"><span>React</span></span><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"entity name type ts\\\"><span>ElementType</span></span></span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta interface ts\\\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\\\"meta field declaration ts\\\"><span class=\\\"meta definition property ts variable object property ts\\\"><span>css</span></span><span class=\\\"keyword operator optional ts\\\"><span>?</span></span><span class=\\\"meta type annotation ts\\\"><span class=\\\"keyword operator type annotation ts\\\"><span>:</span></span><span>&nbsp;</span><span class=\\\"entity name type module ts\\\"><span>StyledComponents</span></span><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"entity name type ts\\\"><span>CSSObject</span></span><span>&nbsp;</span><span class=\\\"keyword operator type ts\\\"><span>|</span></span><span>&nbsp;</span><span class=\\\"entity name type module ts\\\"><span>StyledComponents</span></span><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"entity name type ts\\\"><span>FlattenSimpleInterpolation</span></span><span>&nbsp;</span><span class=\\\"keyword operator type ts\\\"><span>|</span></span><span>&nbsp;</span><span class=\\\"support type primitive ts\\\"><span>string</span></span></span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta interface ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span></span></div></pre>\\n<p>여기서 rebass의 css props는 왜 StyledComponents 를 아직도 type으로 지정하는지는 아직 파악이 안됩니다.</p>\\n<h2>rebass 느낀점</h2>\\n<p>디자이너가 있다면 어느정도 디자인에 대한 <code>system</code>을 만들어 두고 시작하면 좀 더 손쉽게 쓸 수 있을거 같습니다.\\n여기서 디자인 <code>system</code>은 간단하게 디자인 가이드 정도 생각하면 될 듯 싶습니다.\\n스타일 어디까지를 테마로 뺴두어야 할지의 경계를 정하지 못한다면 theme.js가 자칫 의미가 없어질 수 있습니다.</p>\\n<p>장점을 정리해보면 다음과 같습니다.</p>\\n<ol>\\n<li>테마를 우선순위로</li>\\n<li>일관된 props ( 모양과 행동으로 구체적인 props를 갖는게 좋음.)</li>\\n<li>컴포넌트의 계층 구조를 손쉽게 생각할 수 있게 해줌.</li>\\n<li>컴포넌트 확장에 용이</li>\\n</ol>\\n<h3>아쉬웠던 점</h3>\\n<p>css-in-js 들에는 develop 할 경우 css 네이밍을 개발자가 정해놓은 룰에 따라서 네이밍을 붙여주기도 합니다.</p>\\n<p>특히 <code>@emotion</code> 에서는 <a href=\\\"https://emotion.sh/docs/babel-plugin-emotion\\\">https://emotion.sh/docs/babel-plugin-emotion</a> 를 사용하면 css 네이밍을 붙여줍니다.</p>\\n<p>이는 개발자 도구에서도 어느 컴포넌트에서 렌더링이 되었는지 한눈에 알아 볼 수 있습니다.</p>\\n<ul>\\n<li><code>rebass</code>에서 <code>@emotion/styled</code> 를 사용하고 있어서 위 플러그인을 사용함.</li>\\n</ul>\\n<p>하지만 <code>rebass</code> 에서는 다음의 경우에만 css 네이밍을 붙여 줍니다.</p>\\n<ol>\\n<li>props로 css 속성이 들어간 컴포넌트 : babel config에 정해진 룰대로 자동으로 css 네이밍을 붙여줍니다.</li>\\n<li>sx props 안에 label property가 존재하는 경우 : label의 값으로 css 네이밍을 붙여줍니다.</li>\\n</ol>\\n<h2>styled component로 비슷하게 만들어 보기</h2>\\n<p>추가적으로 테마를 사용하지 않을 경우에 styled component 모듈로도 이렇게 primitive UI Component를 만들어 볼 수 있을 것이다.</p>\\n<p>해서 한번 도전해 보았다.\\n쉬운 <code>Atom</code>의 <code>Box Component</code> 는 다음과 같이 만들 수 있을 꺼 같습니다.</p>\\n<pre class=\\\"editor editor-colors\\\"><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta import ts\\\"><span class=\\\"keyword control import ts\\\"><span>import</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite alias ts\\\"><span>React</span></span><span>&nbsp;</span><span class=\\\"keyword control from ts\\\"><span>from</span></span><span>&nbsp;</span><span class=\\\"string quoted double ts\\\"><span class=\\\"punctuation definition string begin ts\\\"><span>&quot;</span></span><span>react</span><span class=\\\"punctuation definition string end ts\\\"><span>&quot;</span></span></span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta import ts\\\"><span class=\\\"keyword control import ts\\\"><span>import</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite alias ts\\\"><span>styled</span></span><span class=\\\"punctuation separator comma ts\\\"><span>,</span></span><span>&nbsp;</span><span class=\\\"meta block ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>{</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite alias ts\\\"><span>FlattenSimpleInterpolation</span></span><span>&nbsp;</span><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span><span>&nbsp;</span><span class=\\\"keyword control from ts\\\"><span>from</span></span><span>&nbsp;</span><span class=\\\"string quoted double ts\\\"><span class=\\\"punctuation definition string begin ts\\\"><span>&quot;</span></span><span>styled-components</span><span class=\\\"punctuation definition string end ts\\\"><span>&quot;</span></span></span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span>&nbsp;</span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta type declaration ts\\\"><span class=\\\"storage type type ts\\\"><span>type</span></span><span>&nbsp;</span><span class=\\\"entity name type alias ts\\\"><span>BoxProps</span></span><span>&nbsp;</span><span class=\\\"keyword operator assignment ts\\\"><span>=</span></span><span>&nbsp;</span><span class=\\\"meta object type ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>{</span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta type declaration ts\\\"><span class=\\\"meta object type ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"meta field declaration ts\\\"><span class=\\\"meta definition property ts variable object property ts\\\"><span>children</span></span><span class=\\\"keyword operator optional ts\\\"><span>?</span></span><span class=\\\"meta type annotation ts\\\"><span class=\\\"keyword operator type annotation ts\\\"><span>:</span></span><span>&nbsp;</span><span class=\\\"entity name type module ts\\\"><span>React</span></span><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"entity name type ts\\\"><span>ReactNode</span></span></span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta type declaration ts\\\"><span class=\\\"meta object type ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"meta field declaration ts\\\"><span class=\\\"meta definition property ts variable object property ts\\\"><span>css</span></span><span class=\\\"keyword operator optional ts\\\"><span>?</span></span><span class=\\\"meta type annotation ts\\\"><span class=\\\"keyword operator type annotation ts\\\"><span>:</span></span><span>&nbsp;</span><span class=\\\"entity name type ts\\\"><span>FlattenSimpleInterpolation</span></span></span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta type declaration ts\\\"><span class=\\\"meta object type ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta type declaration ts\\\"><span class=\\\"storage type type ts\\\"><span>type</span></span><span>&nbsp;</span><span class=\\\"entity name type alias ts\\\"><span>BoxStyledProps</span></span><span>&nbsp;</span><span class=\\\"keyword operator assignment ts\\\"><span>=</span></span><span>&nbsp;</span><span class=\\\"meta object type ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>{</span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta type declaration ts\\\"><span class=\\\"meta object type ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"meta field declaration ts\\\"><span class=\\\"meta definition property ts variable object property ts\\\"><span>css</span></span><span class=\\\"keyword operator optional ts\\\"><span>?</span></span><span class=\\\"meta type annotation ts\\\"><span class=\\\"keyword operator type annotation ts\\\"><span>:</span></span><span>&nbsp;</span><span class=\\\"entity name type ts\\\"><span>FlattenSimpleInterpolation</span></span></span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta type declaration ts\\\"><span class=\\\"meta object type ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span>&nbsp;</span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta var expr ts\\\"><span class=\\\"storage type ts\\\"><span>const</span></span><span>&nbsp;</span><span class=\\\"meta var-single-variable expr ts\\\"><span class=\\\"meta definition variable ts variable other readwrite ts\\\"><span>BoxStyled</span></span><span>&nbsp;</span></span><span class=\\\"keyword operator assignment ts\\\"><span>=</span></span><span>&nbsp;</span><span class=\\\"variable other object ts\\\"><span>styled</span></span><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"variable other property ts\\\"><span>div</span></span><span class=\\\"keyword operator relational ts\\\"><span>&lt;</span></span><span class=\\\"variable other readwrite ts\\\"><span>BoxStyledProps</span></span><span class=\\\"keyword operator relational ts\\\"><span>&gt;</span></span><span class=\\\"string template ts\\\"><span class=\\\"punctuation definition string template begin ts\\\"><span>`</span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta var expr ts\\\"><span class=\\\"string template ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"meta template expression ts\\\"><span class=\\\"punctuation definition template-expression begin ts\\\"><span>${</span></span><span class=\\\"meta embedded line ts\\\"><span class=\\\"meta arrow ts\\\"><span class=\\\"variable parameter ts\\\"><span>props</span></span><span>&nbsp;</span><span class=\\\"storage type function arrow ts\\\"><span>=&gt;</span></span><span>&nbsp;</span></span><span class=\\\"meta brace round ts\\\"><span>(</span></span><span class=\\\"variable other object ts\\\"><span>props</span></span><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"variable other property ts\\\"><span>css</span></span><span>&nbsp;</span><span class=\\\"keyword operator ternary ts\\\"><span>?</span></span><span>&nbsp;</span><span class=\\\"variable other object ts\\\"><span>props</span></span><span class=\\\"punctuation accessor ts\\\"><span>.</span></span><span class=\\\"variable other property ts\\\"><span>css</span></span><span>&nbsp;</span><span class=\\\"keyword operator ternary ts\\\"><span>:</span></span><span>&nbsp;</span><span class=\\\"string quoted double ts\\\"><span class=\\\"punctuation definition string begin ts\\\"><span>&quot;</span></span><span class=\\\"punctuation definition string end ts\\\"><span>&quot;</span></span></span><span class=\\\"meta brace round ts\\\"><span>)</span></span></span><span class=\\\"punctuation definition template-expression end ts\\\"><span>}</span></span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta var expr ts\\\"><span class=\\\"string template ts\\\"><span class=\\\"punctuation definition string template end ts\\\"><span>`</span></span></span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span>&nbsp;</span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"storage type function ts\\\"><span>function</span></span><span>&nbsp;</span><span class=\\\"meta definition function ts entity name function ts\\\"><span>Box</span></span><span class=\\\"meta parameters ts\\\"><span class=\\\"punctuation definition parameters begin ts\\\"><span>(</span></span><span class=\\\"meta parameter object-binding-pattern ts\\\"><span class=\\\"punctuation definition binding-pattern object ts\\\"><span>{</span></span><span>&nbsp;</span><span class=\\\"variable parameter ts\\\"><span>children</span></span><span class=\\\"punctuation separator comma ts\\\"><span>,</span></span><span>&nbsp;</span><span class=\\\"variable parameter ts\\\"><span>css</span></span><span>&nbsp;</span><span class=\\\"punctuation definition binding-pattern object ts\\\"><span>}</span></span></span><span class=\\\"meta type annotation ts\\\"><span class=\\\"keyword operator type annotation ts\\\"><span>:</span></span><span>&nbsp;</span><span class=\\\"entity name type ts\\\"><span>BoxProps</span></span></span><span class=\\\"punctuation definition parameters end ts\\\"><span>)</span></span></span><span>&nbsp;</span><span class=\\\"meta block ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>{</span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span>&nbsp;&nbsp;</span><span class=\\\"keyword control flow ts\\\"><span>return</span></span><span class=\\\"cast expr ts\\\"><span>&nbsp;</span><span class=\\\"meta brace angle ts\\\"><span>&lt;</span></span><span class=\\\"entity name type ts\\\"><span>BoxStyled</span></span><span>&nbsp;</span><span class=\\\"entity name type ts\\\"><span>css</span></span><span>=</span><span class=\\\"meta object type ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>{</span></span><span class=\\\"entity name type ts\\\"><span>css</span></span><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span><span class=\\\"meta brace angle ts\\\"><span>&gt;</span></span></span><span class=\\\"meta block ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>{</span></span><span class=\\\"variable other readwrite ts\\\"><span>children</span></span><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span><span class=\\\"keyword operator relational ts\\\"><span>&lt;</span></span><span class=\\\"keyword operator arithmetic ts\\\"><span>/</span></span><span class=\\\"variable other readwrite ts\\\"><span>BoxStyled</span></span><span class=\\\"keyword operator relational ts\\\"><span>&gt;</span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta function ts\\\"><span class=\\\"meta block ts\\\"><span class=\\\"punctuation definition block ts\\\"><span>}</span></span></span></span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span>&nbsp;</span></span></div><div class=\\\"line\\\"><span class=\\\"source ts\\\"><span class=\\\"meta export default ts\\\"><span class=\\\"keyword control export ts\\\"><span>export</span></span><span>&nbsp;</span><span class=\\\"keyword control default ts\\\"><span>default</span></span><span>&nbsp;</span><span class=\\\"variable other readwrite ts\\\"><span>Box</span></span></span><span class=\\\"punctuation terminator statement ts\\\"><span>;</span></span></span></div></pre>\\n<h2>참고</h2>\\n<p>styled-system 사용법 : <a href=\\\"https://varun.ca/styled-system/\\\">https://varun.ca/styled-system/</a></p>\\n<p>styled-component와 styled-system을 함께 사용했을때 이점 : <a href=\\\"https://medium.com/styled-components/build-better-component-libraries-with-styled-system-4951653d54ee\\\">https://medium.com/styled-components/build-better-component-libraries-with-styled-system-4951653d54ee</a></p>\\n<p>styled-system 신조 : <a href=\\\"https://jxnblk.com/blog/the-three-tenets-of-styled-system/\\\">https://jxnblk.com/blog/the-three-tenets-of-styled-system/</a></p>\\n<p>디자인 시스템 1 : <a href=\\\"https://medium.muz.li/what-is-a-design-system-1e43d19e7696\\\">https://medium.muz.li/what-is-a-design-system-1e43d19e7696</a></p>\\n<p>디자인 시스템 2 : <a href=\\\"https://medium.com/sketch-app-sources/design-system-principles-service-design-c3e439666b97\\\">https://medium.com/sketch-app-sources/design-system-principles-service-design-c3e439666b97</a></p>\\n<p>디자인 시스템 3 : <a href=\\\"https://medium.com/guleum/%EB%94%94%EC%9E%90%EC%9D%B8-%EC%8B%9C%EC%8A%A4%ED%85%9C%EC%9D%84-%EA%B5%AC%EC%84%B1%ED%95%98%EB%8A%94-%EB%B0%A9%EB%B2%95-beefa8214884\\\">https://medium.com/guleum/%EB%94%94%EC%9E%90%EC%9D%B8-%EC%8B%9C%EC%8A%A4%ED%85%9C%EC%9D%84-%EA%B5%AC%EC%84%B1%ED%95%98%EB%8A%94-%EB%B0%A9%EB%B2%95-beefa8214884</a></p>\",\"frontmatter\":{\"title\":\"Hello rebass\",\"date\":\"March 09, 2020\"}}},\"pathContext\":{\"slug\":\"/hello-rebass/\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/hello-rebass.json\n// module id = 512\n// module chunks = 106302953868833"],"sourceRoot":""}